[
    {
        "name": "ascii()",
        "type": "Built-in Functions",
        "path": "library/functions#ascii"
    },
    {
        "name": "AssertionError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#AssertionError"
    },
    {
        "name": "asynchat",
        "type": "Networking",
        "path": "library/asynchat"
    },
    {
        "name": "asynchat.async_chat",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat"
    },
    {
        "name": "asynchat.async_chat.ac_in_buffer_size",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.ac_in_buffer_size"
    },
    {
        "name": "asynchat.async_chat.ac_out_buffer_size",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.ac_out_buffer_size"
    },
    {
        "name": "asynchat.async_chat.close_when_done()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.close_when_done"
    },
    {
        "name": "asynchat.async_chat.collect_incoming_data()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.collect_incoming_data"
    },
    {
        "name": "asynchat.async_chat.discard_buffers()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.discard_buffers"
    },
    {
        "name": "asynchat.async_chat.found_terminator()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.found_terminator"
    },
    {
        "name": "asynchat.async_chat.get_terminator()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.get_terminator"
    },
    {
        "name": "asynchat.async_chat.push()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.push"
    },
    {
        "name": "asynchat.async_chat.push_with_producer()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.push_with_producer"
    },
    {
        "name": "asynchat.async_chat.set_terminator()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.async_chat.set_terminator"
    },
    {
        "name": "asynchat.fifo",
        "type": "Networking",
        "path": "library/asynchat#asynchat.fifo"
    },
    {
        "name": "asynchat.fifo.first()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.fifo.first"
    },
    {
        "name": "asynchat.fifo.is_empty()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.fifo.is_empty"
    },
    {
        "name": "asynchat.fifo.pop()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.fifo.pop"
    },
    {
        "name": "asynchat.fifo.push()",
        "type": "Networking",
        "path": "library/asynchat#asynchat.fifo.push"
    },
    {
        "name": "asyncio",
        "type": "Networking",
        "path": "library/asyncio"
    },
    {
        "name": "asyncio.AbstractEventLoopPolicy",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.AbstractEventLoopPolicy"
    },
    {
        "name": "asyncio.AbstractEventLoopPolicy.get_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.AbstractEventLoopPolicy.get_event_loop"
    },
    {
        "name": "asyncio.AbstractEventLoopPolicy.new_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.AbstractEventLoopPolicy.new_event_loop"
    },
    {
        "name": "asyncio.AbstractEventLoopPolicy.set_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.AbstractEventLoopPolicy.set_event_loop"
    },
    {
        "name": "asyncio.async()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.async"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.communicate()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.communicate"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.kill()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.kill"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.pid",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.pid"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.returncode",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.returncode"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.send_signal()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.send_signal"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.stderr",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.stderr"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.stdin",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.stdin"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.stdout",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.stdout"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.terminate()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.terminate"
    },
    {
        "name": "asyncio.asyncio.subprocess.Process.wait()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.asyncio.subprocess.Process.wait"
    },
    {
        "name": "asyncio.as_completed()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.as_completed"
    },
    {
        "name": "asyncio.BaseEventLoop",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop"
    },
    {
        "name": "asyncio.BaseEventLoop.add_reader()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.add_reader"
    },
    {
        "name": "asyncio.BaseEventLoop.add_signal_handler()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.add_signal_handler"
    },
    {
        "name": "asyncio.BaseEventLoop.add_writer()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.add_writer"
    },
    {
        "name": "asyncio.BaseEventLoop.call_at()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.call_at"
    },
    {
        "name": "asyncio.BaseEventLoop.call_exception_handler()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.call_exception_handler"
    },
    {
        "name": "asyncio.BaseEventLoop.call_later()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.call_later"
    },
    {
        "name": "asyncio.BaseEventLoop.call_soon()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.call_soon"
    },
    {
        "name": "asyncio.BaseEventLoop.call_soon_threadsafe()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.call_soon_threadsafe"
    },
    {
        "name": "asyncio.BaseEventLoop.close()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.close"
    },
    {
        "name": "asyncio.BaseEventLoop.connect_read_pipe()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.connect_read_pipe"
    },
    {
        "name": "asyncio.BaseEventLoop.connect_write_pipe()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.connect_write_pipe"
    },
    {
        "name": "asyncio.BaseEventLoop.create_connection()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_connection"
    },
    {
        "name": "asyncio.BaseEventLoop.create_datagram_endpoint()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_datagram_endpoint"
    },
    {
        "name": "asyncio.BaseEventLoop.create_server()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_server"
    },
    {
        "name": "asyncio.BaseEventLoop.create_task()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_task"
    },
    {
        "name": "asyncio.BaseEventLoop.create_unix_connection()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_unix_connection"
    },
    {
        "name": "asyncio.BaseEventLoop.create_unix_server()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.create_unix_server"
    },
    {
        "name": "asyncio.BaseEventLoop.default_exception_handler()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.default_exception_handler"
    },
    {
        "name": "asyncio.BaseEventLoop.getaddrinfo()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.getaddrinfo"
    },
    {
        "name": "asyncio.BaseEventLoop.getnameinfo()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.getnameinfo"
    },
    {
        "name": "asyncio.BaseEventLoop.get_debug()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.get_debug"
    },
    {
        "name": "asyncio.BaseEventLoop.is_closed()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.is_closed"
    },
    {
        "name": "asyncio.BaseEventLoop.is_running()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.is_running"
    },
    {
        "name": "asyncio.BaseEventLoop.remove_reader()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.remove_reader"
    },
    {
        "name": "asyncio.BaseEventLoop.remove_signal_handler()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.remove_signal_handler"
    },
    {
        "name": "asyncio.BaseEventLoop.remove_writer()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.remove_writer"
    },
    {
        "name": "asyncio.BaseEventLoop.run_forever()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.run_forever"
    },
    {
        "name": "asyncio.BaseEventLoop.run_in_executor()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.run_in_executor"
    },
    {
        "name": "asyncio.BaseEventLoop.run_until_complete()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.run_until_complete"
    },
    {
        "name": "asyncio.BaseEventLoop.set_debug()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.set_debug"
    },
    {
        "name": "asyncio.BaseEventLoop.set_default_executor()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.set_default_executor"
    },
    {
        "name": "asyncio.BaseEventLoop.set_exception_handler()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.set_exception_handler"
    },
    {
        "name": "asyncio.BaseEventLoop.sock_accept()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.sock_accept"
    },
    {
        "name": "asyncio.BaseEventLoop.sock_connect()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.sock_connect"
    },
    {
        "name": "asyncio.BaseEventLoop.sock_recv()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.sock_recv"
    },
    {
        "name": "asyncio.BaseEventLoop.sock_sendall()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.sock_sendall"
    },
    {
        "name": "asyncio.BaseEventLoop.stop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.stop"
    },
    {
        "name": "asyncio.BaseEventLoop.subprocess_exec()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.BaseEventLoop.subprocess_exec"
    },
    {
        "name": "asyncio.BaseEventLoop.subprocess_shell()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.BaseEventLoop.subprocess_shell"
    },
    {
        "name": "asyncio.BaseEventLoop.time()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.BaseEventLoop.time"
    },
    {
        "name": "asyncio.BaseProtocol.connection_lost()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseProtocol.connection_lost"
    },
    {
        "name": "asyncio.BaseProtocol.connection_made()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseProtocol.connection_made"
    },
    {
        "name": "asyncio.BaseProtocol.pause_writing()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseProtocol.pause_writing"
    },
    {
        "name": "asyncio.BaseProtocol.resume_writing()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseProtocol.resume_writing"
    },
    {
        "name": "asyncio.BaseSubprocessTransport",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.close()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.close"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.get_pid()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.get_pid"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.get_pipe_transport()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.get_pipe_transport"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.get_returncode()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.get_returncode"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.kill()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.kill"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.send_signal()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.send_signal"
    },
    {
        "name": "asyncio.BaseSubprocessTransport.terminate()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseSubprocessTransport.terminate"
    },
    {
        "name": "asyncio.BaseTransport",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseTransport"
    },
    {
        "name": "asyncio.BaseTransport.close()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseTransport.close"
    },
    {
        "name": "asyncio.BaseTransport.get_extra_info()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.BaseTransport.get_extra_info"
    },
    {
        "name": "asyncio.BoundedSemaphore",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.BoundedSemaphore"
    },
    {
        "name": "asyncio.Condition",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition"
    },
    {
        "name": "asyncio.Condition.acquire()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.acquire"
    },
    {
        "name": "asyncio.Condition.locked()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.locked"
    },
    {
        "name": "asyncio.Condition.notify()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.notify"
    },
    {
        "name": "asyncio.Condition.notify_all()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.notify_all"
    },
    {
        "name": "asyncio.Condition.release()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.release"
    },
    {
        "name": "asyncio.Condition.wait()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.wait"
    },
    {
        "name": "asyncio.Condition.wait_for()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Condition.wait_for"
    },
    {
        "name": "asyncio.coroutine()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.coroutine"
    },
    {
        "name": "asyncio.create_subprocess_exec()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.create_subprocess_exec"
    },
    {
        "name": "asyncio.create_subprocess_shell()",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess#asyncio.create_subprocess_shell"
    },
    {
        "name": "asyncio.DatagramProtocol",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.DatagramProtocol"
    },
    {
        "name": "asyncio.DatagramProtocol.datagram_received()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.DatagramProtocol.datagram_received"
    },
    {
        "name": "asyncio.DatagramProtocol.error_received()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.DatagramProtocol.error_received"
    },
    {
        "name": "asyncio.DatagramTransport.abort()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.DatagramTransport.abort"
    },
    {
        "name": "asyncio.DatagramTransport.sendto()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.DatagramTransport.sendto"
    },
    {
        "name": "asyncio.Event",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Event"
    },
    {
        "name": "asyncio.Event.clear()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Event.clear"
    },
    {
        "name": "asyncio.Event.is_set()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Event.is_set"
    },
    {
        "name": "asyncio.Event.set()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Event.set"
    },
    {
        "name": "asyncio.Event.wait()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Event.wait"
    },
    {
        "name": "asyncio.Future",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future"
    },
    {
        "name": "asyncio.Future.add_done_callback()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.add_done_callback"
    },
    {
        "name": "asyncio.Future.cancel()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.cancel"
    },
    {
        "name": "asyncio.Future.cancelled()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.cancelled"
    },
    {
        "name": "asyncio.Future.done()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.done"
    },
    {
        "name": "asyncio.Future.exception()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.exception"
    },
    {
        "name": "asyncio.Future.remove_done_callback()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.remove_done_callback"
    },
    {
        "name": "asyncio.Future.result()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.result"
    },
    {
        "name": "asyncio.Future.set_exception()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.set_exception"
    },
    {
        "name": "asyncio.Future.set_result()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Future.set_result"
    },
    {
        "name": "asyncio.gather()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.gather"
    },
    {
        "name": "asyncio.get_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.get_event_loop"
    },
    {
        "name": "asyncio.get_event_loop_policy()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.get_event_loop_policy"
    },
    {
        "name": "asyncio.Handle",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Handle"
    },
    {
        "name": "asyncio.Handle.cancel()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Handle.cancel"
    },
    {
        "name": "asyncio.IncompleteReadError",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.IncompleteReadError"
    },
    {
        "name": "asyncio.IncompleteReadError.expected",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.IncompleteReadError.expected"
    },
    {
        "name": "asyncio.IncompleteReadError.partial",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.IncompleteReadError.partial"
    },
    {
        "name": "asyncio.InvalidStateError",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.InvalidStateError"
    },
    {
        "name": "asyncio.iscoroutine()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.iscoroutine"
    },
    {
        "name": "asyncio.iscoroutinefunction()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.iscoroutinefunction"
    },
    {
        "name": "asyncio.JoinableQueue",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.JoinableQueue"
    },
    {
        "name": "asyncio.LifoQueue",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.LifoQueue"
    },
    {
        "name": "asyncio.Lock",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Lock"
    },
    {
        "name": "asyncio.Lock.acquire()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Lock.acquire"
    },
    {
        "name": "asyncio.Lock.locked()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Lock.locked"
    },
    {
        "name": "asyncio.Lock.release()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Lock.release"
    },
    {
        "name": "asyncio.new_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.new_event_loop"
    },
    {
        "name": "asyncio.open_connection()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.open_connection"
    },
    {
        "name": "asyncio.open_unix_connection()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.open_unix_connection"
    },
    {
        "name": "asyncio.PriorityQueue",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.PriorityQueue"
    },
    {
        "name": "asyncio.ProactorEventLoop",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.ProactorEventLoop"
    },
    {
        "name": "asyncio.Protocol",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.Protocol"
    },
    {
        "name": "asyncio.Protocol.data_received()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.Protocol.data_received"
    },
    {
        "name": "asyncio.Protocol.eof_received()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.Protocol.eof_received"
    },
    {
        "name": "asyncio.Queue",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue"
    },
    {
        "name": "asyncio.Queue.empty()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.empty"
    },
    {
        "name": "asyncio.Queue.full()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.full"
    },
    {
        "name": "asyncio.Queue.get()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.get"
    },
    {
        "name": "asyncio.Queue.get_nowait()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.get_nowait"
    },
    {
        "name": "asyncio.Queue.join()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.join"
    },
    {
        "name": "asyncio.Queue.maxsize",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.maxsize"
    },
    {
        "name": "asyncio.Queue.put()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.put"
    },
    {
        "name": "asyncio.Queue.put_nowait()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.put_nowait"
    },
    {
        "name": "asyncio.Queue.qsize()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.qsize"
    },
    {
        "name": "asyncio.Queue.task_done()",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.Queue.task_done"
    },
    {
        "name": "asyncio.QueueEmpty",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.QueueEmpty"
    },
    {
        "name": "asyncio.QueueFull",
        "type": "Input/ouput",
        "path": "library/asyncio-queue#asyncio.QueueFull"
    },
    {
        "name": "asyncio.ReadTransport",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.ReadTransport"
    },
    {
        "name": "asyncio.ReadTransport.pause_reading()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.ReadTransport.pause_reading"
    },
    {
        "name": "asyncio.ReadTransport.resume_reading()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.ReadTransport.resume_reading"
    },
    {
        "name": "asyncio.SelectorEventLoop",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.SelectorEventLoop"
    },
    {
        "name": "asyncio.Semaphore",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Semaphore"
    },
    {
        "name": "asyncio.Semaphore.acquire()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Semaphore.acquire"
    },
    {
        "name": "asyncio.Semaphore.locked()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Semaphore.locked"
    },
    {
        "name": "asyncio.Semaphore.release()",
        "type": "Input/ouput",
        "path": "library/asyncio-sync#asyncio.Semaphore.release"
    },
    {
        "name": "asyncio.Server",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Server"
    },
    {
        "name": "asyncio.Server.close()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Server.close"
    },
    {
        "name": "asyncio.Server.sockets",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Server.sockets"
    },
    {
        "name": "asyncio.Server.wait_closed()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop#asyncio.Server.wait_closed"
    },
    {
        "name": "asyncio.set_event_loop()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.set_event_loop"
    },
    {
        "name": "asyncio.set_event_loop_policy()",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops#asyncio.set_event_loop_policy"
    },
    {
        "name": "asyncio.shield()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.shield"
    },
    {
        "name": "asyncio.sleep()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.sleep"
    },
    {
        "name": "asyncio.start_server()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.start_server"
    },
    {
        "name": "asyncio.start_unix_server()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.start_unix_server"
    },
    {
        "name": "asyncio.StreamReader",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader"
    },
    {
        "name": "asyncio.StreamReader.at_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.at_eof"
    },
    {
        "name": "asyncio.StreamReader.exception()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.exception"
    },
    {
        "name": "asyncio.StreamReader.feed_data()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.feed_data"
    },
    {
        "name": "asyncio.StreamReader.feed_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.feed_eof"
    },
    {
        "name": "asyncio.StreamReader.read()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.read"
    },
    {
        "name": "asyncio.StreamReader.readexactly()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.readexactly"
    },
    {
        "name": "asyncio.StreamReader.readline()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.readline"
    },
    {
        "name": "asyncio.StreamReader.set_exception()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.set_exception"
    },
    {
        "name": "asyncio.StreamReader.set_transport()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReader.set_transport"
    },
    {
        "name": "asyncio.StreamReaderProtocol",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamReaderProtocol"
    },
    {
        "name": "asyncio.StreamWriter",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter"
    },
    {
        "name": "asyncio.StreamWriter.can_write_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.can_write_eof"
    },
    {
        "name": "asyncio.StreamWriter.close()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.close"
    },
    {
        "name": "asyncio.StreamWriter.drain()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.drain"
    },
    {
        "name": "asyncio.StreamWriter.get_extra_info()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.get_extra_info"
    },
    {
        "name": "asyncio.StreamWriter.transport",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.transport"
    },
    {
        "name": "asyncio.StreamWriter.write()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.write"
    },
    {
        "name": "asyncio.StreamWriter.writelines()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.writelines"
    },
    {
        "name": "asyncio.StreamWriter.write_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-stream#asyncio.StreamWriter.write_eof"
    },
    {
        "name": "asyncio.SubprocessProtocol",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.SubprocessProtocol"
    },
    {
        "name": "asyncio.SubprocessProtocol.pipe_connection_lost()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.SubprocessProtocol.pipe_connection_lost"
    },
    {
        "name": "asyncio.SubprocessProtocol.pipe_data_received()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.SubprocessProtocol.pipe_data_received"
    },
    {
        "name": "asyncio.SubprocessProtocol.process_exited()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.SubprocessProtocol.process_exited"
    },
    {
        "name": "asyncio.Task",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task"
    },
    {
        "name": "asyncio.Task.all_tasks()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task.all_tasks"
    },
    {
        "name": "asyncio.Task.cancel()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task.cancel"
    },
    {
        "name": "asyncio.Task.current_task()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task.current_task"
    },
    {
        "name": "asyncio.Task.get_stack()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task.get_stack"
    },
    {
        "name": "asyncio.Task.print_stack()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.Task.print_stack"
    },
    {
        "name": "asyncio.TimeoutError",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.TimeoutError"
    },
    {
        "name": "asyncio.wait()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.wait"
    },
    {
        "name": "asyncio.wait_for()",
        "type": "Input/ouput",
        "path": "library/asyncio-task#asyncio.wait_for"
    },
    {
        "name": "asyncio.WriteTransport",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport"
    },
    {
        "name": "asyncio.WriteTransport.abort()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.abort"
    },
    {
        "name": "asyncio.WriteTransport.can_write_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.can_write_eof"
    },
    {
        "name": "asyncio.WriteTransport.get_write_buffer_limits()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.get_write_buffer_limits"
    },
    {
        "name": "asyncio.WriteTransport.get_write_buffer_size()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.get_write_buffer_size"
    },
    {
        "name": "asyncio.WriteTransport.set_write_buffer_limits()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.set_write_buffer_limits"
    },
    {
        "name": "asyncio.WriteTransport.write()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.write"
    },
    {
        "name": "asyncio.WriteTransport.writelines()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.writelines"
    },
    {
        "name": "asyncio.WriteTransport.write_eof()",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol#asyncio.WriteTransport.write_eof"
    },
    {
        "name": "asyncore",
        "type": "Networking",
        "path": "library/asyncore"
    },
    {
        "name": "asyncore.dispatcher",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher"
    },
    {
        "name": "asyncore.dispatcher.accept()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.accept"
    },
    {
        "name": "asyncore.dispatcher.bind()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.bind"
    },
    {
        "name": "asyncore.dispatcher.close()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.close"
    },
    {
        "name": "asyncore.dispatcher.connect()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.connect"
    },
    {
        "name": "asyncore.dispatcher.create_socket()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.create_socket"
    },
    {
        "name": "asyncore.dispatcher.handle_accept()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_accept"
    },
    {
        "name": "asyncore.dispatcher.handle_accepted()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_accepted"
    },
    {
        "name": "asyncore.dispatcher.handle_close()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_close"
    },
    {
        "name": "asyncore.dispatcher.handle_connect()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_connect"
    },
    {
        "name": "asyncore.dispatcher.handle_error()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_error"
    },
    {
        "name": "asyncore.dispatcher.handle_expt()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_expt"
    },
    {
        "name": "asyncore.dispatcher.handle_read()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_read"
    },
    {
        "name": "asyncore.dispatcher.handle_write()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.handle_write"
    },
    {
        "name": "asyncore.dispatcher.listen()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.listen"
    },
    {
        "name": "asyncore.dispatcher.readable()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.readable"
    },
    {
        "name": "asyncore.dispatcher.recv()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.recv"
    },
    {
        "name": "asyncore.dispatcher.send()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.send"
    },
    {
        "name": "asyncore.dispatcher.writable()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher.writable"
    },
    {
        "name": "asyncore.dispatcher_with_send",
        "type": "Networking",
        "path": "library/asyncore#asyncore.dispatcher_with_send"
    },
    {
        "name": "asyncore.file_dispatcher",
        "type": "Networking",
        "path": "library/asyncore#asyncore.file_dispatcher"
    },
    {
        "name": "asyncore.file_wrapper",
        "type": "Networking",
        "path": "library/asyncore#asyncore.file_wrapper"
    },
    {
        "name": "asyncore.loop()",
        "type": "Networking",
        "path": "library/asyncore#asyncore.loop"
    },
    {
        "name": "atexit",
        "type": "Runtime",
        "path": "library/atexit"
    },
    {
        "name": "atexit.register()",
        "type": "Runtime",
        "path": "library/atexit#atexit.register"
    },
    {
        "name": "atexit.unregister()",
        "type": "Runtime",
        "path": "library/atexit#atexit.unregister"
    },
    {
        "name": "AttributeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#AttributeError"
    },
    {
        "name": "audioop",
        "type": "Multimedia",
        "path": "library/audioop"
    },
    {
        "name": "audioop.add()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.add"
    },
    {
        "name": "audioop.adpcm2lin()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.adpcm2lin"
    },
    {
        "name": "audioop.alaw2lin()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.alaw2lin"
    },
    {
        "name": "audioop.avg()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.avg"
    },
    {
        "name": "audioop.avgpp()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.avgpp"
    },
    {
        "name": "audioop.bias()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.bias"
    },
    {
        "name": "audioop.byteswap()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.byteswap"
    },
    {
        "name": "audioop.cross()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.cross"
    },
    {
        "name": "audioop.error",
        "type": "Multimedia",
        "path": "library/audioop#audioop.error"
    },
    {
        "name": "audioop.findfactor()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.findfactor"
    },
    {
        "name": "audioop.findfit()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.findfit"
    },
    {
        "name": "audioop.findmax()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.findmax"
    },
    {
        "name": "audioop.getsample()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.getsample"
    },
    {
        "name": "audioop.lin2adpcm()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.lin2adpcm"
    },
    {
        "name": "audioop.lin2alaw()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.lin2alaw"
    },
    {
        "name": "audioop.lin2lin()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.lin2lin"
    },
    {
        "name": "audioop.lin2ulaw()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.lin2ulaw"
    },
    {
        "name": "audioop.max()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.max"
    },
    {
        "name": "audioop.maxpp()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.maxpp"
    },
    {
        "name": "audioop.minmax()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.minmax"
    },
    {
        "name": "audioop.mul()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.mul"
    },
    {
        "name": "audioop.ratecv()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.ratecv"
    },
    {
        "name": "audioop.reverse()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.reverse"
    },
    {
        "name": "audioop.rms()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.rms"
    },
    {
        "name": "audioop.tomono()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.tomono"
    },
    {
        "name": "audioop.tostereo()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.tostereo"
    },
    {
        "name": "audioop.ulaw2lin()",
        "type": "Multimedia",
        "path": "library/audioop#audioop.ulaw2lin"
    },
    {
        "name": "Base Event Loop",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloop"
    },
    {
        "name": "base64",
        "type": "Internet Data",
        "path": "library/base64"
    },
    {
        "name": "base64.a85decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.a85decode"
    },
    {
        "name": "base64.a85encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.a85encode"
    },
    {
        "name": "base64.b16decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b16decode"
    },
    {
        "name": "base64.b16encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b16encode"
    },
    {
        "name": "base64.b32decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b32decode"
    },
    {
        "name": "base64.b32encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b32encode"
    },
    {
        "name": "base64.b64decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b64decode"
    },
    {
        "name": "base64.b64encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b64encode"
    },
    {
        "name": "base64.b85decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b85decode"
    },
    {
        "name": "base64.b85encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.b85encode"
    },
    {
        "name": "base64.decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.decode"
    },
    {
        "name": "base64.decodebytes()",
        "type": "Internet Data",
        "path": "library/base64#base64.decodebytes"
    },
    {
        "name": "base64.decodestring()",
        "type": "Internet Data",
        "path": "library/base64#base64.decodestring"
    },
    {
        "name": "base64.encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.encode"
    },
    {
        "name": "base64.encodebytes()",
        "type": "Internet Data",
        "path": "library/base64#base64.encodebytes"
    },
    {
        "name": "base64.encodestring()",
        "type": "Internet Data",
        "path": "library/base64#base64.encodestring"
    },
    {
        "name": "base64.standard_b64decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.standard_b64decode"
    },
    {
        "name": "base64.standard_b64encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.standard_b64encode"
    },
    {
        "name": "base64.urlsafe_b64decode()",
        "type": "Internet Data",
        "path": "library/base64#base64.urlsafe_b64decode"
    },
    {
        "name": "base64.urlsafe_b64encode()",
        "type": "Internet Data",
        "path": "library/base64#base64.urlsafe_b64encode"
    },
    {
        "name": "BaseException",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BaseException"
    },
    {
        "name": "BaseException.args",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BaseException.args"
    },
    {
        "name": "BaseException.with_traceback()",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BaseException.with_traceback"
    },
    {
        "name": "bdb",
        "type": "Debugging & Profiling",
        "path": "library/bdb"
    },
    {
        "name": "bdb.Bdb",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb"
    },
    {
        "name": "bdb.Bdb.break_anywhere()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.break_anywhere"
    },
    {
        "name": "bdb.Bdb.break_here()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.break_here"
    },
    {
        "name": "bdb.Bdb.canonic()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.canonic"
    },
    {
        "name": "bdb.Bdb.clear_all_breaks()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.clear_all_breaks"
    },
    {
        "name": "bdb.Bdb.clear_all_file_breaks()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.clear_all_file_breaks"
    },
    {
        "name": "bdb.Bdb.clear_bpbynumber()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.clear_bpbynumber"
    },
    {
        "name": "bdb.Bdb.clear_break()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.clear_break"
    },
    {
        "name": "bdb.Bdb.dispatch_call()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.dispatch_call"
    },
    {
        "name": "bdb.Bdb.dispatch_exception()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.dispatch_exception"
    },
    {
        "name": "bdb.Bdb.dispatch_line()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.dispatch_line"
    },
    {
        "name": "bdb.Bdb.dispatch_return()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.dispatch_return"
    },
    {
        "name": "bdb.Bdb.do_clear()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.do_clear"
    },
    {
        "name": "bdb.Bdb.format_stack_entry()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.format_stack_entry"
    },
    {
        "name": "bdb.Bdb.get_all_breaks()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_all_breaks"
    },
    {
        "name": "bdb.Bdb.get_bpbynumber()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_bpbynumber"
    },
    {
        "name": "bdb.Bdb.get_break()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_break"
    },
    {
        "name": "bdb.Bdb.get_breaks()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_breaks"
    },
    {
        "name": "bdb.Bdb.get_file_breaks()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_file_breaks"
    },
    {
        "name": "bdb.Bdb.get_stack()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.get_stack"
    },
    {
        "name": "bdb.Bdb.reset()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.reset"
    },
    {
        "name": "bdb.Bdb.run()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.run"
    },
    {
        "name": "bdb.Bdb.runcall()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.runcall"
    },
    {
        "name": "bdb.Bdb.runctx()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.runctx"
    },
    {
        "name": "bdb.Bdb.runeval()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.runeval"
    },
    {
        "name": "bdb.Bdb.set_break()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_break"
    },
    {
        "name": "bdb.Bdb.set_continue()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_continue"
    },
    {
        "name": "bdb.Bdb.set_next()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_next"
    },
    {
        "name": "bdb.Bdb.set_quit()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_quit"
    },
    {
        "name": "bdb.Bdb.set_return()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_return"
    },
    {
        "name": "bdb.Bdb.set_step()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_step"
    },
    {
        "name": "bdb.Bdb.set_trace()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_trace"
    },
    {
        "name": "bdb.Bdb.set_until()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.set_until"
    },
    {
        "name": "bdb.Bdb.stop_here()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.stop_here"
    },
    {
        "name": "bdb.Bdb.trace_dispatch()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.trace_dispatch"
    },
    {
        "name": "bdb.Bdb.user_call()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.user_call"
    },
    {
        "name": "bdb.Bdb.user_exception()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.user_exception"
    },
    {
        "name": "bdb.Bdb.user_line()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.user_line"
    },
    {
        "name": "bdb.Bdb.user_return()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Bdb.user_return"
    },
    {
        "name": "bdb.BdbQuit",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.BdbQuit"
    },
    {
        "name": "bdb.Breakpoint",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint"
    },
    {
        "name": "bdb.Breakpoint.bpformat()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint.bpformat"
    },
    {
        "name": "bdb.Breakpoint.bpprint()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint.bpprint"
    },
    {
        "name": "bdb.Breakpoint.deleteMe()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint.deleteMe"
    },
    {
        "name": "bdb.Breakpoint.disable()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint.disable"
    },
    {
        "name": "bdb.Breakpoint.enable()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.Breakpoint.enable"
    },
    {
        "name": "bdb.checkfuncname()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.checkfuncname"
    },
    {
        "name": "bdb.effective()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.effective"
    },
    {
        "name": "bdb.set_trace()",
        "type": "Debugging & Profiling",
        "path": "library/bdb#bdb.set_trace"
    },
    {
        "name": "bin()",
        "type": "Built-in Functions",
        "path": "library/functions#bin"
    },
    {
        "name": "binascii",
        "type": "Internet Data",
        "path": "library/binascii"
    },
    {
        "name": "binascii.a2b_base64()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.a2b_base64"
    },
    {
        "name": "binascii.a2b_hex()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.a2b_hex"
    },
    {
        "name": "binascii.a2b_hqx()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.a2b_hqx"
    },
    {
        "name": "binascii.a2b_qp()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.a2b_qp"
    },
    {
        "name": "binascii.a2b_uu()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.a2b_uu"
    },
    {
        "name": "binascii.b2a_base64()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.b2a_base64"
    },
    {
        "name": "binascii.b2a_hex()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.b2a_hex"
    },
    {
        "name": "binascii.b2a_hqx()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.b2a_hqx"
    },
    {
        "name": "binascii.b2a_qp()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.b2a_qp"
    },
    {
        "name": "binascii.b2a_uu()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.b2a_uu"
    },
    {
        "name": "binascii.crc32()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.crc32"
    },
    {
        "name": "binascii.crc_hqx()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.crc_hqx"
    },
    {
        "name": "binascii.Error",
        "type": "Internet Data",
        "path": "library/binascii#binascii.Error"
    },
    {
        "name": "binascii.hexlify()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.hexlify"
    },
    {
        "name": "binascii.Incomplete",
        "type": "Internet Data",
        "path": "library/binascii#binascii.Incomplete"
    },
    {
        "name": "binascii.rlecode_hqx()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.rlecode_hqx"
    },
    {
        "name": "binascii.rledecode_hqx()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.rledecode_hqx"
    },
    {
        "name": "binascii.unhexlify()",
        "type": "Internet Data",
        "path": "library/binascii#binascii.unhexlify"
    },
    {
        "name": "binhex",
        "type": "Internet Data",
        "path": "library/binhex"
    },
    {
        "name": "binhex.binhex()",
        "type": "Internet Data",
        "path": "library/binhex#binhex.binhex"
    },
    {
        "name": "binhex.Error",
        "type": "Internet Data",
        "path": "library/binhex#binhex.Error"
    },
    {
        "name": "binhex.hexbin()",
        "type": "Internet Data",
        "path": "library/binhex#binhex.hexbin"
    },
    {
        "name": "bisect",
        "type": "Data Types",
        "path": "library/bisect"
    },
    {
        "name": "bisect.bisect()",
        "type": "Data Types",
        "path": "library/bisect#bisect.bisect"
    },
    {
        "name": "bisect.bisect_left()",
        "type": "Data Types",
        "path": "library/bisect#bisect.bisect_left"
    },
    {
        "name": "bisect.bisect_right()",
        "type": "Data Types",
        "path": "library/bisect#bisect.bisect_right"
    },
    {
        "name": "bisect.insort()",
        "type": "Data Types",
        "path": "library/bisect#bisect.insort"
    },
    {
        "name": "bisect.insort_left()",
        "type": "Data Types",
        "path": "library/bisect#bisect.insort_left"
    },
    {
        "name": "bisect.insort_right()",
        "type": "Data Types",
        "path": "library/bisect#bisect.insort_right"
    },
    {
        "name": "BlockingIOError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BlockingIOError"
    },
    {
        "name": "BlockingIOError.characters_written",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BlockingIOError.characters_written"
    },
    {
        "name": "bool",
        "type": "Built-in Functions",
        "path": "library/functions#bool"
    },
    {
        "name": "BrokenPipeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BrokenPipeError"
    },
    {
        "name": "BufferError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BufferError"
    },
    {
        "name": "builtins",
        "type": "Runtime",
        "path": "library/builtins"
    },
    {
        "name": "bytearray",
        "type": "Built-in Functions",
        "path": "library/functions#bytearray"
    },
    {
        "name": "bytearray.capitalize()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.capitalize"
    },
    {
        "name": "bytearray.center()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.center"
    },
    {
        "name": "bytearray.count()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.count"
    },
    {
        "name": "bytearray.decode()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.decode"
    },
    {
        "name": "bytearray.endswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.endswith"
    },
    {
        "name": "bytearray.expandtabs()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.expandtabs"
    },
    {
        "name": "bytearray.find()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.find"
    },
    {
        "name": "bytearray.fromhex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.fromhex"
    },
    {
        "name": "bytearray.index()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.index"
    },
    {
        "name": "bytearray.isalnum()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.isalnum"
    },
    {
        "name": "bytearray.isalpha()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.isalpha"
    },
    {
        "name": "bytearray.isdigit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.isdigit"
    },
    {
        "name": "bytearray.islower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.islower"
    },
    {
        "name": "bytearray.isspace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.isspace"
    },
    {
        "name": "bytearray.istitle()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.istitle"
    },
    {
        "name": "bytearray.isupper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.isupper"
    },
    {
        "name": "bytearray.join()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.join"
    },
    {
        "name": "bytearray.ljust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.ljust"
    },
    {
        "name": "bytearray.lower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.lower"
    },
    {
        "name": "bytearray.lstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.lstrip"
    },
    {
        "name": "bytearray.partition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.partition"
    },
    {
        "name": "bytearray.replace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.replace"
    },
    {
        "name": "bytearray.rfind()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rfind"
    },
    {
        "name": "bytearray.rindex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rindex"
    },
    {
        "name": "bytearray.rjust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rjust"
    },
    {
        "name": "bytearray.rpartition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rpartition"
    },
    {
        "name": "bytearray.rsplit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rsplit"
    },
    {
        "name": "bytearray.rstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.rstrip"
    },
    {
        "name": "bytearray.split()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.split"
    },
    {
        "name": "bytearray.splitlines()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.splitlines"
    },
    {
        "name": "bytearray.startswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.startswith"
    },
    {
        "name": "bytearray.strip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.strip"
    },
    {
        "name": "bytearray.swapcase()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.swapcase"
    },
    {
        "name": "bytearray.title()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.title"
    },
    {
        "name": "bytearray.translate()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.translate"
    },
    {
        "name": "bytearray.upper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.upper"
    },
    {
        "name": "bytearray.zfill()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytearray.zfill"
    },
    {
        "name": "bytes",
        "type": "Built-in Functions",
        "path": "library/functions#bytes"
    },
    {
        "name": "bytes.capitalize()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.capitalize"
    },
    {
        "name": "bytes.center()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.center"
    },
    {
        "name": "bytes.count()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.count"
    },
    {
        "name": "bytes.decode()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.decode"
    },
    {
        "name": "bytes.endswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.endswith"
    },
    {
        "name": "bytes.expandtabs()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.expandtabs"
    },
    {
        "name": "bytes.find()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.find"
    },
    {
        "name": "bytes.fromhex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.fromhex"
    },
    {
        "name": "bytes.index()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.index"
    },
    {
        "name": "bytes.isalnum()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.isalnum"
    },
    {
        "name": "bytes.isalpha()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.isalpha"
    },
    {
        "name": "bytes.isdigit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.isdigit"
    },
    {
        "name": "bytes.islower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.islower"
    },
    {
        "name": "bytes.isspace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.isspace"
    },
    {
        "name": "bytes.istitle()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.istitle"
    },
    {
        "name": "bytes.isupper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.isupper"
    },
    {
        "name": "bytes.join()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.join"
    },
    {
        "name": "bytes.ljust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.ljust"
    },
    {
        "name": "bytes.lower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.lower"
    },
    {
        "name": "bytes.lstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.lstrip"
    },
    {
        "name": "bytes.partition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.partition"
    },
    {
        "name": "bytes.replace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.replace"
    },
    {
        "name": "bytes.rfind()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rfind"
    },
    {
        "name": "bytes.rindex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rindex"
    },
    {
        "name": "bytes.rjust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rjust"
    },
    {
        "name": "bytes.rpartition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rpartition"
    },
    {
        "name": "bytes.rsplit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rsplit"
    },
    {
        "name": "bytes.rstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.rstrip"
    },
    {
        "name": "bytes.split()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.split"
    },
    {
        "name": "bytes.splitlines()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.splitlines"
    },
    {
        "name": "bytes.startswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.startswith"
    },
    {
        "name": "bytes.strip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.strip"
    },
    {
        "name": "bytes.swapcase()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.swapcase"
    },
    {
        "name": "bytes.title()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.title"
    },
    {
        "name": "bytes.translate()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.translate"
    },
    {
        "name": "bytes.upper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.upper"
    },
    {
        "name": "bytes.zfill()",
        "type": "Built-in Types",
        "path": "library/stdtypes#bytes.zfill"
    },
    {
        "name": "BytesWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#BytesWarning"
    },
    {
        "name": "bz2",
        "type": "Data Compression",
        "path": "library/bz2"
    },
    {
        "name": "bz2.BZ2Compressor",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Compressor"
    },
    {
        "name": "bz2.BZ2Compressor.compress()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Compressor.compress"
    },
    {
        "name": "bz2.BZ2Compressor.flush()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Compressor.flush"
    },
    {
        "name": "bz2.BZ2Decompressor",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Decompressor"
    },
    {
        "name": "bz2.BZ2Decompressor.decompress()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Decompressor.decompress"
    },
    {
        "name": "bz2.BZ2Decompressor.eof",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Decompressor.eof"
    },
    {
        "name": "bz2.BZ2Decompressor.unused_data",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2Decompressor.unused_data"
    },
    {
        "name": "bz2.BZ2File",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2File"
    },
    {
        "name": "bz2.BZ2File.peek()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.BZ2File.peek"
    },
    {
        "name": "bz2.compress()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.compress"
    },
    {
        "name": "bz2.decompress()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.decompress"
    },
    {
        "name": "bz2.open()",
        "type": "Data Compression",
        "path": "library/bz2#bz2.open"
    },
    {
        "name": "calendar",
        "type": "Data Types",
        "path": "library/calendar"
    },
    {
        "name": "calendar.Calendar",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar"
    },
    {
        "name": "calendar.calendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.calendar"
    },
    {
        "name": "calendar.Calendar.itermonthdates()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.itermonthdates"
    },
    {
        "name": "calendar.Calendar.itermonthdays()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.itermonthdays"
    },
    {
        "name": "calendar.Calendar.itermonthdays2()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.itermonthdays2"
    },
    {
        "name": "calendar.Calendar.iterweekdays()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.iterweekdays"
    },
    {
        "name": "calendar.Calendar.monthdatescalendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.monthdatescalendar"
    },
    {
        "name": "calendar.Calendar.monthdays2calendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.monthdays2calendar"
    },
    {
        "name": "calendar.Calendar.monthdayscalendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.monthdayscalendar"
    },
    {
        "name": "calendar.Calendar.yeardatescalendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.yeardatescalendar"
    },
    {
        "name": "calendar.Calendar.yeardays2calendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.yeardays2calendar"
    },
    {
        "name": "calendar.Calendar.yeardayscalendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.Calendar.yeardayscalendar"
    },
    {
        "name": "calendar.day_abbr",
        "type": "Data Types",
        "path": "library/calendar#calendar.day_abbr"
    },
    {
        "name": "calendar.day_name",
        "type": "Data Types",
        "path": "library/calendar#calendar.day_name"
    },
    {
        "name": "calendar.firstweekday()",
        "type": "Data Types",
        "path": "library/calendar#calendar.firstweekday"
    },
    {
        "name": "calendar.HTMLCalendar",
        "type": "Data Types",
        "path": "library/calendar#calendar.HTMLCalendar"
    },
    {
        "name": "calendar.HTMLCalendar.formatmonth()",
        "type": "Data Types",
        "path": "library/calendar#calendar.HTMLCalendar.formatmonth"
    },
    {
        "name": "calendar.HTMLCalendar.formatyear()",
        "type": "Data Types",
        "path": "library/calendar#calendar.HTMLCalendar.formatyear"
    },
    {
        "name": "calendar.HTMLCalendar.formatyearpage()",
        "type": "Data Types",
        "path": "library/calendar#calendar.HTMLCalendar.formatyearpage"
    },
    {
        "name": "calendar.isleap()",
        "type": "Data Types",
        "path": "library/calendar#calendar.isleap"
    },
    {
        "name": "calendar.leapdays()",
        "type": "Data Types",
        "path": "library/calendar#calendar.leapdays"
    },
    {
        "name": "calendar.LocaleHTMLCalendar",
        "type": "Data Types",
        "path": "library/calendar#calendar.LocaleHTMLCalendar"
    },
    {
        "name": "calendar.LocaleTextCalendar",
        "type": "Data Types",
        "path": "library/calendar#calendar.LocaleTextCalendar"
    },
    {
        "name": "calendar.month()",
        "type": "Data Types",
        "path": "library/calendar#calendar.month"
    },
    {
        "name": "calendar.monthcalendar()",
        "type": "Data Types",
        "path": "library/calendar#calendar.monthcalendar"
    },
    {
        "name": "calendar.monthrange()",
        "type": "Data Types",
        "path": "library/calendar#calendar.monthrange"
    },
    {
        "name": "calendar.month_abbr",
        "type": "Data Types",
        "path": "library/calendar#calendar.month_abbr"
    },
    {
        "name": "calendar.month_name",
        "type": "Data Types",
        "path": "library/calendar#calendar.month_name"
    },
    {
        "name": "calendar.prcal()",
        "type": "Data Types",
        "path": "library/calendar#calendar.prcal"
    },
    {
        "name": "calendar.prmonth()",
        "type": "Data Types",
        "path": "library/calendar#calendar.prmonth"
    },
    {
        "name": "calendar.setfirstweekday()",
        "type": "Data Types",
        "path": "library/calendar#calendar.setfirstweekday"
    },
    {
        "name": "calendar.TextCalendar",
        "type": "Data Types",
        "path": "library/calendar#calendar.TextCalendar"
    },
    {
        "name": "calendar.TextCalendar.formatmonth()",
        "type": "Data Types",
        "path": "library/calendar#calendar.TextCalendar.formatmonth"
    },
    {
        "name": "calendar.TextCalendar.formatyear()",
        "type": "Data Types",
        "path": "library/calendar#calendar.TextCalendar.formatyear"
    },
    {
        "name": "calendar.TextCalendar.prmonth()",
        "type": "Data Types",
        "path": "library/calendar#calendar.TextCalendar.prmonth"
    },
    {
        "name": "calendar.TextCalendar.pryear()",
        "type": "Data Types",
        "path": "library/calendar#calendar.TextCalendar.pryear"
    },
    {
        "name": "calendar.timegm()",
        "type": "Data Types",
        "path": "library/calendar#calendar.timegm"
    },
    {
        "name": "calendar.weekday()",
        "type": "Data Types",
        "path": "library/calendar#calendar.weekday"
    },
    {
        "name": "calendar.weekheader()",
        "type": "Data Types",
        "path": "library/calendar#calendar.weekheader"
    },
    {
        "name": "callable()",
        "type": "Built-in Functions",
        "path": "library/functions#callable"
    },
    {
        "name": "cgi",
        "type": "Internet",
        "path": "library/cgi"
    },
    {
        "name": "cgi.escape()",
        "type": "Internet",
        "path": "library/cgi#cgi.escape"
    },
    {
        "name": "cgi.FieldStorage.getfirst()",
        "type": "Internet",
        "path": "library/cgi#cgi.FieldStorage.getfirst"
    },
    {
        "name": "cgi.FieldStorage.getlist()",
        "type": "Internet",
        "path": "library/cgi#cgi.FieldStorage.getlist"
    },
    {
        "name": "cgi.parse()",
        "type": "Internet",
        "path": "library/cgi#cgi.parse"
    },
    {
        "name": "cgi.parse_header()",
        "type": "Internet",
        "path": "library/cgi#cgi.parse_header"
    },
    {
        "name": "cgi.parse_multipart()",
        "type": "Internet",
        "path": "library/cgi#cgi.parse_multipart"
    },
    {
        "name": "cgi.parse_qs()",
        "type": "Internet",
        "path": "library/cgi#cgi.parse_qs"
    },
    {
        "name": "cgi.parse_qsl()",
        "type": "Internet",
        "path": "library/cgi#cgi.parse_qsl"
    },
    {
        "name": "cgi.print_directory()",
        "type": "Internet",
        "path": "library/cgi#cgi.print_directory"
    },
    {
        "name": "cgi.print_environ()",
        "type": "Internet",
        "path": "library/cgi#cgi.print_environ"
    },
    {
        "name": "cgi.print_environ_usage()",
        "type": "Internet",
        "path": "library/cgi#cgi.print_environ_usage"
    },
    {
        "name": "cgi.print_form()",
        "type": "Internet",
        "path": "library/cgi#cgi.print_form"
    },
    {
        "name": "cgi.test()",
        "type": "Internet",
        "path": "library/cgi#cgi.test"
    },
    {
        "name": "cgitb",
        "type": "Internet",
        "path": "library/cgitb"
    },
    {
        "name": "cgitb.enable()",
        "type": "Internet",
        "path": "library/cgitb#cgitb.enable"
    },
    {
        "name": "cgitb.handler()",
        "type": "Internet",
        "path": "library/cgitb#cgitb.handler"
    },
    {
        "name": "ChildProcessError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ChildProcessError"
    },
    {
        "name": "chr()",
        "type": "Built-in Functions",
        "path": "library/functions#chr"
    },
    {
        "name": "chunk",
        "type": "Multimedia",
        "path": "library/chunk"
    },
    {
        "name": "chunk.Chunk",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk"
    },
    {
        "name": "chunk.Chunk.close()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.close"
    },
    {
        "name": "chunk.Chunk.getname()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.getname"
    },
    {
        "name": "chunk.Chunk.getsize()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.getsize"
    },
    {
        "name": "chunk.Chunk.isatty()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.isatty"
    },
    {
        "name": "chunk.Chunk.read()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.read"
    },
    {
        "name": "chunk.Chunk.seek()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.seek"
    },
    {
        "name": "chunk.Chunk.skip()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.skip"
    },
    {
        "name": "chunk.Chunk.tell()",
        "type": "Multimedia",
        "path": "library/chunk#chunk.Chunk.tell"
    },
    {
        "name": "class.mro()",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.mro"
    },
    {
        "name": "class.__bases__",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.__bases__"
    },
    {
        "name": "class.__mro__",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.__mro__"
    },
    {
        "name": "class.__name__",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.__name__"
    },
    {
        "name": "class.__qualname__",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.__qualname__"
    },
    {
        "name": "class.__subclasses__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#class.__subclasses__"
    },
    {
        "name": "classmethod()",
        "type": "Built-in Functions",
        "path": "library/functions#classmethod"
    },
    {
        "name": "cmath",
        "type": "Numeric & Mathematical",
        "path": "library/cmath"
    },
    {
        "name": "cmath.acos()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.acos"
    },
    {
        "name": "cmath.acosh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.acosh"
    },
    {
        "name": "cmath.asin()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.asin"
    },
    {
        "name": "cmath.asinh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.asinh"
    },
    {
        "name": "cmath.atan()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.atan"
    },
    {
        "name": "cmath.atanh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.atanh"
    },
    {
        "name": "cmath.cos()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.cos"
    },
    {
        "name": "cmath.cosh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.cosh"
    },
    {
        "name": "cmath.e",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.e"
    },
    {
        "name": "cmath.exp()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.exp"
    },
    {
        "name": "cmath.isfinite()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.isfinite"
    },
    {
        "name": "cmath.isinf()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.isinf"
    },
    {
        "name": "cmath.isnan()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.isnan"
    },
    {
        "name": "cmath.log()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.log"
    },
    {
        "name": "cmath.log10()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.log10"
    },
    {
        "name": "cmath.phase()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.phase"
    },
    {
        "name": "cmath.pi",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.pi"
    },
    {
        "name": "cmath.polar()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.polar"
    },
    {
        "name": "cmath.rect()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.rect"
    },
    {
        "name": "cmath.sin()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.sin"
    },
    {
        "name": "cmath.sinh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.sinh"
    },
    {
        "name": "cmath.sqrt()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.sqrt"
    },
    {
        "name": "cmath.tan()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.tan"
    },
    {
        "name": "cmath.tanh()",
        "type": "Numeric & Mathematical",
        "path": "library/cmath#cmath.tanh"
    },
    {
        "name": "cmd",
        "type": "Frameworks",
        "path": "library/cmd"
    },
    {
        "name": "cmd.Cmd",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd"
    },
    {
        "name": "cmd.Cmd.cmdloop()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.cmdloop"
    },
    {
        "name": "cmd.Cmd.cmdqueue",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.cmdqueue"
    },
    {
        "name": "cmd.Cmd.completedefault()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.completedefault"
    },
    {
        "name": "cmd.Cmd.default()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.default"
    },
    {
        "name": "cmd.Cmd.doc_header",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.doc_header"
    },
    {
        "name": "cmd.Cmd.emptyline()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.emptyline"
    },
    {
        "name": "cmd.Cmd.identchars",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.identchars"
    },
    {
        "name": "cmd.Cmd.intro",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.intro"
    },
    {
        "name": "cmd.Cmd.lastcmd",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.lastcmd"
    },
    {
        "name": "cmd.Cmd.misc_header",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.misc_header"
    },
    {
        "name": "cmd.Cmd.onecmd()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.onecmd"
    },
    {
        "name": "cmd.Cmd.postcmd()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.postcmd"
    },
    {
        "name": "cmd.Cmd.postloop()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.postloop"
    },
    {
        "name": "cmd.Cmd.precmd()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.precmd"
    },
    {
        "name": "cmd.Cmd.preloop()",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.preloop"
    },
    {
        "name": "cmd.Cmd.prompt",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.prompt"
    },
    {
        "name": "cmd.Cmd.ruler",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.ruler"
    },
    {
        "name": "cmd.Cmd.undoc_header",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.undoc_header"
    },
    {
        "name": "cmd.Cmd.use_rawinput",
        "type": "Frameworks",
        "path": "library/cmd#cmd.Cmd.use_rawinput"
    },
    {
        "name": "code",
        "type": "Interpreters",
        "path": "library/code"
    },
    {
        "name": "code.compile_command()",
        "type": "Interpreters",
        "path": "library/code#code.compile_command"
    },
    {
        "name": "code.interact()",
        "type": "Interpreters",
        "path": "library/code#code.interact"
    },
    {
        "name": "code.InteractiveConsole",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveConsole"
    },
    {
        "name": "code.InteractiveConsole.interact()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveConsole.interact"
    },
    {
        "name": "code.InteractiveConsole.push()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveConsole.push"
    },
    {
        "name": "code.InteractiveConsole.raw_input()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveConsole.raw_input"
    },
    {
        "name": "code.InteractiveConsole.resetbuffer()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveConsole.resetbuffer"
    },
    {
        "name": "code.InteractiveInterpreter",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter"
    },
    {
        "name": "code.InteractiveInterpreter.runcode()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter.runcode"
    },
    {
        "name": "code.InteractiveInterpreter.runsource()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter.runsource"
    },
    {
        "name": "code.InteractiveInterpreter.showsyntaxerror()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter.showsyntaxerror"
    },
    {
        "name": "code.InteractiveInterpreter.showtraceback()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter.showtraceback"
    },
    {
        "name": "code.InteractiveInterpreter.write()",
        "type": "Interpreters",
        "path": "library/code#code.InteractiveInterpreter.write"
    },
    {
        "name": "codecs",
        "type": "Binary Data",
        "path": "library/codecs"
    },
    {
        "name": "codecs.backslashreplace_errors()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.backslashreplace_errors"
    },
    {
        "name": "codecs.Codec.decode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.Codec.decode"
    },
    {
        "name": "codecs.Codec.encode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.Codec.encode"
    },
    {
        "name": "codecs.CodecInfo",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo"
    },
    {
        "name": "codecs.CodecInfo.decode",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.decode"
    },
    {
        "name": "codecs.CodecInfo.encode",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.encode"
    },
    {
        "name": "codecs.CodecInfo.incrementaldecoder",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.incrementaldecoder"
    },
    {
        "name": "codecs.CodecInfo.incrementalencoder",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.incrementalencoder"
    },
    {
        "name": "codecs.CodecInfo.name",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.name"
    },
    {
        "name": "codecs.CodecInfo.streamreader",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.streamreader"
    },
    {
        "name": "codecs.CodecInfo.streamwriter",
        "type": "Binary Data",
        "path": "library/codecs#codecs.CodecInfo.streamwriter"
    },
    {
        "name": "codecs.decode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.decode"
    },
    {
        "name": "codecs.encode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.encode"
    },
    {
        "name": "codecs.EncodedFile()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.EncodedFile"
    },
    {
        "name": "codecs.getdecoder()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getdecoder"
    },
    {
        "name": "codecs.getencoder()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getencoder"
    },
    {
        "name": "codecs.getincrementaldecoder()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getincrementaldecoder"
    },
    {
        "name": "codecs.getincrementalencoder()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getincrementalencoder"
    },
    {
        "name": "codecs.getreader()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getreader"
    },
    {
        "name": "codecs.getwriter()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.getwriter"
    },
    {
        "name": "codecs.ignore_errors()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.ignore_errors"
    },
    {
        "name": "codecs.IncrementalDecoder",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalDecoder"
    },
    {
        "name": "codecs.IncrementalDecoder.decode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalDecoder.decode"
    },
    {
        "name": "codecs.IncrementalDecoder.getstate()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalDecoder.getstate"
    },
    {
        "name": "codecs.IncrementalDecoder.reset()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalDecoder.reset"
    },
    {
        "name": "codecs.IncrementalDecoder.setstate()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalDecoder.setstate"
    },
    {
        "name": "codecs.IncrementalEncoder",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalEncoder"
    },
    {
        "name": "codecs.IncrementalEncoder.encode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalEncoder.encode"
    },
    {
        "name": "codecs.IncrementalEncoder.getstate()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalEncoder.getstate"
    },
    {
        "name": "codecs.IncrementalEncoder.reset()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalEncoder.reset"
    },
    {
        "name": "codecs.IncrementalEncoder.setstate()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.IncrementalEncoder.setstate"
    },
    {
        "name": "codecs.iterdecode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.iterdecode"
    },
    {
        "name": "codecs.iterencode()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.iterencode"
    },
    {
        "name": "codecs.lookup()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.lookup"
    },
    {
        "name": "codecs.lookup_error()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.lookup_error"
    },
    {
        "name": "codecs.open()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.open"
    },
    {
        "name": "codecs.register()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.register"
    },
    {
        "name": "codecs.register_error()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.register_error"
    },
    {
        "name": "codecs.replace_errors()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.replace_errors"
    },
    {
        "name": "codecs.StreamReader",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReader"
    },
    {
        "name": "codecs.StreamReader.read()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReader.read"
    },
    {
        "name": "codecs.StreamReader.readline()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReader.readline"
    },
    {
        "name": "codecs.StreamReader.readlines()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReader.readlines"
    },
    {
        "name": "codecs.StreamReader.reset()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReader.reset"
    },
    {
        "name": "codecs.StreamReaderWriter",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamReaderWriter"
    },
    {
        "name": "codecs.StreamRecoder",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamRecoder"
    },
    {
        "name": "codecs.StreamWriter",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamWriter"
    },
    {
        "name": "codecs.StreamWriter.reset()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamWriter.reset"
    },
    {
        "name": "codecs.StreamWriter.write()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamWriter.write"
    },
    {
        "name": "codecs.StreamWriter.writelines()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.StreamWriter.writelines"
    },
    {
        "name": "codecs.strict_errors()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.strict_errors"
    },
    {
        "name": "codecs.xmlcharrefreplace_errors()",
        "type": "Binary Data",
        "path": "library/codecs#codecs.xmlcharrefreplace_errors"
    },
    {
        "name": "codeop",
        "type": "Interpreters",
        "path": "library/codeop"
    },
    {
        "name": "codeop.CommandCompiler",
        "type": "Interpreters",
        "path": "library/codeop#codeop.CommandCompiler"
    },
    {
        "name": "codeop.Compile",
        "type": "Interpreters",
        "path": "library/codeop#codeop.Compile"
    },
    {
        "name": "codeop.compile_command()",
        "type": "Interpreters",
        "path": "library/codeop#codeop.compile_command"
    },
    {
        "name": "collections",
        "type": "Data Types",
        "path": "library/collections"
    },
    {
        "name": "collections.abc",
        "type": "Data Types",
        "path": "library/collections.abc"
    },
    {
        "name": "collections.abc.Callable",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Callable"
    },
    {
        "name": "collections.abc.Container",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Container"
    },
    {
        "name": "collections.abc.Hashable",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Hashable"
    },
    {
        "name": "collections.abc.ItemsView",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.ItemsView"
    },
    {
        "name": "collections.abc.Iterable",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Iterable"
    },
    {
        "name": "collections.abc.Iterator",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Iterator"
    },
    {
        "name": "collections.abc.KeysView",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.KeysView"
    },
    {
        "name": "collections.abc.Mapping",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Mapping"
    },
    {
        "name": "collections.abc.MappingView",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.MappingView"
    },
    {
        "name": "collections.abc.MutableMapping",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.MutableMapping"
    },
    {
        "name": "collections.abc.MutableSequence",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.MutableSequence"
    },
    {
        "name": "collections.abc.MutableSet",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.MutableSet"
    },
    {
        "name": "collections.abc.Sequence",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Sequence"
    },
    {
        "name": "collections.abc.Set",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Set"
    },
    {
        "name": "collections.abc.Sized",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.Sized"
    },
    {
        "name": "collections.abc.ValuesView",
        "type": "Data Types",
        "path": "library/collections.abc#collections.abc.ValuesView"
    },
    {
        "name": "collections.ChainMap",
        "type": "Data Types",
        "path": "library/collections#collections.ChainMap"
    },
    {
        "name": "collections.ChainMap.maps",
        "type": "Data Types",
        "path": "library/collections#collections.ChainMap.maps"
    },
    {
        "name": "collections.ChainMap.new_child()",
        "type": "Data Types",
        "path": "library/collections#collections.ChainMap.new_child"
    },
    {
        "name": "collections.ChainMap.parents",
        "type": "Data Types",
        "path": "library/collections#collections.ChainMap.parents"
    },
    {
        "name": "collections.Counter",
        "type": "Data Types",
        "path": "library/collections#collections.Counter"
    },
    {
        "name": "collections.Counter.elements()",
        "type": "Data Types",
        "path": "library/collections#collections.Counter.elements"
    },
    {
        "name": "collections.Counter.fromkeys()",
        "type": "Data Types",
        "path": "library/collections#collections.Counter.fromkeys"
    },
    {
        "name": "collections.Counter.most_common()",
        "type": "Data Types",
        "path": "library/collections#collections.Counter.most_common"
    },
    {
        "name": "collections.Counter.subtract()",
        "type": "Data Types",
        "path": "library/collections#collections.Counter.subtract"
    },
    {
        "name": "collections.Counter.update()",
        "type": "Data Types",
        "path": "library/collections#collections.Counter.update"
    },
    {
        "name": "collections.defaultdict",
        "type": "Data Types",
        "path": "library/collections#collections.defaultdict"
    },
    {
        "name": "collections.defaultdict.default_factory",
        "type": "Data Types",
        "path": "library/collections#collections.defaultdict.default_factory"
    },
    {
        "name": "collections.defaultdict.__missing__()",
        "type": "Data Types",
        "path": "library/collections#collections.defaultdict.__missing__"
    },
    {
        "name": "collections.deque",
        "type": "Data Types",
        "path": "library/collections#collections.deque"
    },
    {
        "name": "collections.deque.append()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.append"
    },
    {
        "name": "collections.deque.appendleft()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.appendleft"
    },
    {
        "name": "collections.deque.clear()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.clear"
    },
    {
        "name": "collections.deque.count()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.count"
    },
    {
        "name": "collections.deque.extend()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.extend"
    },
    {
        "name": "collections.deque.extendleft()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.extendleft"
    },
    {
        "name": "collections.deque.maxlen",
        "type": "Data Types",
        "path": "library/collections#collections.deque.maxlen"
    },
    {
        "name": "collections.deque.pop()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.pop"
    },
    {
        "name": "collections.deque.popleft()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.popleft"
    },
    {
        "name": "collections.deque.remove()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.remove"
    },
    {
        "name": "collections.deque.reverse()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.reverse"
    },
    {
        "name": "collections.deque.rotate()",
        "type": "Data Types",
        "path": "library/collections#collections.deque.rotate"
    },
    {
        "name": "collections.namedtuple()",
        "type": "Data Types",
        "path": "library/collections#collections.namedtuple"
    },
    {
        "name": "collections.OrderedDict",
        "type": "Data Types",
        "path": "library/collections#collections.OrderedDict"
    },
    {
        "name": "collections.OrderedDict.move_to_end()",
        "type": "Data Types",
        "path": "library/collections#collections.OrderedDict.move_to_end"
    },
    {
        "name": "collections.OrderedDict.popitem()",
        "type": "Data Types",
        "path": "library/collections#collections.OrderedDict.popitem"
    },
    {
        "name": "collections.somenamedtuple._asdict()",
        "type": "Data Types",
        "path": "library/collections#collections.somenamedtuple._asdict"
    },
    {
        "name": "collections.somenamedtuple._fields",
        "type": "Data Types",
        "path": "library/collections#collections.somenamedtuple._fields"
    },
    {
        "name": "collections.somenamedtuple._make()",
        "type": "Data Types",
        "path": "library/collections#collections.somenamedtuple._make"
    },
    {
        "name": "collections.somenamedtuple._replace()",
        "type": "Data Types",
        "path": "library/collections#collections.somenamedtuple._replace"
    },
    {
        "name": "collections.somenamedtuple._source",
        "type": "Data Types",
        "path": "library/collections#collections.somenamedtuple._source"
    },
    {
        "name": "collections.UserDict",
        "type": "Data Types",
        "path": "library/collections#collections.UserDict"
    },
    {
        "name": "collections.UserDict.data",
        "type": "Data Types",
        "path": "library/collections#collections.UserDict.data"
    },
    {
        "name": "collections.UserList",
        "type": "Data Types",
        "path": "library/collections#collections.UserList"
    },
    {
        "name": "collections.UserList.data",
        "type": "Data Types",
        "path": "library/collections#collections.UserList.data"
    },
    {
        "name": "collections.UserString",
        "type": "Data Types",
        "path": "library/collections#collections.UserString"
    },
    {
        "name": "colorsys",
        "type": "Multimedia",
        "path": "library/colorsys"
    },
    {
        "name": "colorsys.hls_to_rgb()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.hls_to_rgb"
    },
    {
        "name": "colorsys.hsv_to_rgb()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.hsv_to_rgb"
    },
    {
        "name": "colorsys.rgb_to_hls()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.rgb_to_hls"
    },
    {
        "name": "colorsys.rgb_to_hsv()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.rgb_to_hsv"
    },
    {
        "name": "colorsys.rgb_to_yiq()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.rgb_to_yiq"
    },
    {
        "name": "colorsys.yiq_to_rgb()",
        "type": "Multimedia",
        "path": "library/colorsys#colorsys.yiq_to_rgb"
    },
    {
        "name": "compile()",
        "type": "Built-in Functions",
        "path": "library/functions#compile"
    },
    {
        "name": "complex",
        "type": "Built-in Functions",
        "path": "library/functions#complex"
    },
    {
        "name": "concurrent.futures",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures"
    },
    {
        "name": "concurrent.futures.as_completed()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.as_completed"
    },
    {
        "name": "concurrent.futures.Executor",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Executor"
    },
    {
        "name": "concurrent.futures.Executor.map()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Executor.map"
    },
    {
        "name": "concurrent.futures.Executor.shutdown()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Executor.shutdown"
    },
    {
        "name": "concurrent.futures.Executor.submit()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Executor.submit"
    },
    {
        "name": "concurrent.futures.Future",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future"
    },
    {
        "name": "concurrent.futures.Future.add_done_callback()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.add_done_callback"
    },
    {
        "name": "concurrent.futures.Future.cancel()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.cancel"
    },
    {
        "name": "concurrent.futures.Future.cancelled()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.cancelled"
    },
    {
        "name": "concurrent.futures.Future.done()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.done"
    },
    {
        "name": "concurrent.futures.Future.exception()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.exception"
    },
    {
        "name": "concurrent.futures.Future.result()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.result"
    },
    {
        "name": "concurrent.futures.Future.running()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.running"
    },
    {
        "name": "concurrent.futures.Future.set_exception()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.set_exception"
    },
    {
        "name": "concurrent.futures.Future.set_result()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.set_result"
    },
    {
        "name": "concurrent.futures.Future.set_running_or_notify_cancel()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.Future.set_running_or_notify_cancel"
    },
    {
        "name": "concurrent.futures.process.BrokenProcessPool",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.process.BrokenProcessPool"
    },
    {
        "name": "concurrent.futures.ProcessPoolExecutor",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.ProcessPoolExecutor"
    },
    {
        "name": "concurrent.futures.ThreadPoolExecutor",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.ThreadPoolExecutor"
    },
    {
        "name": "concurrent.futures.wait()",
        "type": "Concurrent Execution",
        "path": "library/concurrent.futures#concurrent.futures.wait"
    },
    {
        "name": "configparser",
        "type": "File Formats",
        "path": "library/configparser"
    },
    {
        "name": "configparser.BasicInterpolation",
        "type": "File Formats",
        "path": "library/configparser#configparser.BasicInterpolation"
    },
    {
        "name": "configparser.BOOLEAN_STATES",
        "type": "File Formats",
        "path": "library/configparser#configparser.BOOLEAN_STATES"
    },
    {
        "name": "configparser.ConfigParser",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser"
    },
    {
        "name": "configparser.ConfigParser.add_section()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.add_section"
    },
    {
        "name": "configparser.ConfigParser.defaults()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.defaults"
    },
    {
        "name": "configparser.ConfigParser.get()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.get"
    },
    {
        "name": "configparser.ConfigParser.getboolean()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.getboolean"
    },
    {
        "name": "configparser.ConfigParser.getfloat()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.getfloat"
    },
    {
        "name": "configparser.ConfigParser.getint()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.getint"
    },
    {
        "name": "configparser.ConfigParser.has_option()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.has_option"
    },
    {
        "name": "configparser.ConfigParser.has_section()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.has_section"
    },
    {
        "name": "configparser.ConfigParser.items()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.items"
    },
    {
        "name": "configparser.ConfigParser.options()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.options"
    },
    {
        "name": "configparser.ConfigParser.optionxform()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.optionxform"
    },
    {
        "name": "configparser.ConfigParser.read()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.read"
    },
    {
        "name": "configparser.ConfigParser.readfp()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.readfp"
    },
    {
        "name": "configparser.ConfigParser.read_dict()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.read_dict"
    },
    {
        "name": "configparser.ConfigParser.read_file()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.read_file"
    },
    {
        "name": "configparser.ConfigParser.read_string()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.read_string"
    },
    {
        "name": "configparser.ConfigParser.remove_option()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.remove_option"
    },
    {
        "name": "configparser.ConfigParser.remove_section()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.remove_section"
    },
    {
        "name": "configparser.ConfigParser.sections()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.sections"
    },
    {
        "name": "configparser.ConfigParser.set()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.set"
    },
    {
        "name": "configparser.ConfigParser.write()",
        "type": "File Formats",
        "path": "library/configparser#configparser.ConfigParser.write"
    },
    {
        "name": "configparser.DuplicateOptionError",
        "type": "File Formats",
        "path": "library/configparser#configparser.DuplicateOptionError"
    },
    {
        "name": "configparser.DuplicateSectionError",
        "type": "File Formats",
        "path": "library/configparser#configparser.DuplicateSectionError"
    },
    {
        "name": "configparser.Error",
        "type": "File Formats",
        "path": "library/configparser#configparser.Error"
    },
    {
        "name": "configparser.ExtendedInterpolation",
        "type": "File Formats",
        "path": "library/configparser#configparser.ExtendedInterpolation"
    },
    {
        "name": "configparser.InterpolationDepthError",
        "type": "File Formats",
        "path": "library/configparser#configparser.InterpolationDepthError"
    },
    {
        "name": "configparser.InterpolationError",
        "type": "File Formats",
        "path": "library/configparser#configparser.InterpolationError"
    },
    {
        "name": "configparser.InterpolationMissingOptionError",
        "type": "File Formats",
        "path": "library/configparser#configparser.InterpolationMissingOptionError"
    },
    {
        "name": "configparser.InterpolationSyntaxError",
        "type": "File Formats",
        "path": "library/configparser#configparser.InterpolationSyntaxError"
    },
    {
        "name": "configparser.MissingSectionHeaderError",
        "type": "File Formats",
        "path": "library/configparser#configparser.MissingSectionHeaderError"
    },
    {
        "name": "configparser.NoOptionError",
        "type": "File Formats",
        "path": "library/configparser#configparser.NoOptionError"
    },
    {
        "name": "configparser.NoSectionError",
        "type": "File Formats",
        "path": "library/configparser#configparser.NoSectionError"
    },
    {
        "name": "configparser.optionxform()",
        "type": "File Formats",
        "path": "library/configparser#configparser.optionxform"
    },
    {
        "name": "configparser.ParsingError",
        "type": "File Formats",
        "path": "library/configparser#configparser.ParsingError"
    },
    {
        "name": "configparser.RawConfigParser",
        "type": "File Formats",
        "path": "library/configparser#configparser.RawConfigParser"
    },
    {
        "name": "configparser.RawConfigParser.add_section()",
        "type": "File Formats",
        "path": "library/configparser#configparser.RawConfigParser.add_section"
    },
    {
        "name": "configparser.RawConfigParser.set()",
        "type": "File Formats",
        "path": "library/configparser#configparser.RawConfigParser.set"
    },
    {
        "name": "configparser.SECTCRE",
        "type": "File Formats",
        "path": "library/configparser#configparser.SECTCRE"
    },
    {
        "name": "ConnectionAbortedError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ConnectionAbortedError"
    },
    {
        "name": "ConnectionError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ConnectionError"
    },
    {
        "name": "ConnectionRefusedError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ConnectionRefusedError"
    },
    {
        "name": "ConnectionResetError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ConnectionResetError"
    },
    {
        "name": "Constants",
        "type": "Built-in Constants",
        "path": "library/constants"
    },
    {
        "name": "container.__iter__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#container.__iter__"
    },
    {
        "name": "contextlib",
        "type": "Runtime",
        "path": "library/contextlib"
    },
    {
        "name": "contextlib.closing()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.closing"
    },
    {
        "name": "contextlib.ContextDecorator",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ContextDecorator"
    },
    {
        "name": "contextlib.contextmanager()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.contextmanager"
    },
    {
        "name": "contextlib.ExitStack",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack"
    },
    {
        "name": "contextlib.ExitStack.callback()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack.callback"
    },
    {
        "name": "contextlib.ExitStack.close()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack.close"
    },
    {
        "name": "contextlib.ExitStack.enter_context()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack.enter_context"
    },
    {
        "name": "contextlib.ExitStack.pop_all()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack.pop_all"
    },
    {
        "name": "contextlib.ExitStack.push()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.ExitStack.push"
    },
    {
        "name": "contextlib.redirect_stdout()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.redirect_stdout"
    },
    {
        "name": "contextlib.suppress()",
        "type": "Runtime",
        "path": "library/contextlib#contextlib.suppress"
    },
    {
        "name": "contextmanager.__enter__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#contextmanager.__enter__"
    },
    {
        "name": "contextmanager.__exit__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#contextmanager.__exit__"
    },
    {
        "name": "copy",
        "type": "Data Types",
        "path": "library/copy"
    },
    {
        "name": "copy.copy()",
        "type": "Data Types",
        "path": "library/copy#copy.copy"
    },
    {
        "name": "copy.deepcopy()",
        "type": "Data Types",
        "path": "library/copy#copy.deepcopy"
    },
    {
        "name": "copy.error",
        "type": "Data Types",
        "path": "library/copy#copy.error"
    },
    {
        "name": "copyreg",
        "type": "Data Persistence",
        "path": "library/copyreg"
    },
    {
        "name": "copyreg.constructor()",
        "type": "Data Persistence",
        "path": "library/copyreg#copyreg.constructor"
    },
    {
        "name": "copyreg.pickle()",
        "type": "Data Persistence",
        "path": "library/copyreg#copyreg.pickle"
    },
    {
        "name": "copyright",
        "type": "Built-in Constants",
        "path": "library/constants#copyright"
    },
    {
        "name": "credits",
        "type": "Built-in Constants",
        "path": "library/constants#credits"
    },
    {
        "name": "crypt",
        "type": "Unix",
        "path": "library/crypt"
    },
    {
        "name": "crypt.crypt()",
        "type": "Unix",
        "path": "library/crypt#crypt.crypt"
    },
    {
        "name": "crypt.methods",
        "type": "Unix",
        "path": "library/crypt#crypt.methods"
    },
    {
        "name": "crypt.mksalt()",
        "type": "Unix",
        "path": "library/crypt#crypt.mksalt"
    },
    {
        "name": "Cryptographic Services",
        "type": "Cryptography",
        "path": "library/crypto"
    },
    {
        "name": "csv",
        "type": "File Formats",
        "path": "library/csv"
    },
    {
        "name": "csv.csvreader.dialect",
        "type": "File Formats",
        "path": "library/csv#csv.csvreader.dialect"
    },
    {
        "name": "csv.csvreader.fieldnames",
        "type": "File Formats",
        "path": "library/csv#csv.csvreader.fieldnames"
    },
    {
        "name": "csv.csvreader.line_num",
        "type": "File Formats",
        "path": "library/csv#csv.csvreader.line_num"
    },
    {
        "name": "csv.csvreader.__next__()",
        "type": "File Formats",
        "path": "library/csv#csv.csvreader.__next__"
    },
    {
        "name": "csv.csvwriter.dialect",
        "type": "File Formats",
        "path": "library/csv#csv.csvwriter.dialect"
    },
    {
        "name": "csv.csvwriter.writerow()",
        "type": "File Formats",
        "path": "library/csv#csv.csvwriter.writerow"
    },
    {
        "name": "csv.csvwriter.writerows()",
        "type": "File Formats",
        "path": "library/csv#csv.csvwriter.writerows"
    },
    {
        "name": "csv.Dialect",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect"
    },
    {
        "name": "csv.Dialect.delimiter",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.delimiter"
    },
    {
        "name": "csv.Dialect.doublequote",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.doublequote"
    },
    {
        "name": "csv.Dialect.escapechar",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.escapechar"
    },
    {
        "name": "csv.Dialect.lineterminator",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.lineterminator"
    },
    {
        "name": "csv.Dialect.quotechar",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.quotechar"
    },
    {
        "name": "csv.Dialect.quoting",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.quoting"
    },
    {
        "name": "csv.Dialect.skipinitialspace",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.skipinitialspace"
    },
    {
        "name": "csv.Dialect.strict",
        "type": "File Formats",
        "path": "library/csv#csv.Dialect.strict"
    },
    {
        "name": "csv.DictReader",
        "type": "File Formats",
        "path": "library/csv#csv.DictReader"
    },
    {
        "name": "csv.DictWriter",
        "type": "File Formats",
        "path": "library/csv#csv.DictWriter"
    },
    {
        "name": "csv.DictWriter.writeheader()",
        "type": "File Formats",
        "path": "library/csv#csv.DictWriter.writeheader"
    },
    {
        "name": "csv.Error",
        "type": "File Formats",
        "path": "library/csv#csv.Error"
    },
    {
        "name": "csv.excel",
        "type": "File Formats",
        "path": "library/csv#csv.excel"
    },
    {
        "name": "csv.excel_tab",
        "type": "File Formats",
        "path": "library/csv#csv.excel_tab"
    },
    {
        "name": "csv.field_size_limit()",
        "type": "File Formats",
        "path": "library/csv#csv.field_size_limit"
    },
    {
        "name": "csv.get_dialect()",
        "type": "File Formats",
        "path": "library/csv#csv.get_dialect"
    },
    {
        "name": "csv.list_dialects()",
        "type": "File Formats",
        "path": "library/csv#csv.list_dialects"
    },
    {
        "name": "csv.reader()",
        "type": "File Formats",
        "path": "library/csv#csv.reader"
    },
    {
        "name": "csv.register_dialect()",
        "type": "File Formats",
        "path": "library/csv#csv.register_dialect"
    },
    {
        "name": "csv.Sniffer",
        "type": "File Formats",
        "path": "library/csv#csv.Sniffer"
    },
    {
        "name": "csv.Sniffer.has_header()",
        "type": "File Formats",
        "path": "library/csv#csv.Sniffer.has_header"
    },
    {
        "name": "csv.Sniffer.sniff()",
        "type": "File Formats",
        "path": "library/csv#csv.Sniffer.sniff"
    },
    {
        "name": "csv.unix_dialect",
        "type": "File Formats",
        "path": "library/csv#csv.unix_dialect"
    },
    {
        "name": "csv.unregister_dialect()",
        "type": "File Formats",
        "path": "library/csv#csv.unregister_dialect"
    },
    {
        "name": "csv.writer()",
        "type": "File Formats",
        "path": "library/csv#csv.writer"
    },
    {
        "name": "ctypes",
        "type": "Operating System",
        "path": "library/ctypes"
    },
    {
        "name": "ctypes.addressof()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.addressof"
    },
    {
        "name": "ctypes.alignment()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.alignment"
    },
    {
        "name": "ctypes.ArgumentError",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.ArgumentError"
    },
    {
        "name": "ctypes.BigEndianStructure",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.BigEndianStructure"
    },
    {
        "name": "ctypes.byref()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.byref"
    },
    {
        "name": "ctypes.cast()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.cast"
    },
    {
        "name": "ctypes.CDLL",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.CDLL"
    },
    {
        "name": "ctypes.CFUNCTYPE()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.CFUNCTYPE"
    },
    {
        "name": "ctypes.create_string_buffer()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.create_string_buffer"
    },
    {
        "name": "ctypes.create_unicode_buffer()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.create_unicode_buffer"
    },
    {
        "name": "ctypes.c_bool",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_bool"
    },
    {
        "name": "ctypes.c_byte",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_byte"
    },
    {
        "name": "ctypes.c_char",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_char"
    },
    {
        "name": "ctypes.c_char_p",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_char_p"
    },
    {
        "name": "ctypes.c_double",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_double"
    },
    {
        "name": "ctypes.c_float",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_float"
    },
    {
        "name": "ctypes.c_int",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_int"
    },
    {
        "name": "ctypes.c_int16",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_int16"
    },
    {
        "name": "ctypes.c_int32",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_int32"
    },
    {
        "name": "ctypes.c_int64",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_int64"
    },
    {
        "name": "ctypes.c_int8",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_int8"
    },
    {
        "name": "ctypes.c_long",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_long"
    },
    {
        "name": "ctypes.c_longdouble",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_longdouble"
    },
    {
        "name": "ctypes.c_longlong",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_longlong"
    },
    {
        "name": "ctypes.c_short",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_short"
    },
    {
        "name": "ctypes.c_size_t",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_size_t"
    },
    {
        "name": "ctypes.c_ssize_t",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_ssize_t"
    },
    {
        "name": "ctypes.c_ubyte",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_ubyte"
    },
    {
        "name": "ctypes.c_uint",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_uint"
    },
    {
        "name": "ctypes.c_uint16",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_uint16"
    },
    {
        "name": "ctypes.c_uint32",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_uint32"
    },
    {
        "name": "ctypes.c_uint64",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_uint64"
    },
    {
        "name": "ctypes.c_uint8",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_uint8"
    },
    {
        "name": "ctypes.c_ulong",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_ulong"
    },
    {
        "name": "ctypes.c_ulonglong",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_ulonglong"
    },
    {
        "name": "ctypes.c_ushort",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_ushort"
    },
    {
        "name": "ctypes.c_void_p",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_void_p"
    },
    {
        "name": "ctypes.c_wchar",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_wchar"
    },
    {
        "name": "ctypes.c_wchar_p",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.c_wchar_p"
    },
    {
        "name": "ctypes.DllCanUnloadNow()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.DllCanUnloadNow"
    },
    {
        "name": "ctypes.DllGetClassObject()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.DllGetClassObject"
    },
    {
        "name": "ctypes.FormatError()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.FormatError"
    },
    {
        "name": "ctypes.GetLastError()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.GetLastError"
    },
    {
        "name": "ctypes.get_errno()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.get_errno"
    },
    {
        "name": "ctypes.get_last_error()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.get_last_error"
    },
    {
        "name": "ctypes.HRESULT",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.HRESULT"
    },
    {
        "name": "ctypes.LibraryLoader",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.LibraryLoader"
    },
    {
        "name": "ctypes.LibraryLoader.LoadLibrary()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.LibraryLoader.LoadLibrary"
    },
    {
        "name": "ctypes.LittleEndianStructure",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.LittleEndianStructure"
    },
    {
        "name": "ctypes.memmove()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.memmove"
    },
    {
        "name": "ctypes.memset()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.memset"
    },
    {
        "name": "ctypes.OleDLL",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.OleDLL"
    },
    {
        "name": "ctypes.POINTER()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.POINTER"
    },
    {
        "name": "ctypes.pointer()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.pointer"
    },
    {
        "name": "ctypes.PyDLL",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.PyDLL"
    },
    {
        "name": "ctypes.PyDLL._handle",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.PyDLL._handle"
    },
    {
        "name": "ctypes.PyDLL._name",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.PyDLL._name"
    },
    {
        "name": "ctypes.PYFUNCTYPE()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.PYFUNCTYPE"
    },
    {
        "name": "ctypes.py_object",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.py_object"
    },
    {
        "name": "ctypes.resize()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.resize"
    },
    {
        "name": "ctypes.set_errno()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.set_errno"
    },
    {
        "name": "ctypes.set_last_error()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.set_last_error"
    },
    {
        "name": "ctypes.sizeof()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.sizeof"
    },
    {
        "name": "ctypes.string_at()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.string_at"
    },
    {
        "name": "ctypes.Structure",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.Structure"
    },
    {
        "name": "ctypes.Structure._anonymous_",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.Structure._anonymous_"
    },
    {
        "name": "ctypes.Structure._fields_",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.Structure._fields_"
    },
    {
        "name": "ctypes.Structure._pack_",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.Structure._pack_"
    },
    {
        "name": "ctypes.Union",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.Union"
    },
    {
        "name": "ctypes.util.find_library()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.util.find_library"
    },
    {
        "name": "ctypes.util.find_msvcrt()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.util.find_msvcrt"
    },
    {
        "name": "ctypes.WinDLL",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.WinDLL"
    },
    {
        "name": "ctypes.WinError()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.WinError"
    },
    {
        "name": "ctypes.WINFUNCTYPE()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.WINFUNCTYPE"
    },
    {
        "name": "ctypes.wstring_at()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes.wstring_at"
    },
    {
        "name": "ctypes._CData",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData"
    },
    {
        "name": "ctypes._CData.from_address()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData.from_address"
    },
    {
        "name": "ctypes._CData.from_buffer()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData.from_buffer"
    },
    {
        "name": "ctypes._CData.from_buffer_copy()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData.from_buffer_copy"
    },
    {
        "name": "ctypes._CData.from_param()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData.from_param"
    },
    {
        "name": "ctypes._CData.in_dll()",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData.in_dll"
    },
    {
        "name": "ctypes._CData._b_base_",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData._b_base_"
    },
    {
        "name": "ctypes._CData._b_needsfree_",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData._b_needsfree_"
    },
    {
        "name": "ctypes._CData._objects",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._CData._objects"
    },
    {
        "name": "ctypes._FuncPtr",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._FuncPtr"
    },
    {
        "name": "ctypes._FuncPtr.argtypes",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._FuncPtr.argtypes"
    },
    {
        "name": "ctypes._FuncPtr.errcheck",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._FuncPtr.errcheck"
    },
    {
        "name": "ctypes._FuncPtr.restype",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._FuncPtr.restype"
    },
    {
        "name": "ctypes._SimpleCData",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._SimpleCData"
    },
    {
        "name": "ctypes._SimpleCData.value",
        "type": "Operating System",
        "path": "library/ctypes#ctypes._SimpleCData.value"
    },
    {
        "name": "curses",
        "type": "Operating System",
        "path": "library/curses"
    },
    {
        "name": "curses.ascii",
        "type": "Operating System",
        "path": "library/curses.ascii"
    },
    {
        "name": "curses.ascii.alt()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.alt"
    },
    {
        "name": "curses.ascii.ascii()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.ascii"
    },
    {
        "name": "curses.ascii.controlnames",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.controlnames"
    },
    {
        "name": "curses.ascii.ctrl()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.ctrl"
    },
    {
        "name": "curses.ascii.isalnum()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isalnum"
    },
    {
        "name": "curses.ascii.isalpha()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isalpha"
    },
    {
        "name": "curses.ascii.isascii()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isascii"
    },
    {
        "name": "curses.ascii.isblank()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isblank"
    },
    {
        "name": "curses.ascii.iscntrl()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.iscntrl"
    },
    {
        "name": "curses.ascii.isctrl()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isctrl"
    },
    {
        "name": "curses.ascii.isdigit()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isdigit"
    },
    {
        "name": "curses.ascii.isgraph()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isgraph"
    },
    {
        "name": "curses.ascii.islower()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.islower"
    },
    {
        "name": "curses.ascii.ismeta()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.ismeta"
    },
    {
        "name": "curses.ascii.isprint()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isprint"
    },
    {
        "name": "curses.ascii.ispunct()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.ispunct"
    },
    {
        "name": "curses.ascii.isspace()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isspace"
    },
    {
        "name": "curses.ascii.isupper()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isupper"
    },
    {
        "name": "curses.ascii.isxdigit()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.isxdigit"
    },
    {
        "name": "curses.ascii.unctrl()",
        "type": "Operating System",
        "path": "library/curses.ascii#curses.ascii.unctrl"
    },
    {
        "name": "curses.baudrate()",
        "type": "Operating System",
        "path": "library/curses#curses.baudrate"
    },
    {
        "name": "curses.beep()",
        "type": "Operating System",
        "path": "library/curses#curses.beep"
    },
    {
        "name": "curses.can_change_color()",
        "type": "Operating System",
        "path": "library/curses#curses.can_change_color"
    },
    {
        "name": "curses.cbreak()",
        "type": "Operating System",
        "path": "library/curses#curses.cbreak"
    },
    {
        "name": "curses.color_content()",
        "type": "Operating System",
        "path": "library/curses#curses.color_content"
    },
    {
        "name": "curses.color_pair()",
        "type": "Operating System",
        "path": "library/curses#curses.color_pair"
    },
    {
        "name": "curses.curs_set()",
        "type": "Operating System",
        "path": "library/curses#curses.curs_set"
    },
    {
        "name": "curses.def_prog_mode()",
        "type": "Operating System",
        "path": "library/curses#curses.def_prog_mode"
    },
    {
        "name": "curses.def_shell_mode()",
        "type": "Operating System",
        "path": "library/curses#curses.def_shell_mode"
    },
    {
        "name": "curses.delay_output()",
        "type": "Operating System",
        "path": "library/curses#curses.delay_output"
    },
    {
        "name": "curses.doupdate()",
        "type": "Operating System",
        "path": "library/curses#curses.doupdate"
    },
    {
        "name": "curses.echo()",
        "type": "Operating System",
        "path": "library/curses#curses.echo"
    },
    {
        "name": "curses.endwin()",
        "type": "Operating System",
        "path": "library/curses#curses.endwin"
    },
    {
        "name": "curses.erasechar()",
        "type": "Operating System",
        "path": "library/curses#curses.erasechar"
    },
    {
        "name": "curses.error",
        "type": "Operating System",
        "path": "library/curses#curses.error"
    },
    {
        "name": "curses.filter()",
        "type": "Operating System",
        "path": "library/curses#curses.filter"
    },
    {
        "name": "curses.flash()",
        "type": "Operating System",
        "path": "library/curses#curses.flash"
    },
    {
        "name": "curses.flushinp()",
        "type": "Operating System",
        "path": "library/curses#curses.flushinp"
    },
    {
        "name": "curses.getmouse()",
        "type": "Operating System",
        "path": "library/curses#curses.getmouse"
    },
    {
        "name": "curses.getsyx()",
        "type": "Operating System",
        "path": "library/curses#curses.getsyx"
    },
    {
        "name": "curses.getwin()",
        "type": "Operating System",
        "path": "library/curses#curses.getwin"
    },
    {
        "name": "curses.halfdelay()",
        "type": "Operating System",
        "path": "library/curses#curses.halfdelay"
    },
    {
        "name": "curses.has_colors()",
        "type": "Operating System",
        "path": "library/curses#curses.has_colors"
    },
    {
        "name": "curses.has_ic()",
        "type": "Operating System",
        "path": "library/curses#curses.has_ic"
    },
    {
        "name": "curses.has_il()",
        "type": "Operating System",
        "path": "library/curses#curses.has_il"
    },
    {
        "name": "curses.has_key()",
        "type": "Operating System",
        "path": "library/curses#curses.has_key"
    },
    {
        "name": "curses.initscr()",
        "type": "Operating System",
        "path": "library/curses#curses.initscr"
    },
    {
        "name": "curses.init_color()",
        "type": "Operating System",
        "path": "library/curses#curses.init_color"
    },
    {
        "name": "curses.init_pair()",
        "type": "Operating System",
        "path": "library/curses#curses.init_pair"
    },
    {
        "name": "curses.isendwin()",
        "type": "Operating System",
        "path": "library/curses#curses.isendwin"
    },
    {
        "name": "curses.is_term_resized()",
        "type": "Operating System",
        "path": "library/curses#curses.is_term_resized"
    },
    {
        "name": "curses.keyname()",
        "type": "Operating System",
        "path": "library/curses#curses.keyname"
    },
    {
        "name": "curses.killchar()",
        "type": "Operating System",
        "path": "library/curses#curses.killchar"
    },
    {
        "name": "curses.longname()",
        "type": "Operating System",
        "path": "library/curses#curses.longname"
    },
    {
        "name": "curses.meta()",
        "type": "Operating System",
        "path": "library/curses#curses.meta"
    },
    {
        "name": "curses.mouseinterval()",
        "type": "Operating System",
        "path": "library/curses#curses.mouseinterval"
    },
    {
        "name": "curses.mousemask()",
        "type": "Operating System",
        "path": "library/curses#curses.mousemask"
    },
    {
        "name": "curses.napms()",
        "type": "Operating System",
        "path": "library/curses#curses.napms"
    },
    {
        "name": "curses.newpad()",
        "type": "Operating System",
        "path": "library/curses#curses.newpad"
    },
    {
        "name": "curses.newwin()",
        "type": "Operating System",
        "path": "library/curses#curses.newwin"
    },
    {
        "name": "curses.nl()",
        "type": "Operating System",
        "path": "library/curses#curses.nl"
    },
    {
        "name": "curses.nocbreak()",
        "type": "Operating System",
        "path": "library/curses#curses.nocbreak"
    },
    {
        "name": "curses.noecho()",
        "type": "Operating System",
        "path": "library/curses#curses.noecho"
    },
    {
        "name": "curses.nonl()",
        "type": "Operating System",
        "path": "library/curses#curses.nonl"
    },
    {
        "name": "curses.noqiflush()",
        "type": "Operating System",
        "path": "library/curses#curses.noqiflush"
    },
    {
        "name": "curses.noraw()",
        "type": "Operating System",
        "path": "library/curses#curses.noraw"
    },
    {
        "name": "curses.pair_content()",
        "type": "Operating System",
        "path": "library/curses#curses.pair_content"
    },
    {
        "name": "curses.pair_number()",
        "type": "Operating System",
        "path": "library/curses#curses.pair_number"
    },
    {
        "name": "curses.panel",
        "type": "Operating System",
        "path": "library/curses.panel"
    },
    {
        "name": "curses.panel.bottom_panel()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.bottom_panel"
    },
    {
        "name": "curses.panel.new_panel()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.new_panel"
    },
    {
        "name": "curses.panel.Panel.above()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.above"
    },
    {
        "name": "curses.panel.Panel.below()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.below"
    },
    {
        "name": "curses.panel.Panel.bottom()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.bottom"
    },
    {
        "name": "curses.panel.Panel.hidden()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.hidden"
    },
    {
        "name": "curses.panel.Panel.hide()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.hide"
    },
    {
        "name": "curses.panel.Panel.move()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.move"
    },
    {
        "name": "curses.panel.Panel.replace()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.replace"
    },
    {
        "name": "curses.panel.Panel.set_userptr()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.set_userptr"
    },
    {
        "name": "curses.panel.Panel.show()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.show"
    },
    {
        "name": "curses.panel.Panel.top()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.top"
    },
    {
        "name": "curses.panel.Panel.userptr()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.userptr"
    },
    {
        "name": "curses.panel.Panel.window()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.Panel.window"
    },
    {
        "name": "curses.panel.top_panel()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.top_panel"
    },
    {
        "name": "curses.panel.update_panels()",
        "type": "Operating System",
        "path": "library/curses.panel#curses.panel.update_panels"
    },
    {
        "name": "curses.putp()",
        "type": "Operating System",
        "path": "library/curses#curses.putp"
    },
    {
        "name": "curses.qiflush()",
        "type": "Operating System",
        "path": "library/curses#curses.qiflush"
    },
    {
        "name": "curses.raw()",
        "type": "Operating System",
        "path": "library/curses#curses.raw"
    },
    {
        "name": "curses.resetty()",
        "type": "Operating System",
        "path": "library/curses#curses.resetty"
    },
    {
        "name": "curses.reset_prog_mode()",
        "type": "Operating System",
        "path": "library/curses#curses.reset_prog_mode"
    },
    {
        "name": "curses.reset_shell_mode()",
        "type": "Operating System",
        "path": "library/curses#curses.reset_shell_mode"
    },
    {
        "name": "curses.resizeterm()",
        "type": "Operating System",
        "path": "library/curses#curses.resizeterm"
    },
    {
        "name": "curses.resize_term()",
        "type": "Operating System",
        "path": "library/curses#curses.resize_term"
    },
    {
        "name": "curses.savetty()",
        "type": "Operating System",
        "path": "library/curses#curses.savetty"
    },
    {
        "name": "curses.setsyx()",
        "type": "Operating System",
        "path": "library/curses#curses.setsyx"
    },
    {
        "name": "curses.setupterm()",
        "type": "Operating System",
        "path": "library/curses#curses.setupterm"
    },
    {
        "name": "curses.start_color()",
        "type": "Operating System",
        "path": "library/curses#curses.start_color"
    },
    {
        "name": "curses.termattrs()",
        "type": "Operating System",
        "path": "library/curses#curses.termattrs"
    },
    {
        "name": "curses.termname()",
        "type": "Operating System",
        "path": "library/curses#curses.termname"
    },
    {
        "name": "curses.textpad.rectangle()",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.rectangle"
    },
    {
        "name": "curses.textpad.Textbox",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.Textbox"
    },
    {
        "name": "curses.textpad.Textbox.do_command()",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.Textbox.do_command"
    },
    {
        "name": "curses.textpad.Textbox.edit()",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.Textbox.edit"
    },
    {
        "name": "curses.textpad.Textbox.gather()",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.Textbox.gather"
    },
    {
        "name": "curses.textpad.Textbox.stripspaces",
        "type": "Operating System",
        "path": "library/curses#curses.textpad.Textbox.stripspaces"
    },
    {
        "name": "curses.tigetflag()",
        "type": "Operating System",
        "path": "library/curses#curses.tigetflag"
    },
    {
        "name": "curses.tigetnum()",
        "type": "Operating System",
        "path": "library/curses#curses.tigetnum"
    },
    {
        "name": "curses.tigetstr()",
        "type": "Operating System",
        "path": "library/curses#curses.tigetstr"
    },
    {
        "name": "curses.tparm()",
        "type": "Operating System",
        "path": "library/curses#curses.tparm"
    },
    {
        "name": "curses.typeahead()",
        "type": "Operating System",
        "path": "library/curses#curses.typeahead"
    },
    {
        "name": "curses.unctrl()",
        "type": "Operating System",
        "path": "library/curses#curses.unctrl"
    },
    {
        "name": "curses.ungetch()",
        "type": "Operating System",
        "path": "library/curses#curses.ungetch"
    },
    {
        "name": "curses.ungetmouse()",
        "type": "Operating System",
        "path": "library/curses#curses.ungetmouse"
    },
    {
        "name": "curses.unget_wch()",
        "type": "Operating System",
        "path": "library/curses#curses.unget_wch"
    },
    {
        "name": "curses.use_default_colors()",
        "type": "Operating System",
        "path": "library/curses#curses.use_default_colors"
    },
    {
        "name": "curses.use_env()",
        "type": "Operating System",
        "path": "library/curses#curses.use_env"
    },
    {
        "name": "curses.version",
        "type": "Operating System",
        "path": "library/curses#curses.version"
    },
    {
        "name": "curses.window.addch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.addch"
    },
    {
        "name": "curses.window.addnstr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.addnstr"
    },
    {
        "name": "curses.window.addstr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.addstr"
    },
    {
        "name": "curses.window.attroff()",
        "type": "Operating System",
        "path": "library/curses#curses.window.attroff"
    },
    {
        "name": "curses.window.attron()",
        "type": "Operating System",
        "path": "library/curses#curses.window.attron"
    },
    {
        "name": "curses.window.attrset()",
        "type": "Operating System",
        "path": "library/curses#curses.window.attrset"
    },
    {
        "name": "curses.window.bkgd()",
        "type": "Operating System",
        "path": "library/curses#curses.window.bkgd"
    },
    {
        "name": "curses.window.bkgdset()",
        "type": "Operating System",
        "path": "library/curses#curses.window.bkgdset"
    },
    {
        "name": "curses.window.border()",
        "type": "Operating System",
        "path": "library/curses#curses.window.border"
    },
    {
        "name": "curses.window.box()",
        "type": "Operating System",
        "path": "library/curses#curses.window.box"
    },
    {
        "name": "curses.window.chgat()",
        "type": "Operating System",
        "path": "library/curses#curses.window.chgat"
    },
    {
        "name": "curses.window.clear()",
        "type": "Operating System",
        "path": "library/curses#curses.window.clear"
    },
    {
        "name": "curses.window.clearok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.clearok"
    },
    {
        "name": "curses.window.clrtobot()",
        "type": "Operating System",
        "path": "library/curses#curses.window.clrtobot"
    },
    {
        "name": "curses.window.clrtoeol()",
        "type": "Operating System",
        "path": "library/curses#curses.window.clrtoeol"
    },
    {
        "name": "curses.window.cursyncup()",
        "type": "Operating System",
        "path": "library/curses#curses.window.cursyncup"
    },
    {
        "name": "curses.window.delch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.delch"
    },
    {
        "name": "curses.window.deleteln()",
        "type": "Operating System",
        "path": "library/curses#curses.window.deleteln"
    },
    {
        "name": "curses.window.derwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.derwin"
    },
    {
        "name": "curses.window.echochar()",
        "type": "Operating System",
        "path": "library/curses#curses.window.echochar"
    },
    {
        "name": "curses.window.enclose()",
        "type": "Operating System",
        "path": "library/curses#curses.window.enclose"
    },
    {
        "name": "curses.window.encoding",
        "type": "Operating System",
        "path": "library/curses#curses.window.encoding"
    },
    {
        "name": "curses.window.erase()",
        "type": "Operating System",
        "path": "library/curses#curses.window.erase"
    },
    {
        "name": "curses.window.getbegyx()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getbegyx"
    },
    {
        "name": "curses.window.getbkgd()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getbkgd"
    },
    {
        "name": "curses.window.getch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getch"
    },
    {
        "name": "curses.window.getkey()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getkey"
    },
    {
        "name": "curses.window.getmaxyx()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getmaxyx"
    },
    {
        "name": "curses.window.getparyx()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getparyx"
    },
    {
        "name": "curses.window.getstr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getstr"
    },
    {
        "name": "curses.window.getyx()",
        "type": "Operating System",
        "path": "library/curses#curses.window.getyx"
    },
    {
        "name": "curses.window.get_wch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.get_wch"
    },
    {
        "name": "curses.window.hline()",
        "type": "Operating System",
        "path": "library/curses#curses.window.hline"
    },
    {
        "name": "curses.window.idcok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.idcok"
    },
    {
        "name": "curses.window.idlok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.idlok"
    },
    {
        "name": "curses.window.immedok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.immedok"
    },
    {
        "name": "curses.window.inch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.inch"
    },
    {
        "name": "curses.window.insch()",
        "type": "Operating System",
        "path": "library/curses#curses.window.insch"
    },
    {
        "name": "curses.window.insdelln()",
        "type": "Operating System",
        "path": "library/curses#curses.window.insdelln"
    },
    {
        "name": "curses.window.insertln()",
        "type": "Operating System",
        "path": "library/curses#curses.window.insertln"
    },
    {
        "name": "curses.window.insnstr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.insnstr"
    },
    {
        "name": "curses.window.insstr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.insstr"
    },
    {
        "name": "curses.window.instr()",
        "type": "Operating System",
        "path": "library/curses#curses.window.instr"
    },
    {
        "name": "curses.window.is_linetouched()",
        "type": "Operating System",
        "path": "library/curses#curses.window.is_linetouched"
    },
    {
        "name": "curses.window.is_wintouched()",
        "type": "Operating System",
        "path": "library/curses#curses.window.is_wintouched"
    },
    {
        "name": "curses.window.keypad()",
        "type": "Operating System",
        "path": "library/curses#curses.window.keypad"
    },
    {
        "name": "curses.window.leaveok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.leaveok"
    },
    {
        "name": "curses.window.move()",
        "type": "Operating System",
        "path": "library/curses#curses.window.move"
    },
    {
        "name": "curses.window.mvderwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.mvderwin"
    },
    {
        "name": "curses.window.mvwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.mvwin"
    },
    {
        "name": "curses.window.nodelay()",
        "type": "Operating System",
        "path": "library/curses#curses.window.nodelay"
    },
    {
        "name": "curses.window.notimeout()",
        "type": "Operating System",
        "path": "library/curses#curses.window.notimeout"
    },
    {
        "name": "curses.window.noutrefresh()",
        "type": "Operating System",
        "path": "library/curses#curses.window.noutrefresh"
    },
    {
        "name": "curses.window.overlay()",
        "type": "Operating System",
        "path": "library/curses#curses.window.overlay"
    },
    {
        "name": "curses.window.overwrite()",
        "type": "Operating System",
        "path": "library/curses#curses.window.overwrite"
    },
    {
        "name": "curses.window.putwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.putwin"
    },
    {
        "name": "curses.window.redrawln()",
        "type": "Operating System",
        "path": "library/curses#curses.window.redrawln"
    },
    {
        "name": "curses.window.redrawwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.redrawwin"
    },
    {
        "name": "curses.window.refresh()",
        "type": "Operating System",
        "path": "library/curses#curses.window.refresh"
    },
    {
        "name": "curses.window.resize()",
        "type": "Operating System",
        "path": "library/curses#curses.window.resize"
    },
    {
        "name": "curses.window.scroll()",
        "type": "Operating System",
        "path": "library/curses#curses.window.scroll"
    },
    {
        "name": "curses.window.scrollok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.scrollok"
    },
    {
        "name": "curses.window.setscrreg()",
        "type": "Operating System",
        "path": "library/curses#curses.window.setscrreg"
    },
    {
        "name": "curses.window.standend()",
        "type": "Operating System",
        "path": "library/curses#curses.window.standend"
    },
    {
        "name": "curses.window.standout()",
        "type": "Operating System",
        "path": "library/curses#curses.window.standout"
    },
    {
        "name": "curses.window.subpad()",
        "type": "Operating System",
        "path": "library/curses#curses.window.subpad"
    },
    {
        "name": "curses.window.subwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.subwin"
    },
    {
        "name": "curses.window.syncdown()",
        "type": "Operating System",
        "path": "library/curses#curses.window.syncdown"
    },
    {
        "name": "curses.window.syncok()",
        "type": "Operating System",
        "path": "library/curses#curses.window.syncok"
    },
    {
        "name": "curses.window.syncup()",
        "type": "Operating System",
        "path": "library/curses#curses.window.syncup"
    },
    {
        "name": "curses.window.timeout()",
        "type": "Operating System",
        "path": "library/curses#curses.window.timeout"
    },
    {
        "name": "curses.window.touchline()",
        "type": "Operating System",
        "path": "library/curses#curses.window.touchline"
    },
    {
        "name": "curses.window.touchwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.touchwin"
    },
    {
        "name": "curses.window.untouchwin()",
        "type": "Operating System",
        "path": "library/curses#curses.window.untouchwin"
    },
    {
        "name": "curses.window.vline()",
        "type": "Operating System",
        "path": "library/curses#curses.window.vline"
    },
    {
        "name": "curses.wrapper()",
        "type": "Operating System",
        "path": "library/curses#curses.wrapper"
    },
    {
        "name": "datetime",
        "type": "Data Types",
        "path": "library/datetime"
    },
    {
        "name": "datetime.date",
        "type": "Data Types",
        "path": "library/datetime#datetime.date"
    },
    {
        "name": "datetime.date.ctime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.ctime"
    },
    {
        "name": "datetime.date.day",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.day"
    },
    {
        "name": "datetime.date.fromordinal()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.fromordinal"
    },
    {
        "name": "datetime.date.fromtimestamp()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.fromtimestamp"
    },
    {
        "name": "datetime.date.isocalendar()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.isocalendar"
    },
    {
        "name": "datetime.date.isoformat()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.isoformat"
    },
    {
        "name": "datetime.date.isoweekday()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.isoweekday"
    },
    {
        "name": "datetime.date.max",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.max"
    },
    {
        "name": "datetime.date.min",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.min"
    },
    {
        "name": "datetime.date.month",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.month"
    },
    {
        "name": "datetime.date.replace()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.replace"
    },
    {
        "name": "datetime.date.resolution",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.resolution"
    },
    {
        "name": "datetime.date.strftime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.strftime"
    },
    {
        "name": "datetime.date.timetuple()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.timetuple"
    },
    {
        "name": "datetime.date.today()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.today"
    },
    {
        "name": "datetime.date.toordinal()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.toordinal"
    },
    {
        "name": "datetime.date.weekday()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.weekday"
    },
    {
        "name": "datetime.date.year",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.year"
    },
    {
        "name": "datetime.date.__format__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.__format__"
    },
    {
        "name": "datetime.date.__str__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.date.__str__"
    },
    {
        "name": "datetime.datetime",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime"
    },
    {
        "name": "datetime.datetime.astimezone()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.astimezone"
    },
    {
        "name": "datetime.datetime.combine()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.combine"
    },
    {
        "name": "datetime.datetime.ctime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.ctime"
    },
    {
        "name": "datetime.datetime.date()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.date"
    },
    {
        "name": "datetime.datetime.day",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.day"
    },
    {
        "name": "datetime.datetime.dst()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.dst"
    },
    {
        "name": "datetime.datetime.fromordinal()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.fromordinal"
    },
    {
        "name": "datetime.datetime.fromtimestamp()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.fromtimestamp"
    },
    {
        "name": "datetime.datetime.hour",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.hour"
    },
    {
        "name": "datetime.datetime.isocalendar()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.isocalendar"
    },
    {
        "name": "datetime.datetime.isoformat()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.isoformat"
    },
    {
        "name": "datetime.datetime.isoweekday()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.isoweekday"
    },
    {
        "name": "datetime.datetime.max",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.max"
    },
    {
        "name": "datetime.datetime.microsecond",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.microsecond"
    },
    {
        "name": "datetime.datetime.min",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.min"
    },
    {
        "name": "datetime.datetime.minute",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.minute"
    },
    {
        "name": "datetime.datetime.month",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.month"
    },
    {
        "name": "datetime.datetime.now()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.now"
    },
    {
        "name": "datetime.datetime.replace()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.replace"
    },
    {
        "name": "datetime.datetime.resolution",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.resolution"
    },
    {
        "name": "datetime.datetime.second",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.second"
    },
    {
        "name": "datetime.datetime.strftime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.strftime"
    },
    {
        "name": "datetime.datetime.strptime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.strptime"
    },
    {
        "name": "datetime.datetime.time()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.time"
    },
    {
        "name": "datetime.datetime.timestamp()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.timestamp"
    },
    {
        "name": "datetime.datetime.timetuple()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.timetuple"
    },
    {
        "name": "datetime.datetime.timetz()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.timetz"
    },
    {
        "name": "datetime.datetime.today()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.today"
    },
    {
        "name": "datetime.datetime.toordinal()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.toordinal"
    },
    {
        "name": "datetime.datetime.tzinfo",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.tzinfo"
    },
    {
        "name": "datetime.datetime.tzname()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.tzname"
    },
    {
        "name": "datetime.datetime.utcfromtimestamp()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.utcfromtimestamp"
    },
    {
        "name": "datetime.datetime.utcnow()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.utcnow"
    },
    {
        "name": "datetime.datetime.utcoffset()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.utcoffset"
    },
    {
        "name": "datetime.datetime.utctimetuple()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.utctimetuple"
    },
    {
        "name": "datetime.datetime.weekday()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.weekday"
    },
    {
        "name": "datetime.datetime.year",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.year"
    },
    {
        "name": "datetime.datetime.__format__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.__format__"
    },
    {
        "name": "datetime.datetime.__str__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.datetime.__str__"
    },
    {
        "name": "datetime.time",
        "type": "Data Types",
        "path": "library/datetime#datetime.time"
    },
    {
        "name": "datetime.time.dst()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.dst"
    },
    {
        "name": "datetime.time.hour",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.hour"
    },
    {
        "name": "datetime.time.isoformat()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.isoformat"
    },
    {
        "name": "datetime.time.max",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.max"
    },
    {
        "name": "datetime.time.microsecond",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.microsecond"
    },
    {
        "name": "datetime.time.min",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.min"
    },
    {
        "name": "datetime.time.minute",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.minute"
    },
    {
        "name": "datetime.time.replace()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.replace"
    },
    {
        "name": "datetime.time.resolution",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.resolution"
    },
    {
        "name": "datetime.time.second",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.second"
    },
    {
        "name": "datetime.time.strftime()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.strftime"
    },
    {
        "name": "datetime.time.tzinfo",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.tzinfo"
    },
    {
        "name": "datetime.time.tzname()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.tzname"
    },
    {
        "name": "datetime.time.utcoffset()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.utcoffset"
    },
    {
        "name": "datetime.time.__format__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.__format__"
    },
    {
        "name": "datetime.time.__str__()",
        "type": "Data Types",
        "path": "library/datetime#datetime.time.__str__"
    },
    {
        "name": "datetime.timedelta",
        "type": "Data Types",
        "path": "library/datetime#datetime.timedelta"
    },
    {
        "name": "datetime.timedelta.max",
        "type": "Data Types",
        "path": "library/datetime#datetime.timedelta.max"
    },
    {
        "name": "datetime.timedelta.min",
        "type": "Data Types",
        "path": "library/datetime#datetime.timedelta.min"
    },
    {
        "name": "datetime.timedelta.resolution",
        "type": "Data Types",
        "path": "library/datetime#datetime.timedelta.resolution"
    },
    {
        "name": "datetime.timedelta.total_seconds()",
        "type": "Data Types",
        "path": "library/datetime#datetime.timedelta.total_seconds"
    },
    {
        "name": "datetime.timezone",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone"
    },
    {
        "name": "datetime.timezone.dst()",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone.dst"
    },
    {
        "name": "datetime.timezone.fromutc()",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone.fromutc"
    },
    {
        "name": "datetime.timezone.tzname()",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone.tzname"
    },
    {
        "name": "datetime.timezone.utc",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone.utc"
    },
    {
        "name": "datetime.timezone.utcoffset()",
        "type": "Data Types",
        "path": "library/datetime#datetime.timezone.utcoffset"
    },
    {
        "name": "datetime.tzinfo",
        "type": "Data Types",
        "path": "library/datetime#datetime.tzinfo"
    },
    {
        "name": "datetime.tzinfo.dst()",
        "type": "Data Types",
        "path": "library/datetime#datetime.tzinfo.dst"
    },
    {
        "name": "datetime.tzinfo.fromutc()",
        "type": "Data Types",
        "path": "library/datetime#datetime.tzinfo.fromutc"
    },
    {
        "name": "datetime.tzinfo.tzname()",
        "type": "Data Types",
        "path": "library/datetime#datetime.tzinfo.tzname"
    },
    {
        "name": "datetime.tzinfo.utcoffset()",
        "type": "Data Types",
        "path": "library/datetime#datetime.tzinfo.utcoffset"
    },
    {
        "name": "dbm",
        "type": "Data Persistence",
        "path": "library/dbm"
    },
    {
        "name": "dbm.dumb.dumbdbm.close()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.dumb.dumbdbm.close"
    },
    {
        "name": "dbm.dumb.dumbdbm.sync()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.dumb.dumbdbm.sync"
    },
    {
        "name": "dbm.dumb.error",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.dumb.error"
    },
    {
        "name": "dbm.dumb.open()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.dumb.open"
    },
    {
        "name": "dbm.error",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.error"
    },
    {
        "name": "dbm.gnu.error",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.error"
    },
    {
        "name": "dbm.gnu.gdbm.close()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.gdbm.close"
    },
    {
        "name": "dbm.gnu.gdbm.firstkey()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.gdbm.firstkey"
    },
    {
        "name": "dbm.gnu.gdbm.nextkey()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.gdbm.nextkey"
    },
    {
        "name": "dbm.gnu.gdbm.reorganize()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.gdbm.reorganize"
    },
    {
        "name": "dbm.gnu.gdbm.sync()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.gdbm.sync"
    },
    {
        "name": "dbm.gnu.open()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.gnu.open"
    },
    {
        "name": "dbm.ndbm.error",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.ndbm.error"
    },
    {
        "name": "dbm.ndbm.library",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.ndbm.library"
    },
    {
        "name": "dbm.ndbm.ndbm.close()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.ndbm.ndbm.close"
    },
    {
        "name": "dbm.ndbm.open()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.ndbm.open"
    },
    {
        "name": "dbm.open()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.open"
    },
    {
        "name": "dbm.whichdb()",
        "type": "Data Persistence",
        "path": "library/dbm#dbm.whichdb"
    },
    {
        "name": "decimal",
        "type": "Numeric & Mathematical",
        "path": "library/decimal"
    },
    {
        "name": "decimal.BasicContext",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.BasicContext"
    },
    {
        "name": "decimal.Clamped",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Clamped"
    },
    {
        "name": "decimal.Context",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context"
    },
    {
        "name": "decimal.Context.abs()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.abs"
    },
    {
        "name": "decimal.Context.add()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.add"
    },
    {
        "name": "decimal.Context.canonical()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.canonical"
    },
    {
        "name": "decimal.Context.clear_flags()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.clear_flags"
    },
    {
        "name": "decimal.Context.clear_traps()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.clear_traps"
    },
    {
        "name": "decimal.Context.compare()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.compare"
    },
    {
        "name": "decimal.Context.compare_signal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.compare_signal"
    },
    {
        "name": "decimal.Context.compare_total()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.compare_total"
    },
    {
        "name": "decimal.Context.compare_total_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.compare_total_mag"
    },
    {
        "name": "decimal.Context.copy()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.copy"
    },
    {
        "name": "decimal.Context.copy_abs()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.copy_abs"
    },
    {
        "name": "decimal.Context.copy_decimal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.copy_decimal"
    },
    {
        "name": "decimal.Context.copy_negate()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.copy_negate"
    },
    {
        "name": "decimal.Context.copy_sign()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.copy_sign"
    },
    {
        "name": "decimal.Context.create_decimal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.create_decimal"
    },
    {
        "name": "decimal.Context.create_decimal_from_float()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.create_decimal_from_float"
    },
    {
        "name": "decimal.Context.divide()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.divide"
    },
    {
        "name": "decimal.Context.divide_int()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.divide_int"
    },
    {
        "name": "decimal.Context.divmod()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.divmod"
    },
    {
        "name": "decimal.Context.Etiny()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.Etiny"
    },
    {
        "name": "decimal.Context.Etop()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.Etop"
    },
    {
        "name": "decimal.Context.exp()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.exp"
    },
    {
        "name": "decimal.Context.fma()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.fma"
    },
    {
        "name": "decimal.Context.is_canonical()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_canonical"
    },
    {
        "name": "decimal.Context.is_finite()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_finite"
    },
    {
        "name": "decimal.Context.is_infinite()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_infinite"
    },
    {
        "name": "decimal.Context.is_nan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_nan"
    },
    {
        "name": "decimal.Context.is_normal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_normal"
    },
    {
        "name": "decimal.Context.is_qnan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_qnan"
    },
    {
        "name": "decimal.Context.is_signed()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_signed"
    },
    {
        "name": "decimal.Context.is_snan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_snan"
    },
    {
        "name": "decimal.Context.is_subnormal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_subnormal"
    },
    {
        "name": "decimal.Context.is_zero()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.is_zero"
    },
    {
        "name": "decimal.Context.ln()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.ln"
    },
    {
        "name": "decimal.Context.log10()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.log10"
    },
    {
        "name": "decimal.Context.logb()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.logb"
    },
    {
        "name": "decimal.Context.logical_and()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.logical_and"
    },
    {
        "name": "decimal.Context.logical_invert()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.logical_invert"
    },
    {
        "name": "decimal.Context.logical_or()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.logical_or"
    },
    {
        "name": "decimal.Context.logical_xor()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.logical_xor"
    },
    {
        "name": "decimal.Context.max()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.max"
    },
    {
        "name": "decimal.Context.max_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.max_mag"
    },
    {
        "name": "decimal.Context.min()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.min"
    },
    {
        "name": "decimal.Context.minus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.minus"
    },
    {
        "name": "decimal.Context.min_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.min_mag"
    },
    {
        "name": "decimal.Context.multiply()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.multiply"
    },
    {
        "name": "decimal.Context.next_minus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.next_minus"
    },
    {
        "name": "decimal.Context.next_plus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.next_plus"
    },
    {
        "name": "decimal.Context.next_toward()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.next_toward"
    },
    {
        "name": "decimal.Context.normalize()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.normalize"
    },
    {
        "name": "decimal.Context.number_class()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.number_class"
    },
    {
        "name": "decimal.Context.plus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.plus"
    },
    {
        "name": "decimal.Context.power()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.power"
    },
    {
        "name": "decimal.Context.quantize()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.quantize"
    },
    {
        "name": "decimal.Context.radix()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.radix"
    },
    {
        "name": "decimal.Context.remainder()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.remainder"
    },
    {
        "name": "decimal.Context.remainder_near()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.remainder_near"
    },
    {
        "name": "decimal.Context.rotate()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.rotate"
    },
    {
        "name": "decimal.Context.same_quantum()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.same_quantum"
    },
    {
        "name": "decimal.Context.scaleb()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.scaleb"
    },
    {
        "name": "decimal.Context.shift()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.shift"
    },
    {
        "name": "decimal.Context.sqrt()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.sqrt"
    },
    {
        "name": "decimal.Context.subtract()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.subtract"
    },
    {
        "name": "decimal.Context.to_eng_string()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.to_eng_string"
    },
    {
        "name": "decimal.Context.to_integral_exact()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.to_integral_exact"
    },
    {
        "name": "decimal.Context.to_sci_string()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Context.to_sci_string"
    },
    {
        "name": "decimal.Decimal",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal"
    },
    {
        "name": "decimal.Decimal.adjusted()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.adjusted"
    },
    {
        "name": "decimal.Decimal.as_tuple()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.as_tuple"
    },
    {
        "name": "decimal.Decimal.canonical()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.canonical"
    },
    {
        "name": "decimal.Decimal.compare()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.compare"
    },
    {
        "name": "decimal.Decimal.compare_signal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.compare_signal"
    },
    {
        "name": "decimal.Decimal.compare_total()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.compare_total"
    },
    {
        "name": "decimal.Decimal.compare_total_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.compare_total_mag"
    },
    {
        "name": "decimal.Decimal.conjugate()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.conjugate"
    },
    {
        "name": "decimal.Decimal.copy_abs()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.copy_abs"
    },
    {
        "name": "decimal.Decimal.copy_negate()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.copy_negate"
    },
    {
        "name": "decimal.Decimal.copy_sign()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.copy_sign"
    },
    {
        "name": "decimal.Decimal.exp()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.exp"
    },
    {
        "name": "decimal.Decimal.fma()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.fma"
    },
    {
        "name": "decimal.Decimal.from_float()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.from_float"
    },
    {
        "name": "decimal.Decimal.is_canonical()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_canonical"
    },
    {
        "name": "decimal.Decimal.is_finite()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_finite"
    },
    {
        "name": "decimal.Decimal.is_infinite()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_infinite"
    },
    {
        "name": "decimal.Decimal.is_nan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_nan"
    },
    {
        "name": "decimal.Decimal.is_normal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_normal"
    },
    {
        "name": "decimal.Decimal.is_qnan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_qnan"
    },
    {
        "name": "decimal.Decimal.is_signed()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_signed"
    },
    {
        "name": "decimal.Decimal.is_snan()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_snan"
    },
    {
        "name": "decimal.Decimal.is_subnormal()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_subnormal"
    },
    {
        "name": "decimal.Decimal.is_zero()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.is_zero"
    },
    {
        "name": "decimal.Decimal.ln()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.ln"
    },
    {
        "name": "decimal.Decimal.log10()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.log10"
    },
    {
        "name": "decimal.Decimal.logb()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.logb"
    },
    {
        "name": "decimal.Decimal.logical_and()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.logical_and"
    },
    {
        "name": "decimal.Decimal.logical_invert()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.logical_invert"
    },
    {
        "name": "decimal.Decimal.logical_or()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.logical_or"
    },
    {
        "name": "decimal.Decimal.logical_xor()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.logical_xor"
    },
    {
        "name": "decimal.Decimal.max()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.max"
    },
    {
        "name": "decimal.Decimal.max_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.max_mag"
    },
    {
        "name": "decimal.Decimal.min()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.min"
    },
    {
        "name": "decimal.Decimal.min_mag()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.min_mag"
    },
    {
        "name": "decimal.Decimal.next_minus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.next_minus"
    },
    {
        "name": "decimal.Decimal.next_plus()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.next_plus"
    },
    {
        "name": "decimal.Decimal.next_toward()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.next_toward"
    },
    {
        "name": "decimal.Decimal.normalize()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.normalize"
    },
    {
        "name": "decimal.Decimal.number_class()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.number_class"
    },
    {
        "name": "decimal.Decimal.quantize()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.quantize"
    },
    {
        "name": "decimal.Decimal.radix()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.radix"
    },
    {
        "name": "decimal.Decimal.remainder_near()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.remainder_near"
    },
    {
        "name": "decimal.Decimal.rotate()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.rotate"
    },
    {
        "name": "decimal.Decimal.same_quantum()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.same_quantum"
    },
    {
        "name": "decimal.Decimal.scaleb()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.scaleb"
    },
    {
        "name": "decimal.Decimal.shift()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.shift"
    },
    {
        "name": "decimal.Decimal.sqrt()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.sqrt"
    },
    {
        "name": "decimal.Decimal.to_eng_string()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.to_eng_string"
    },
    {
        "name": "decimal.Decimal.to_integral()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.to_integral"
    },
    {
        "name": "decimal.Decimal.to_integral_exact()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.to_integral_exact"
    },
    {
        "name": "decimal.Decimal.to_integral_value()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Decimal.to_integral_value"
    },
    {
        "name": "decimal.DecimalException",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.DecimalException"
    },
    {
        "name": "decimal.DefaultContext",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.DefaultContext"
    },
    {
        "name": "decimal.DivisionByZero",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.DivisionByZero"
    },
    {
        "name": "decimal.ExtendedContext",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.ExtendedContext"
    },
    {
        "name": "decimal.FloatOperation",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.FloatOperation"
    },
    {
        "name": "decimal.getcontext()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.getcontext"
    },
    {
        "name": "decimal.Inexact",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Inexact"
    },
    {
        "name": "decimal.InvalidOperation",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.InvalidOperation"
    },
    {
        "name": "decimal.localcontext()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.localcontext"
    },
    {
        "name": "decimal.Overflow",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Overflow"
    },
    {
        "name": "decimal.Rounded",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Rounded"
    },
    {
        "name": "decimal.setcontext()",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.setcontext"
    },
    {
        "name": "decimal.Subnormal",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Subnormal"
    },
    {
        "name": "decimal.Underflow",
        "type": "Numeric & Mathematical",
        "path": "library/decimal#decimal.Underflow"
    },
    {
        "name": "delattr()",
        "type": "Built-in Functions",
        "path": "library/functions#delattr"
    },
    {
        "name": "DeprecationWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#DeprecationWarning"
    },
    {
        "name": "Develop with asyncio",
        "type": "Input/ouput",
        "path": "library/asyncio-dev"
    },
    {
        "name": "dict",
        "type": "Built-in Functions",
        "path": "library/functions#dict"
    },
    {
        "name": "dict",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict"
    },
    {
        "name": "dict.clear()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.clear"
    },
    {
        "name": "dict.copy()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.copy"
    },
    {
        "name": "dict.fromkeys()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.fromkeys"
    },
    {
        "name": "dict.get()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.get"
    },
    {
        "name": "dict.items()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.items"
    },
    {
        "name": "dict.keys()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.keys"
    },
    {
        "name": "dict.pop()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.pop"
    },
    {
        "name": "dict.popitem()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.popitem"
    },
    {
        "name": "dict.setdefault()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.setdefault"
    },
    {
        "name": "dict.update()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.update"
    },
    {
        "name": "dict.values()",
        "type": "Built-in Types",
        "path": "library/stdtypes#dict.values"
    },
    {
        "name": "difflib",
        "type": "Text Processing",
        "path": "library/difflib"
    },
    {
        "name": "difflib.context_diff()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.context_diff"
    },
    {
        "name": "difflib.Differ",
        "type": "Text Processing",
        "path": "library/difflib#difflib.Differ"
    },
    {
        "name": "difflib.Differ.compare()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.Differ.compare"
    },
    {
        "name": "difflib.get_close_matches()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.get_close_matches"
    },
    {
        "name": "difflib.HtmlDiff",
        "type": "Text Processing",
        "path": "library/difflib#difflib.HtmlDiff"
    },
    {
        "name": "difflib.HtmlDiff.make_file()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.HtmlDiff.make_file"
    },
    {
        "name": "difflib.HtmlDiff.make_table()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.HtmlDiff.make_table"
    },
    {
        "name": "difflib.HtmlDiff.__init__()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.HtmlDiff.__init__"
    },
    {
        "name": "difflib.IS_CHARACTER_JUNK()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.IS_CHARACTER_JUNK"
    },
    {
        "name": "difflib.IS_LINE_JUNK()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.IS_LINE_JUNK"
    },
    {
        "name": "difflib.ndiff()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.ndiff"
    },
    {
        "name": "difflib.restore()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.restore"
    },
    {
        "name": "difflib.SequenceMatcher",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher"
    },
    {
        "name": "difflib.SequenceMatcher.find_longest_match()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.find_longest_match"
    },
    {
        "name": "difflib.SequenceMatcher.get_grouped_opcodes()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.get_grouped_opcodes"
    },
    {
        "name": "difflib.SequenceMatcher.get_matching_blocks()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.get_matching_blocks"
    },
    {
        "name": "difflib.SequenceMatcher.get_opcodes()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.get_opcodes"
    },
    {
        "name": "difflib.SequenceMatcher.quick_ratio()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.quick_ratio"
    },
    {
        "name": "difflib.SequenceMatcher.ratio()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.ratio"
    },
    {
        "name": "difflib.SequenceMatcher.real_quick_ratio()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.real_quick_ratio"
    },
    {
        "name": "difflib.SequenceMatcher.set_seq1()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.set_seq1"
    },
    {
        "name": "difflib.SequenceMatcher.set_seq2()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.set_seq2"
    },
    {
        "name": "difflib.SequenceMatcher.set_seqs()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.SequenceMatcher.set_seqs"
    },
    {
        "name": "difflib.unified_diff()",
        "type": "Text Processing",
        "path": "library/difflib#difflib.unified_diff"
    },
    {
        "name": "dir()",
        "type": "Built-in Functions",
        "path": "library/functions#dir"
    },
    {
        "name": "distutils",
        "type": "Software Packaging & Distribution",
        "path": "library/distutils"
    },
    {
        "name": "divmod()",
        "type": "Built-in Functions",
        "path": "library/functions#divmod"
    },
    {
        "name": "doctest",
        "type": "Development Tools",
        "path": "library/doctest"
    },
    {
        "name": "doctest.debug()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.debug"
    },
    {
        "name": "doctest.DebugRunner",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DebugRunner"
    },
    {
        "name": "doctest.debug_src()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.debug_src"
    },
    {
        "name": "doctest.DocFileSuite()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocFileSuite"
    },
    {
        "name": "doctest.DocTest",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest"
    },
    {
        "name": "doctest.DocTest.docstring",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.docstring"
    },
    {
        "name": "doctest.DocTest.examples",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.examples"
    },
    {
        "name": "doctest.DocTest.filename",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.filename"
    },
    {
        "name": "doctest.DocTest.globs",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.globs"
    },
    {
        "name": "doctest.DocTest.lineno",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.lineno"
    },
    {
        "name": "doctest.DocTest.name",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTest.name"
    },
    {
        "name": "doctest.DocTestFailure",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFailure"
    },
    {
        "name": "doctest.DocTestFailure.example",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFailure.example"
    },
    {
        "name": "doctest.DocTestFailure.got",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFailure.got"
    },
    {
        "name": "doctest.DocTestFailure.test",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFailure.test"
    },
    {
        "name": "doctest.DocTestFinder",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFinder"
    },
    {
        "name": "doctest.DocTestFinder.find()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestFinder.find"
    },
    {
        "name": "doctest.DocTestParser",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestParser"
    },
    {
        "name": "doctest.DocTestParser.get_doctest()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestParser.get_doctest"
    },
    {
        "name": "doctest.DocTestParser.get_examples()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestParser.get_examples"
    },
    {
        "name": "doctest.DocTestParser.parse()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestParser.parse"
    },
    {
        "name": "doctest.DocTestRunner",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner"
    },
    {
        "name": "doctest.DocTestRunner.report_failure()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.report_failure"
    },
    {
        "name": "doctest.DocTestRunner.report_start()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.report_start"
    },
    {
        "name": "doctest.DocTestRunner.report_success()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.report_success"
    },
    {
        "name": "doctest.DocTestRunner.report_unexpected_exception()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.report_unexpected_exception"
    },
    {
        "name": "doctest.DocTestRunner.run()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.run"
    },
    {
        "name": "doctest.DocTestRunner.summarize()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestRunner.summarize"
    },
    {
        "name": "doctest.DocTestSuite()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.DocTestSuite"
    },
    {
        "name": "doctest.Example",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example"
    },
    {
        "name": "doctest.Example.exc_msg",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.exc_msg"
    },
    {
        "name": "doctest.Example.indent",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.indent"
    },
    {
        "name": "doctest.Example.lineno",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.lineno"
    },
    {
        "name": "doctest.Example.options",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.options"
    },
    {
        "name": "doctest.Example.source",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.source"
    },
    {
        "name": "doctest.Example.want",
        "type": "Development Tools",
        "path": "library/doctest#doctest.Example.want"
    },
    {
        "name": "doctest.OutputChecker",
        "type": "Development Tools",
        "path": "library/doctest#doctest.OutputChecker"
    },
    {
        "name": "doctest.OutputChecker.check_output()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.OutputChecker.check_output"
    },
    {
        "name": "doctest.OutputChecker.output_difference()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.OutputChecker.output_difference"
    },
    {
        "name": "doctest.register_optionflag()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.register_optionflag"
    },
    {
        "name": "doctest.run_docstring_examples()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.run_docstring_examples"
    },
    {
        "name": "doctest.script_from_examples()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.script_from_examples"
    },
    {
        "name": "doctest.set_unittest_reportflags()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.set_unittest_reportflags"
    },
    {
        "name": "doctest.testfile()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.testfile"
    },
    {
        "name": "doctest.testmod()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.testmod"
    },
    {
        "name": "doctest.testsource()",
        "type": "Development Tools",
        "path": "library/doctest#doctest.testsource"
    },
    {
        "name": "doctest.UnexpectedException",
        "type": "Development Tools",
        "path": "library/doctest#doctest.UnexpectedException"
    },
    {
        "name": "doctest.UnexpectedException.example",
        "type": "Development Tools",
        "path": "library/doctest#doctest.UnexpectedException.example"
    },
    {
        "name": "doctest.UnexpectedException.exc_info",
        "type": "Development Tools",
        "path": "library/doctest#doctest.UnexpectedException.exc_info"
    },
    {
        "name": "doctest.UnexpectedException.test",
        "type": "Development Tools",
        "path": "library/doctest#doctest.UnexpectedException.test"
    },
    {
        "name": "dummy_threading",
        "type": "Concurrent Execution",
        "path": "library/dummy_threading"
    },
    {
        "name": "Ellipsis",
        "type": "Built-in Constants",
        "path": "library/constants#Ellipsis"
    },
    {
        "name": "email",
        "type": "Internet Data",
        "path": "library/email"
    },
    {
        "name": "email.charset.add_alias()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.add_alias"
    },
    {
        "name": "email.charset.add_charset()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.add_charset"
    },
    {
        "name": "email.charset.add_codec()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.add_codec"
    },
    {
        "name": "email.charset.Charset",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset"
    },
    {
        "name": "email.charset.Charset.body_encode()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.body_encode"
    },
    {
        "name": "email.charset.Charset.body_encoding",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.body_encoding"
    },
    {
        "name": "email.charset.Charset.get_body_encoding()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.get_body_encoding"
    },
    {
        "name": "email.charset.Charset.get_output_charset()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.get_output_charset"
    },
    {
        "name": "email.charset.Charset.header_encode()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.header_encode"
    },
    {
        "name": "email.charset.Charset.header_encode_lines()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.header_encode_lines"
    },
    {
        "name": "email.charset.Charset.header_encoding",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.header_encoding"
    },
    {
        "name": "email.charset.Charset.input_charset",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.input_charset"
    },
    {
        "name": "email.charset.Charset.input_codec",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.input_codec"
    },
    {
        "name": "email.charset.Charset.output_charset",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.output_charset"
    },
    {
        "name": "email.charset.Charset.output_codec",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.output_codec"
    },
    {
        "name": "email.charset.Charset.__eq__()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.__eq__"
    },
    {
        "name": "email.charset.Charset.__ne__()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.__ne__"
    },
    {
        "name": "email.charset.Charset.__str__()",
        "type": "Internet Data",
        "path": "library/email.charset#email.charset.Charset.__str__"
    },
    {
        "name": "email.charset: Representing character sets",
        "type": "Internet Data",
        "path": "library/email.charset"
    },
    {
        "name": "email.contentmanager.ContentManager",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.ContentManager"
    },
    {
        "name": "email.contentmanager.ContentManager.add_get_handler()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.ContentManager.add_get_handler"
    },
    {
        "name": "email.contentmanager.ContentManager.add_set_handler()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.ContentManager.add_set_handler"
    },
    {
        "name": "email.contentmanager.ContentManager.get_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.ContentManager.get_content"
    },
    {
        "name": "email.contentmanager.ContentManager.set_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.ContentManager.set_content"
    },
    {
        "name": "email.contentmanager.get_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.get_content"
    },
    {
        "name": "email.contentmanager.raw_data_manager",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.raw_data_manager"
    },
    {
        "name": "email.contentmanager.set_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.contentmanager.set_content"
    },
    {
        "name": "email.contentmanager: Managing MIME Content",
        "type": "Internet Data",
        "path": "library/email.contentmanager"
    },
    {
        "name": "email.encoders.encode_7or8bit()",
        "type": "Internet Data",
        "path": "library/email.encoders#email.encoders.encode_7or8bit"
    },
    {
        "name": "email.encoders.encode_base64()",
        "type": "Internet Data",
        "path": "library/email.encoders#email.encoders.encode_base64"
    },
    {
        "name": "email.encoders.encode_noop()",
        "type": "Internet Data",
        "path": "library/email.encoders#email.encoders.encode_noop"
    },
    {
        "name": "email.encoders.encode_quopri()",
        "type": "Internet Data",
        "path": "library/email.encoders#email.encoders.encode_quopri"
    },
    {
        "name": "email.encoders: Encoders",
        "type": "Internet Data",
        "path": "library/email.encoders"
    },
    {
        "name": "email.errors.BoundaryError",
        "type": "Internet Data",
        "path": "library/email.errors#email.errors.BoundaryError"
    },
    {
        "name": "email.errors.HeaderParseError",
        "type": "Internet Data",
        "path": "library/email.errors#email.errors.HeaderParseError"
    },
    {
        "name": "email.errors.MessageError",
        "type": "Internet Data",
        "path": "library/email.errors#email.errors.MessageError"
    },
    {
        "name": "email.errors.MessageParseError",
        "type": "Internet Data",
        "path": "library/email.errors#email.errors.MessageParseError"
    },
    {
        "name": "email.errors.MultipartConversionError",
        "type": "Internet Data",
        "path": "library/email.errors#email.errors.MultipartConversionError"
    },
    {
        "name": "email.errors: Exception and Defect classes",
        "type": "Internet Data",
        "path": "library/email.errors"
    },
    {
        "name": "email.generator.BytesGenerator",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.BytesGenerator"
    },
    {
        "name": "email.generator.BytesGenerator.clone()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.BytesGenerator.clone"
    },
    {
        "name": "email.generator.BytesGenerator.flatten()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.BytesGenerator.flatten"
    },
    {
        "name": "email.generator.BytesGenerator.write()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.BytesGenerator.write"
    },
    {
        "name": "email.generator.DecodedGenerator",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.DecodedGenerator"
    },
    {
        "name": "email.generator.Generator",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.Generator"
    },
    {
        "name": "email.generator.Generator.clone()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.Generator.clone"
    },
    {
        "name": "email.generator.Generator.flatten()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.Generator.flatten"
    },
    {
        "name": "email.generator.Generator.write()",
        "type": "Internet Data",
        "path": "library/email.generator#email.generator.Generator.write"
    },
    {
        "name": "email.generator: Generating MIME documents",
        "type": "Internet Data",
        "path": "library/email.generator"
    },
    {
        "name": "email.header.decode_header()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.decode_header"
    },
    {
        "name": "email.header.Header",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header"
    },
    {
        "name": "email.header.Header.append()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header.append"
    },
    {
        "name": "email.header.Header.encode()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header.encode"
    },
    {
        "name": "email.header.Header.__eq__()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header.__eq__"
    },
    {
        "name": "email.header.Header.__ne__()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header.__ne__"
    },
    {
        "name": "email.header.Header.__str__()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.Header.__str__"
    },
    {
        "name": "email.header.make_header()",
        "type": "Internet Data",
        "path": "library/email.header#email.header.make_header"
    },
    {
        "name": "email.header: Internationalized headers",
        "type": "Internet Data",
        "path": "library/email.header"
    },
    {
        "name": "email.headerregistry.Address",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address"
    },
    {
        "name": "email.headerregistry.Address.addr_spec",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address.addr_spec"
    },
    {
        "name": "email.headerregistry.Address.display_name",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address.display_name"
    },
    {
        "name": "email.headerregistry.Address.domain",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address.domain"
    },
    {
        "name": "email.headerregistry.Address.username",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address.username"
    },
    {
        "name": "email.headerregistry.Address.__str__()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Address.__str__"
    },
    {
        "name": "email.headerregistry.AddressHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.AddressHeader"
    },
    {
        "name": "email.headerregistry.AddressHeader.addresses",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.AddressHeader.addresses"
    },
    {
        "name": "email.headerregistry.AddressHeader.groups",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.AddressHeader.groups"
    },
    {
        "name": "email.headerregistry.BaseHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.BaseHeader"
    },
    {
        "name": "email.headerregistry.BaseHeader.defects",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.BaseHeader.defects"
    },
    {
        "name": "email.headerregistry.BaseHeader.fold()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.BaseHeader.fold"
    },
    {
        "name": "email.headerregistry.BaseHeader.max_count",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.BaseHeader.max_count"
    },
    {
        "name": "email.headerregistry.BaseHeader.name",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.BaseHeader.name"
    },
    {
        "name": "email.headerregistry.ContentDispositionHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentDispositionHeader"
    },
    {
        "name": "email.headerregistry.ContentTransferEncoding",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTransferEncoding"
    },
    {
        "name": "email.headerregistry.ContentTransferEncoding.cte",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTransferEncoding.cte"
    },
    {
        "name": "email.headerregistry.ContentTypeHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTypeHeader"
    },
    {
        "name": "email.headerregistry.ContentTypeHeader.content_type",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTypeHeader.content_type"
    },
    {
        "name": "email.headerregistry.ContentTypeHeader.maintype",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTypeHeader.maintype"
    },
    {
        "name": "email.headerregistry.ContentTypeHeader.subtype",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ContentTypeHeader.subtype"
    },
    {
        "name": "email.headerregistry.DateHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.DateHeader"
    },
    {
        "name": "email.headerregistry.DateHeader.datetime",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.DateHeader.datetime"
    },
    {
        "name": "email.headerregistry.Group",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Group"
    },
    {
        "name": "email.headerregistry.Group.addresses",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Group.addresses"
    },
    {
        "name": "email.headerregistry.Group.display_name",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Group.display_name"
    },
    {
        "name": "email.headerregistry.Group.__str__()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.Group.__str__"
    },
    {
        "name": "email.headerregistry.HeaderRegistry",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.HeaderRegistry"
    },
    {
        "name": "email.headerregistry.HeaderRegistry.map_to_type()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.HeaderRegistry.map_to_type"
    },
    {
        "name": "email.headerregistry.HeaderRegistry.__call__()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.HeaderRegistry.__call__"
    },
    {
        "name": "email.headerregistry.HeaderRegistry.__getitem__()",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.HeaderRegistry.__getitem__"
    },
    {
        "name": "email.headerregistry.MIMEVersionHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.MIMEVersionHeader"
    },
    {
        "name": "email.headerregistry.MIMEVersionHeader.major",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.MIMEVersionHeader.major"
    },
    {
        "name": "email.headerregistry.MIMEVersionHeader.minor",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.MIMEVersionHeader.minor"
    },
    {
        "name": "email.headerregistry.MIMEVersionHeader.version",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.MIMEVersionHeader.version"
    },
    {
        "name": "email.headerregistry.ParameterizedMIMEHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ParameterizedMIMEHeader"
    },
    {
        "name": "email.headerregistry.ParameterizedMIMEHeader.params",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.ParameterizedMIMEHeader.params"
    },
    {
        "name": "email.headerregistry.SingleAddressHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.SingleAddressHeader"
    },
    {
        "name": "email.headerregistry.SingleAddressHeader.address",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.SingleAddressHeader.address"
    },
    {
        "name": "email.headerregistry.UnstructuredHeader",
        "type": "Internet Data",
        "path": "library/email.headerregistry#email.headerregistry.UnstructuredHeader"
    },
    {
        "name": "email.headerregistry: Custom Header Objects",
        "type": "Internet Data",
        "path": "library/email.headerregistry"
    },
    {
        "name": "email.iterators.body_line_iterator()",
        "type": "Internet Data",
        "path": "library/email.iterators#email.iterators.body_line_iterator"
    },
    {
        "name": "email.iterators.typed_subpart_iterator()",
        "type": "Internet Data",
        "path": "library/email.iterators#email.iterators.typed_subpart_iterator"
    },
    {
        "name": "email.iterators._structure()",
        "type": "Internet Data",
        "path": "library/email.iterators#email.iterators._structure"
    },
    {
        "name": "email.iterators: Iterators",
        "type": "Internet Data",
        "path": "library/email.iterators"
    },
    {
        "name": "email.message.EmailMessage",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage"
    },
    {
        "name": "email.message.EmailMessage.add_alternative()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.add_alternative"
    },
    {
        "name": "email.message.EmailMessage.add_attachment()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.add_attachment"
    },
    {
        "name": "email.message.EmailMessage.add_related()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.add_related"
    },
    {
        "name": "email.message.EmailMessage.clear()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.clear"
    },
    {
        "name": "email.message.EmailMessage.clear_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.clear_content"
    },
    {
        "name": "email.message.EmailMessage.get_body()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.get_body"
    },
    {
        "name": "email.message.EmailMessage.get_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.get_content"
    },
    {
        "name": "email.message.EmailMessage.is_attachment()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.is_attachment"
    },
    {
        "name": "email.message.EmailMessage.iter_attachments()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.iter_attachments"
    },
    {
        "name": "email.message.EmailMessage.iter_parts()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.iter_parts"
    },
    {
        "name": "email.message.EmailMessage.make_alternative()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.make_alternative"
    },
    {
        "name": "email.message.EmailMessage.make_mixed()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.make_mixed"
    },
    {
        "name": "email.message.EmailMessage.make_related()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.make_related"
    },
    {
        "name": "email.message.EmailMessage.set_content()",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.EmailMessage.set_content"
    },
    {
        "name": "email.message.Message",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message"
    },
    {
        "name": "email.message.Message.add_header()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.add_header"
    },
    {
        "name": "email.message.Message.as_bytes()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.as_bytes"
    },
    {
        "name": "email.message.Message.as_string()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.as_string"
    },
    {
        "name": "email.message.Message.attach()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.attach"
    },
    {
        "name": "email.message.Message.defects",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.defects"
    },
    {
        "name": "email.message.Message.del_param()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.del_param"
    },
    {
        "name": "email.message.Message.epilogue",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.epilogue"
    },
    {
        "name": "email.message.Message.get()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get"
    },
    {
        "name": "email.message.Message.get_all()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_all"
    },
    {
        "name": "email.message.Message.get_boundary()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_boundary"
    },
    {
        "name": "email.message.Message.get_charset()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_charset"
    },
    {
        "name": "email.message.Message.get_charsets()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_charsets"
    },
    {
        "name": "email.message.Message.get_content_charset()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_content_charset"
    },
    {
        "name": "email.message.Message.get_content_maintype()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_content_maintype"
    },
    {
        "name": "email.message.Message.get_content_subtype()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_content_subtype"
    },
    {
        "name": "email.message.Message.get_content_type()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_content_type"
    },
    {
        "name": "email.message.Message.get_default_type()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_default_type"
    },
    {
        "name": "email.message.Message.get_filename()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_filename"
    },
    {
        "name": "email.message.Message.get_param()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_param"
    },
    {
        "name": "email.message.Message.get_params()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_params"
    },
    {
        "name": "email.message.Message.get_payload()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_payload"
    },
    {
        "name": "email.message.Message.get_unixfrom()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.get_unixfrom"
    },
    {
        "name": "email.message.Message.is_multipart()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.is_multipart"
    },
    {
        "name": "email.message.Message.items()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.items"
    },
    {
        "name": "email.message.Message.keys()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.keys"
    },
    {
        "name": "email.message.Message.preamble",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.preamble"
    },
    {
        "name": "email.message.Message.replace_header()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.replace_header"
    },
    {
        "name": "email.message.Message.set_boundary()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_boundary"
    },
    {
        "name": "email.message.Message.set_charset()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_charset"
    },
    {
        "name": "email.message.Message.set_default_type()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_default_type"
    },
    {
        "name": "email.message.Message.set_param()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_param"
    },
    {
        "name": "email.message.Message.set_payload()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_payload"
    },
    {
        "name": "email.message.Message.set_type()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_type"
    },
    {
        "name": "email.message.Message.set_unixfrom()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.set_unixfrom"
    },
    {
        "name": "email.message.Message.values()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.values"
    },
    {
        "name": "email.message.Message.walk()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.walk"
    },
    {
        "name": "email.message.Message.__bytes__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__bytes__"
    },
    {
        "name": "email.message.Message.__contains__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__contains__"
    },
    {
        "name": "email.message.Message.__delitem__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__delitem__"
    },
    {
        "name": "email.message.Message.__getitem__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__getitem__"
    },
    {
        "name": "email.message.Message.__len__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__len__"
    },
    {
        "name": "email.message.Message.__setitem__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__setitem__"
    },
    {
        "name": "email.message.Message.__str__()",
        "type": "Internet Data",
        "path": "library/email.message#email.message.Message.__str__"
    },
    {
        "name": "email.message.MIMEPart",
        "type": "Internet Data",
        "path": "library/email.contentmanager#email.message.MIMEPart"
    },
    {
        "name": "email.message: Representing an email message",
        "type": "Internet Data",
        "path": "library/email.message"
    },
    {
        "name": "email.message_from_binary_file()",
        "type": "Internet Data",
        "path": "library/email.parser#email.message_from_binary_file"
    },
    {
        "name": "email.message_from_bytes()",
        "type": "Internet Data",
        "path": "library/email.parser#email.message_from_bytes"
    },
    {
        "name": "email.message_from_file()",
        "type": "Internet Data",
        "path": "library/email.parser#email.message_from_file"
    },
    {
        "name": "email.message_from_string()",
        "type": "Internet Data",
        "path": "library/email.parser#email.message_from_string"
    },
    {
        "name": "email.mime.application.MIMEApplication",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.application.MIMEApplication"
    },
    {
        "name": "email.mime.audio.MIMEAudio",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.audio.MIMEAudio"
    },
    {
        "name": "email.mime.base.MIMEBase",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.base.MIMEBase"
    },
    {
        "name": "email.mime.image.MIMEImage",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.image.MIMEImage"
    },
    {
        "name": "email.mime.message.MIMEMessage",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.message.MIMEMessage"
    },
    {
        "name": "email.mime.multipart.MIMEMultipart",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.multipart.MIMEMultipart"
    },
    {
        "name": "email.mime.nonmultipart.MIMENonMultipart",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.nonmultipart.MIMENonMultipart"
    },
    {
        "name": "email.mime.text.MIMEText",
        "type": "Internet Data",
        "path": "library/email.mime#email.mime.text.MIMEText"
    },
    {
        "name": "email.mime: Creating email and MIME objects from scratch",
        "type": "Internet Data",
        "path": "library/email.mime"
    },
    {
        "name": "email.parser.BytesFeedParser",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.BytesFeedParser"
    },
    {
        "name": "email.parser.BytesParser",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.BytesParser"
    },
    {
        "name": "email.parser.BytesParser.parse()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.BytesParser.parse"
    },
    {
        "name": "email.parser.BytesParser.parsebytes()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.BytesParser.parsebytes"
    },
    {
        "name": "email.parser.FeedParser",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.FeedParser"
    },
    {
        "name": "email.parser.FeedParser.close()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.FeedParser.close"
    },
    {
        "name": "email.parser.FeedParser.feed()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.FeedParser.feed"
    },
    {
        "name": "email.parser.Parser",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.Parser"
    },
    {
        "name": "email.parser.Parser.parse()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.Parser.parse"
    },
    {
        "name": "email.parser.Parser.parsestr()",
        "type": "Internet Data",
        "path": "library/email.parser#email.parser.Parser.parsestr"
    },
    {
        "name": "email.parser: Parsing email messages",
        "type": "Internet Data",
        "path": "library/email.parser"
    },
    {
        "name": "email.policy.Compat32",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32"
    },
    {
        "name": "email.policy.Compat32.fold()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32.fold"
    },
    {
        "name": "email.policy.Compat32.fold_binary()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32.fold_binary"
    },
    {
        "name": "email.policy.Compat32.header_fetch_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32.header_fetch_parse"
    },
    {
        "name": "email.policy.Compat32.header_source_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32.header_source_parse"
    },
    {
        "name": "email.policy.Compat32.header_store_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Compat32.header_store_parse"
    },
    {
        "name": "email.policy.default",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.default"
    },
    {
        "name": "email.policy.EmailPolicy",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy"
    },
    {
        "name": "email.policy.EmailPolicy.content_manager",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.content_manager"
    },
    {
        "name": "email.policy.EmailPolicy.fold()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.fold"
    },
    {
        "name": "email.policy.EmailPolicy.fold_binary()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.fold_binary"
    },
    {
        "name": "email.policy.EmailPolicy.header_factory",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.header_factory"
    },
    {
        "name": "email.policy.EmailPolicy.header_fetch_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.header_fetch_parse"
    },
    {
        "name": "email.policy.EmailPolicy.header_max_count()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.header_max_count"
    },
    {
        "name": "email.policy.EmailPolicy.header_source_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.header_source_parse"
    },
    {
        "name": "email.policy.EmailPolicy.header_store_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.header_store_parse"
    },
    {
        "name": "email.policy.EmailPolicy.refold_source",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.EmailPolicy.refold_source"
    },
    {
        "name": "email.policy.Policy",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy"
    },
    {
        "name": "email.policy.Policy.clone()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.clone"
    },
    {
        "name": "email.policy.Policy.cte_type",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.cte_type"
    },
    {
        "name": "email.policy.Policy.fold()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.fold"
    },
    {
        "name": "email.policy.Policy.fold_binary()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.fold_binary"
    },
    {
        "name": "email.policy.Policy.handle_defect()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.handle_defect"
    },
    {
        "name": "email.policy.Policy.header_fetch_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.header_fetch_parse"
    },
    {
        "name": "email.policy.Policy.header_max_count()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.header_max_count"
    },
    {
        "name": "email.policy.Policy.header_source_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.header_source_parse"
    },
    {
        "name": "email.policy.Policy.header_store_parse()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.header_store_parse"
    },
    {
        "name": "email.policy.Policy.linesep",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.linesep"
    },
    {
        "name": "email.policy.Policy.max_line_length",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.max_line_length"
    },
    {
        "name": "email.policy.Policy.raise_on_defect",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.raise_on_defect"
    },
    {
        "name": "email.policy.Policy.register_defect()",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.Policy.register_defect"
    },
    {
        "name": "email.policy.strict",
        "type": "Internet Data",
        "path": "library/email.policy#email.policy.strict"
    },
    {
        "name": "email.policy: Policy Objects",
        "type": "Internet Data",
        "path": "library/email.policy"
    },
    {
        "name": "email.utils.collapse_rfc2231_value()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.collapse_rfc2231_value"
    },
    {
        "name": "email.utils.decode_params()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.decode_params"
    },
    {
        "name": "email.utils.decode_rfc2231()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.decode_rfc2231"
    },
    {
        "name": "email.utils.encode_rfc2231()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.encode_rfc2231"
    },
    {
        "name": "email.utils.formataddr()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.formataddr"
    },
    {
        "name": "email.utils.formatdate()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.formatdate"
    },
    {
        "name": "email.utils.format_datetime()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.format_datetime"
    },
    {
        "name": "email.utils.getaddresses()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.getaddresses"
    },
    {
        "name": "email.utils.localtime()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.localtime"
    },
    {
        "name": "email.utils.make_msgid()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.make_msgid"
    },
    {
        "name": "email.utils.mktime_tz()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.mktime_tz"
    },
    {
        "name": "email.utils.parseaddr()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.parseaddr"
    },
    {
        "name": "email.utils.parsedate()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.parsedate"
    },
    {
        "name": "email.utils.parsedate_to_datetime()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.parsedate_to_datetime"
    },
    {
        "name": "email.utils.parsedate_tz()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.parsedate_tz"
    },
    {
        "name": "email.utils.quote()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.quote"
    },
    {
        "name": "email.utils.unquote()",
        "type": "Internet Data",
        "path": "library/email.util#email.utils.unquote"
    },
    {
        "name": "email.utils: Miscellaneous utilities",
        "type": "Internet Data",
        "path": "library/email.util"
    },
    {
        "name": "email: Examples",
        "type": "Internet Data",
        "path": "library/email-examples"
    },
    {
        "name": "encodings.idna.nameprep()",
        "type": "Binary Data",
        "path": "library/codecs#encodings.idna.nameprep"
    },
    {
        "name": "encodings.idna.ToASCII()",
        "type": "Binary Data",
        "path": "library/codecs#encodings.idna.ToASCII"
    },
    {
        "name": "encodings.idna.ToUnicode()",
        "type": "Binary Data",
        "path": "library/codecs#encodings.idna.ToUnicode"
    },
    {
        "name": "ensurepip",
        "type": "Software Packaging & Distribution",
        "path": "library/ensurepip"
    },
    {
        "name": "ensurepip.bootstrap()",
        "type": "Software Packaging & Distribution",
        "path": "library/ensurepip#ensurepip.bootstrap"
    },
    {
        "name": "ensurepip.version()",
        "type": "Software Packaging & Distribution",
        "path": "library/ensurepip#ensurepip.version"
    },
    {
        "name": "enum",
        "type": "Data Types",
        "path": "library/enum"
    },
    {
        "name": "enum.Enum",
        "type": "Data Types",
        "path": "library/enum#enum.Enum"
    },
    {
        "name": "enum.IntEnum",
        "type": "Data Types",
        "path": "library/enum#enum.IntEnum"
    },
    {
        "name": "enum.unique()",
        "type": "Data Types",
        "path": "library/enum#enum.unique"
    },
    {
        "name": "enumerate()",
        "type": "Built-in Functions",
        "path": "library/functions#enumerate"
    },
    {
        "name": "EnvironmentError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#EnvironmentError"
    },
    {
        "name": "EOFError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#EOFError"
    },
    {
        "name": "errno",
        "type": "Operating System",
        "path": "library/errno"
    },
    {
        "name": "eval()",
        "type": "Built-in Functions",
        "path": "library/functions#eval"
    },
    {
        "name": "Event loops",
        "type": "Input/ouput",
        "path": "library/asyncio-eventloops"
    },
    {
        "name": "Exception",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#Exception"
    },
    {
        "name": "Exceptions",
        "type": "Built-in Exceptions",
        "path": "library/exceptions"
    },
    {
        "name": "exec()",
        "type": "Built-in Functions",
        "path": "library/functions#exec"
    },
    {
        "name": "exit",
        "type": "Built-in Constants",
        "path": "library/constants#exit"
    },
    {
        "name": "False",
        "type": "Built-in Constants",
        "path": "library/constants#False"
    },
    {
        "name": "faulthandler",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler"
    },
    {
        "name": "faulthandler.cancel_dump_traceback_later()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.cancel_dump_traceback_later"
    },
    {
        "name": "faulthandler.disable()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.disable"
    },
    {
        "name": "faulthandler.dump_traceback()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.dump_traceback"
    },
    {
        "name": "faulthandler.dump_traceback_later()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.dump_traceback_later"
    },
    {
        "name": "faulthandler.enable()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.enable"
    },
    {
        "name": "faulthandler.is_enabled()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.is_enabled"
    },
    {
        "name": "faulthandler.register()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.register"
    },
    {
        "name": "faulthandler.unregister()",
        "type": "Debugging & Profiling",
        "path": "library/faulthandler#faulthandler.unregister"
    },
    {
        "name": "fcntl",
        "type": "Unix",
        "path": "library/fcntl"
    },
    {
        "name": "fcntl.fcntl()",
        "type": "Unix",
        "path": "library/fcntl#fcntl.fcntl"
    },
    {
        "name": "fcntl.flock()",
        "type": "Unix",
        "path": "library/fcntl#fcntl.flock"
    },
    {
        "name": "fcntl.ioctl()",
        "type": "Unix",
        "path": "library/fcntl#fcntl.ioctl"
    },
    {
        "name": "fcntl.lockf()",
        "type": "Unix",
        "path": "library/fcntl#fcntl.lockf"
    },
    {
        "name": "File and Directory Access",
        "type": "File & Directory Access",
        "path": "library/filesys"
    },
    {
        "name": "filecmp",
        "type": "File & Directory Access",
        "path": "library/filecmp"
    },
    {
        "name": "filecmp.clear_cache()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.clear_cache"
    },
    {
        "name": "filecmp.cmp()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.cmp"
    },
    {
        "name": "filecmp.cmpfiles()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.cmpfiles"
    },
    {
        "name": "filecmp.DEFAULT_IGNORES",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.DEFAULT_IGNORES"
    },
    {
        "name": "filecmp.dircmp",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp"
    },
    {
        "name": "filecmp.dircmp.common",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.common"
    },
    {
        "name": "filecmp.dircmp.common_dirs",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.common_dirs"
    },
    {
        "name": "filecmp.dircmp.common_files",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.common_files"
    },
    {
        "name": "filecmp.dircmp.common_funny",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.common_funny"
    },
    {
        "name": "filecmp.dircmp.diff_files",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.diff_files"
    },
    {
        "name": "filecmp.dircmp.funny_files",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.funny_files"
    },
    {
        "name": "filecmp.dircmp.left",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.left"
    },
    {
        "name": "filecmp.dircmp.left_list",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.left_list"
    },
    {
        "name": "filecmp.dircmp.left_only",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.left_only"
    },
    {
        "name": "filecmp.dircmp.report()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.report"
    },
    {
        "name": "filecmp.dircmp.report_full_closure()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.report_full_closure"
    },
    {
        "name": "filecmp.dircmp.report_partial_closure()",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.report_partial_closure"
    },
    {
        "name": "filecmp.dircmp.right",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.right"
    },
    {
        "name": "filecmp.dircmp.right_list",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.right_list"
    },
    {
        "name": "filecmp.dircmp.right_only",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.right_only"
    },
    {
        "name": "filecmp.dircmp.same_files",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.same_files"
    },
    {
        "name": "filecmp.dircmp.subdirs",
        "type": "File & Directory Access",
        "path": "library/filecmp#filecmp.dircmp.subdirs"
    },
    {
        "name": "FileExistsError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#FileExistsError"
    },
    {
        "name": "fileinput",
        "type": "File & Directory Access",
        "path": "library/fileinput"
    },
    {
        "name": "fileinput.close()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.close"
    },
    {
        "name": "fileinput.FileInput",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.FileInput"
    },
    {
        "name": "fileinput.filelineno()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.filelineno"
    },
    {
        "name": "fileinput.filename()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.filename"
    },
    {
        "name": "fileinput.fileno()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.fileno"
    },
    {
        "name": "fileinput.hook_compressed()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.hook_compressed"
    },
    {
        "name": "fileinput.hook_encoded()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.hook_encoded"
    },
    {
        "name": "fileinput.input()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.input"
    },
    {
        "name": "fileinput.isfirstline()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.isfirstline"
    },
    {
        "name": "fileinput.isstdin()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.isstdin"
    },
    {
        "name": "fileinput.lineno()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.lineno"
    },
    {
        "name": "fileinput.nextfile()",
        "type": "File & Directory Access",
        "path": "library/fileinput#fileinput.nextfile"
    },
    {
        "name": "FileNotFoundError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#FileNotFoundError"
    },
    {
        "name": "filter()",
        "type": "Built-in Functions",
        "path": "library/functions#filter"
    },
    {
        "name": "float",
        "type": "Built-in Functions",
        "path": "library/functions#float"
    },
    {
        "name": "float.as_integer_ratio()",
        "type": "Built-in Types",
        "path": "library/stdtypes#float.as_integer_ratio"
    },
    {
        "name": "float.fromhex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#float.fromhex"
    },
    {
        "name": "float.hex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#float.hex"
    },
    {
        "name": "float.is_integer()",
        "type": "Built-in Types",
        "path": "library/stdtypes#float.is_integer"
    },
    {
        "name": "FloatingPointError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#FloatingPointError"
    },
    {
        "name": "fnmatch",
        "type": "File & Directory Access",
        "path": "library/fnmatch"
    },
    {
        "name": "fnmatch.filter()",
        "type": "File & Directory Access",
        "path": "library/fnmatch#fnmatch.filter"
    },
    {
        "name": "fnmatch.fnmatch()",
        "type": "File & Directory Access",
        "path": "library/fnmatch#fnmatch.fnmatch"
    },
    {
        "name": "fnmatch.fnmatchcase()",
        "type": "File & Directory Access",
        "path": "library/fnmatch#fnmatch.fnmatchcase"
    },
    {
        "name": "fnmatch.translate()",
        "type": "File & Directory Access",
        "path": "library/fnmatch#fnmatch.translate"
    },
    {
        "name": "format()",
        "type": "Built-in Functions",
        "path": "library/functions#format"
    },
    {
        "name": "fpectl",
        "type": "Runtime",
        "path": "library/fpectl"
    },
    {
        "name": "fpectl.FloatingPointError",
        "type": "Runtime",
        "path": "library/fpectl#fpectl.FloatingPointError"
    },
    {
        "name": "fpectl.turnoff_sigfpe()",
        "type": "Runtime",
        "path": "library/fpectl#fpectl.turnoff_sigfpe"
    },
    {
        "name": "fpectl.turnon_sigfpe()",
        "type": "Runtime",
        "path": "library/fpectl#fpectl.turnon_sigfpe"
    },
    {
        "name": "fractions",
        "type": "Numeric & Mathematical",
        "path": "library/fractions"
    },
    {
        "name": "fractions.Fraction",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction"
    },
    {
        "name": "fractions.Fraction.denominator",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.denominator"
    },
    {
        "name": "fractions.Fraction.from_decimal()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.from_decimal"
    },
    {
        "name": "fractions.Fraction.from_float()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.from_float"
    },
    {
        "name": "fractions.Fraction.limit_denominator()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.limit_denominator"
    },
    {
        "name": "fractions.Fraction.numerator",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.numerator"
    },
    {
        "name": "fractions.Fraction.__ceil__()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.__ceil__"
    },
    {
        "name": "fractions.Fraction.__floor__()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.__floor__"
    },
    {
        "name": "fractions.Fraction.__round__()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.Fraction.__round__"
    },
    {
        "name": "fractions.gcd()",
        "type": "Numeric & Mathematical",
        "path": "library/fractions#fractions.gcd"
    },
    {
        "name": "frozenset",
        "type": "Built-in Functions",
        "path": "library/functions#frozenset"
    },
    {
        "name": "frozenset",
        "type": "Built-in Types",
        "path": "library/stdtypes#frozenset"
    },
    {
        "name": "ftplib",
        "type": "Internet",
        "path": "library/ftplib"
    },
    {
        "name": "ftplib.all_errors",
        "type": "Internet",
        "path": "library/ftplib#ftplib.all_errors"
    },
    {
        "name": "ftplib.error_perm",
        "type": "Internet",
        "path": "library/ftplib#ftplib.error_perm"
    },
    {
        "name": "ftplib.error_proto",
        "type": "Internet",
        "path": "library/ftplib#ftplib.error_proto"
    },
    {
        "name": "ftplib.error_reply",
        "type": "Internet",
        "path": "library/ftplib#ftplib.error_reply"
    },
    {
        "name": "ftplib.error_temp",
        "type": "Internet",
        "path": "library/ftplib#ftplib.error_temp"
    },
    {
        "name": "ftplib.FTP",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP"
    },
    {
        "name": "ftplib.FTP.abort()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.abort"
    },
    {
        "name": "ftplib.FTP.close()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.close"
    },
    {
        "name": "ftplib.FTP.connect()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.connect"
    },
    {
        "name": "ftplib.FTP.cwd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.cwd"
    },
    {
        "name": "ftplib.FTP.delete()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.delete"
    },
    {
        "name": "ftplib.FTP.dir()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.dir"
    },
    {
        "name": "ftplib.FTP.getwelcome()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.getwelcome"
    },
    {
        "name": "ftplib.FTP.login()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.login"
    },
    {
        "name": "ftplib.FTP.mkd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.mkd"
    },
    {
        "name": "ftplib.FTP.mlsd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.mlsd"
    },
    {
        "name": "ftplib.FTP.nlst()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.nlst"
    },
    {
        "name": "ftplib.FTP.ntransfercmd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.ntransfercmd"
    },
    {
        "name": "ftplib.FTP.pwd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.pwd"
    },
    {
        "name": "ftplib.FTP.quit()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.quit"
    },
    {
        "name": "ftplib.FTP.rename()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.rename"
    },
    {
        "name": "ftplib.FTP.retrbinary()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.retrbinary"
    },
    {
        "name": "ftplib.FTP.retrlines()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.retrlines"
    },
    {
        "name": "ftplib.FTP.rmd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.rmd"
    },
    {
        "name": "ftplib.FTP.sendcmd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.sendcmd"
    },
    {
        "name": "ftplib.FTP.set_debuglevel()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.set_debuglevel"
    },
    {
        "name": "ftplib.FTP.set_pasv()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.set_pasv"
    },
    {
        "name": "ftplib.FTP.size()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.size"
    },
    {
        "name": "ftplib.FTP.storbinary()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.storbinary"
    },
    {
        "name": "ftplib.FTP.storlines()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.storlines"
    },
    {
        "name": "ftplib.FTP.transfercmd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.transfercmd"
    },
    {
        "name": "ftplib.FTP.voidcmd()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP.voidcmd"
    },
    {
        "name": "ftplib.FTP_TLS",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS"
    },
    {
        "name": "ftplib.FTP_TLS.auth()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS.auth"
    },
    {
        "name": "ftplib.FTP_TLS.ccc()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS.ccc"
    },
    {
        "name": "ftplib.FTP_TLS.prot_c()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS.prot_c"
    },
    {
        "name": "ftplib.FTP_TLS.prot_p()",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS.prot_p"
    },
    {
        "name": "ftplib.FTP_TLS.ssl_version",
        "type": "Internet",
        "path": "library/ftplib#ftplib.FTP_TLS.ssl_version"
    },
    {
        "name": "Functions",
        "type": "Built-in Functions",
        "path": "library/functions"
    },
    {
        "name": "functools",
        "type": "Functional Programming",
        "path": "library/functools"
    },
    {
        "name": "functools.cmp_to_key()",
        "type": "Functional Programming",
        "path": "library/functools#functools.cmp_to_key"
    },
    {
        "name": "functools.lru_cache()",
        "type": "Functional Programming",
        "path": "library/functools#functools.lru_cache"
    },
    {
        "name": "functools.partial()",
        "type": "Functional Programming",
        "path": "library/functools#functools.partial"
    },
    {
        "name": "functools.partial.args",
        "type": "Functional Programming",
        "path": "library/functools#functools.partial.args"
    },
    {
        "name": "functools.partial.func",
        "type": "Functional Programming",
        "path": "library/functools#functools.partial.func"
    },
    {
        "name": "functools.partial.keywords",
        "type": "Functional Programming",
        "path": "library/functools#functools.partial.keywords"
    },
    {
        "name": "functools.partialmethod",
        "type": "Functional Programming",
        "path": "library/functools#functools.partialmethod"
    },
    {
        "name": "functools.reduce()",
        "type": "Functional Programming",
        "path": "library/functools#functools.reduce"
    },
    {
        "name": "functools.singledispatch()",
        "type": "Functional Programming",
        "path": "library/functools#functools.singledispatch"
    },
    {
        "name": "functools.total_ordering()",
        "type": "Functional Programming",
        "path": "library/functools#functools.total_ordering"
    },
    {
        "name": "functools.update_wrapper()",
        "type": "Functional Programming",
        "path": "library/functools#functools.update_wrapper"
    },
    {
        "name": "functools.wraps()",
        "type": "Functional Programming",
        "path": "library/functools#functools.wraps"
    },
    {
        "name": "FutureWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#FutureWarning"
    },
    {
        "name": "gc",
        "type": "Runtime",
        "path": "library/gc"
    },
    {
        "name": "gc.callbacks",
        "type": "Runtime",
        "path": "library/gc#gc.callbacks"
    },
    {
        "name": "gc.collect()",
        "type": "Runtime",
        "path": "library/gc#gc.collect"
    },
    {
        "name": "gc.disable()",
        "type": "Runtime",
        "path": "library/gc#gc.disable"
    },
    {
        "name": "gc.enable()",
        "type": "Runtime",
        "path": "library/gc#gc.enable"
    },
    {
        "name": "gc.garbage",
        "type": "Runtime",
        "path": "library/gc#gc.garbage"
    },
    {
        "name": "gc.get_count()",
        "type": "Runtime",
        "path": "library/gc#gc.get_count"
    },
    {
        "name": "gc.get_debug()",
        "type": "Runtime",
        "path": "library/gc#gc.get_debug"
    },
    {
        "name": "gc.get_objects()",
        "type": "Runtime",
        "path": "library/gc#gc.get_objects"
    },
    {
        "name": "gc.get_referents()",
        "type": "Runtime",
        "path": "library/gc#gc.get_referents"
    },
    {
        "name": "gc.get_referrers()",
        "type": "Runtime",
        "path": "library/gc#gc.get_referrers"
    },
    {
        "name": "gc.get_stats()",
        "type": "Runtime",
        "path": "library/gc#gc.get_stats"
    },
    {
        "name": "gc.get_threshold()",
        "type": "Runtime",
        "path": "library/gc#gc.get_threshold"
    },
    {
        "name": "gc.isenabled()",
        "type": "Runtime",
        "path": "library/gc#gc.isenabled"
    },
    {
        "name": "gc.is_tracked()",
        "type": "Runtime",
        "path": "library/gc#gc.is_tracked"
    },
    {
        "name": "gc.set_debug()",
        "type": "Runtime",
        "path": "library/gc#gc.set_debug"
    },
    {
        "name": "gc.set_threshold()",
        "type": "Runtime",
        "path": "library/gc#gc.set_threshold"
    },
    {
        "name": "GeneratorExit",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#GeneratorExit"
    },
    {
        "name": "getattr()",
        "type": "Built-in Functions",
        "path": "library/functions#getattr"
    },
    {
        "name": "getopt",
        "type": "Operating System",
        "path": "library/getopt"
    },
    {
        "name": "getopt.error",
        "type": "Operating System",
        "path": "library/getopt#getopt.error"
    },
    {
        "name": "getopt.getopt()",
        "type": "Operating System",
        "path": "library/getopt#getopt.getopt"
    },
    {
        "name": "getopt.GetoptError",
        "type": "Operating System",
        "path": "library/getopt#getopt.GetoptError"
    },
    {
        "name": "getopt.gnu_getopt()",
        "type": "Operating System",
        "path": "library/getopt#getopt.gnu_getopt"
    },
    {
        "name": "getpass",
        "type": "Operating System",
        "path": "library/getpass"
    },
    {
        "name": "getpass.getpass()",
        "type": "Operating System",
        "path": "library/getpass#getpass.getpass"
    },
    {
        "name": "getpass.GetPassWarning",
        "type": "Operating System",
        "path": "library/getpass#getpass.GetPassWarning"
    },
    {
        "name": "getpass.getuser()",
        "type": "Operating System",
        "path": "library/getpass#getpass.getuser"
    },
    {
        "name": "gettext",
        "type": "Internationalization",
        "path": "library/gettext"
    },
    {
        "name": "gettext.bindtextdomain()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.bindtextdomain"
    },
    {
        "name": "gettext.bind_textdomain_codeset()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.bind_textdomain_codeset"
    },
    {
        "name": "gettext.dgettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.dgettext"
    },
    {
        "name": "gettext.dngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.dngettext"
    },
    {
        "name": "gettext.find()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.find"
    },
    {
        "name": "gettext.gettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.gettext"
    },
    {
        "name": "gettext.GNUTranslations.gettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.GNUTranslations.gettext"
    },
    {
        "name": "gettext.GNUTranslations.lgettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.GNUTranslations.lgettext"
    },
    {
        "name": "gettext.GNUTranslations.lngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.GNUTranslations.lngettext"
    },
    {
        "name": "gettext.GNUTranslations.ngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.GNUTranslations.ngettext"
    },
    {
        "name": "gettext.install()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.install"
    },
    {
        "name": "gettext.ldgettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.ldgettext"
    },
    {
        "name": "gettext.ldngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.ldngettext"
    },
    {
        "name": "gettext.lgettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.lgettext"
    },
    {
        "name": "gettext.lngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.lngettext"
    },
    {
        "name": "gettext.ngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.ngettext"
    },
    {
        "name": "gettext.NullTranslations",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations"
    },
    {
        "name": "gettext.NullTranslations.add_fallback()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.add_fallback"
    },
    {
        "name": "gettext.NullTranslations.charset()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.charset"
    },
    {
        "name": "gettext.NullTranslations.gettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.gettext"
    },
    {
        "name": "gettext.NullTranslations.info()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.info"
    },
    {
        "name": "gettext.NullTranslations.install()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.install"
    },
    {
        "name": "gettext.NullTranslations.lgettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.lgettext"
    },
    {
        "name": "gettext.NullTranslations.lngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.lngettext"
    },
    {
        "name": "gettext.NullTranslations.ngettext()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.ngettext"
    },
    {
        "name": "gettext.NullTranslations.output_charset()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.output_charset"
    },
    {
        "name": "gettext.NullTranslations.set_output_charset()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations.set_output_charset"
    },
    {
        "name": "gettext.NullTranslations._parse()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.NullTranslations._parse"
    },
    {
        "name": "gettext.textdomain()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.textdomain"
    },
    {
        "name": "gettext.translation()",
        "type": "Internationalization",
        "path": "library/gettext#gettext.translation"
    },
    {
        "name": "glob",
        "type": "File & Directory Access",
        "path": "library/glob"
    },
    {
        "name": "glob.escape()",
        "type": "File & Directory Access",
        "path": "library/glob#glob.escape"
    },
    {
        "name": "glob.glob()",
        "type": "File & Directory Access",
        "path": "library/glob#glob.glob"
    },
    {
        "name": "glob.iglob()",
        "type": "File & Directory Access",
        "path": "library/glob#glob.iglob"
    },
    {
        "name": "globals()",
        "type": "Built-in Functions",
        "path": "library/functions#globals"
    },
    {
        "name": "grp",
        "type": "Unix",
        "path": "library/grp"
    },
    {
        "name": "grp.getgrall()",
        "type": "Unix",
        "path": "library/grp#grp.getgrall"
    },
    {
        "name": "grp.getgrgid()",
        "type": "Unix",
        "path": "library/grp#grp.getgrgid"
    },
    {
        "name": "grp.getgrnam()",
        "type": "Unix",
        "path": "library/grp#grp.getgrnam"
    },
    {
        "name": "gzip",
        "type": "Data Compression",
        "path": "library/gzip"
    },
    {
        "name": "gzip.compress()",
        "type": "Data Compression",
        "path": "library/gzip#gzip.compress"
    },
    {
        "name": "gzip.decompress()",
        "type": "Data Compression",
        "path": "library/gzip#gzip.decompress"
    },
    {
        "name": "gzip.GzipFile",
        "type": "Data Compression",
        "path": "library/gzip#gzip.GzipFile"
    },
    {
        "name": "gzip.GzipFile.peek()",
        "type": "Data Compression",
        "path": "library/gzip#gzip.GzipFile.peek"
    },
    {
        "name": "gzip.open()",
        "type": "Data Compression",
        "path": "library/gzip#gzip.open"
    },
    {
        "name": "hasattr()",
        "type": "Built-in Functions",
        "path": "library/functions#hasattr"
    },
    {
        "name": "hash()",
        "type": "Built-in Functions",
        "path": "library/functions#hash"
    },
    {
        "name": "hashlib",
        "type": "Cryptography",
        "path": "library/hashlib"
    },
    {
        "name": "hashlib.algorithms_available",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.algorithms_available"
    },
    {
        "name": "hashlib.algorithms_guaranteed",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.algorithms_guaranteed"
    },
    {
        "name": "hashlib.hash.block_size",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.block_size"
    },
    {
        "name": "hashlib.hash.copy()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.copy"
    },
    {
        "name": "hashlib.hash.digest()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.digest"
    },
    {
        "name": "hashlib.hash.digest_size",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.digest_size"
    },
    {
        "name": "hashlib.hash.hexdigest()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.hexdigest"
    },
    {
        "name": "hashlib.hash.name",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.name"
    },
    {
        "name": "hashlib.hash.update()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.hash.update"
    },
    {
        "name": "hashlib.new()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.new"
    },
    {
        "name": "hashlib.pbkdf2_hmac()",
        "type": "Cryptography",
        "path": "library/hashlib#hashlib.pbkdf2_hmac"
    },
    {
        "name": "heapq",
        "type": "Data Types",
        "path": "library/heapq"
    },
    {
        "name": "heapq.heapify()",
        "type": "Data Types",
        "path": "library/heapq#heapq.heapify"
    },
    {
        "name": "heapq.heappop()",
        "type": "Data Types",
        "path": "library/heapq#heapq.heappop"
    },
    {
        "name": "heapq.heappush()",
        "type": "Data Types",
        "path": "library/heapq#heapq.heappush"
    },
    {
        "name": "heapq.heappushpop()",
        "type": "Data Types",
        "path": "library/heapq#heapq.heappushpop"
    },
    {
        "name": "heapq.heapreplace()",
        "type": "Data Types",
        "path": "library/heapq#heapq.heapreplace"
    },
    {
        "name": "heapq.merge()",
        "type": "Data Types",
        "path": "library/heapq#heapq.merge"
    },
    {
        "name": "heapq.nlargest()",
        "type": "Data Types",
        "path": "library/heapq#heapq.nlargest"
    },
    {
        "name": "heapq.nsmallest()",
        "type": "Data Types",
        "path": "library/heapq#heapq.nsmallest"
    },
    {
        "name": "help()",
        "type": "Built-in Functions",
        "path": "library/functions#help"
    },
    {
        "name": "hex()",
        "type": "Built-in Functions",
        "path": "library/functions#hex"
    },
    {
        "name": "hmac",
        "type": "Cryptography",
        "path": "library/hmac"
    },
    {
        "name": "hmac.compare_digest()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.compare_digest"
    },
    {
        "name": "hmac.HMAC.block_size",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.block_size"
    },
    {
        "name": "hmac.HMAC.copy()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.copy"
    },
    {
        "name": "hmac.HMAC.digest()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.digest"
    },
    {
        "name": "hmac.HMAC.digest_size",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.digest_size"
    },
    {
        "name": "hmac.HMAC.hexdigest()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.hexdigest"
    },
    {
        "name": "hmac.HMAC.name",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.name"
    },
    {
        "name": "hmac.HMAC.update()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.HMAC.update"
    },
    {
        "name": "hmac.new()",
        "type": "Cryptography",
        "path": "library/hmac#hmac.new"
    },
    {
        "name": "html",
        "type": "Structured Markup",
        "path": "library/html"
    },
    {
        "name": "html.entities",
        "type": "Structured Markup",
        "path": "library/html.entities"
    },
    {
        "name": "html.entities.codepoint2name",
        "type": "Structured Markup",
        "path": "library/html.entities#html.entities.codepoint2name"
    },
    {
        "name": "html.entities.entitydefs",
        "type": "Structured Markup",
        "path": "library/html.entities#html.entities.entitydefs"
    },
    {
        "name": "html.entities.html5",
        "type": "Structured Markup",
        "path": "library/html.entities#html.entities.html5"
    },
    {
        "name": "html.entities.name2codepoint",
        "type": "Structured Markup",
        "path": "library/html.entities#html.entities.name2codepoint"
    },
    {
        "name": "html.escape()",
        "type": "Structured Markup",
        "path": "library/html#html.escape"
    },
    {
        "name": "html.parser",
        "type": "Structured Markup",
        "path": "library/html.parser"
    },
    {
        "name": "html.parser.HTMLParseError",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParseError"
    },
    {
        "name": "html.parser.HTMLParser",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser"
    },
    {
        "name": "html.parser.HTMLParser.close()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.close"
    },
    {
        "name": "html.parser.HTMLParser.feed()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.feed"
    },
    {
        "name": "html.parser.HTMLParser.getpos()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.getpos"
    },
    {
        "name": "html.parser.HTMLParser.get_starttag_text()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.get_starttag_text"
    },
    {
        "name": "html.parser.HTMLParser.handle_charref()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_charref"
    },
    {
        "name": "html.parser.HTMLParser.handle_comment()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_comment"
    },
    {
        "name": "html.parser.HTMLParser.handle_data()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_data"
    },
    {
        "name": "html.parser.HTMLParser.handle_decl()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_decl"
    },
    {
        "name": "html.parser.HTMLParser.handle_endtag()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_endtag"
    },
    {
        "name": "html.parser.HTMLParser.handle_entityref()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_entityref"
    },
    {
        "name": "html.parser.HTMLParser.handle_pi()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_pi"
    },
    {
        "name": "html.parser.HTMLParser.handle_startendtag()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_startendtag"
    },
    {
        "name": "html.parser.HTMLParser.handle_starttag()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.handle_starttag"
    },
    {
        "name": "html.parser.HTMLParser.reset()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.reset"
    },
    {
        "name": "html.parser.HTMLParser.unknown_decl()",
        "type": "Structured Markup",
        "path": "library/html.parser#html.parser.HTMLParser.unknown_decl"
    },
    {
        "name": "html.unescape()",
        "type": "Structured Markup",
        "path": "library/html#html.unescape"
    },
    {
        "name": "http",
        "type": "Internet",
        "path": "library/http"
    },
    {
        "name": "http.client",
        "type": "Internet",
        "path": "library/http.client"
    },
    {
        "name": "http.client.BadStatusLine",
        "type": "Internet",
        "path": "library/http.client#http.client.BadStatusLine"
    },
    {
        "name": "http.client.CannotSendHeader",
        "type": "Internet",
        "path": "library/http.client#http.client.CannotSendHeader"
    },
    {
        "name": "http.client.CannotSendRequest",
        "type": "Internet",
        "path": "library/http.client#http.client.CannotSendRequest"
    },
    {
        "name": "http.client.HTTPConnection",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection"
    },
    {
        "name": "http.client.HTTPConnection.close()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.close"
    },
    {
        "name": "http.client.HTTPConnection.connect()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.connect"
    },
    {
        "name": "http.client.HTTPConnection.endheaders()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.endheaders"
    },
    {
        "name": "http.client.HTTPConnection.getresponse()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.getresponse"
    },
    {
        "name": "http.client.HTTPConnection.putheader()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.putheader"
    },
    {
        "name": "http.client.HTTPConnection.putrequest()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.putrequest"
    },
    {
        "name": "http.client.HTTPConnection.request()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.request"
    },
    {
        "name": "http.client.HTTPConnection.send()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.send"
    },
    {
        "name": "http.client.HTTPConnection.set_debuglevel()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.set_debuglevel"
    },
    {
        "name": "http.client.HTTPConnection.set_tunnel()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPConnection.set_tunnel"
    },
    {
        "name": "http.client.HTTPException",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPException"
    },
    {
        "name": "http.client.HTTPResponse",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse"
    },
    {
        "name": "http.client.HTTPResponse.closed",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.closed"
    },
    {
        "name": "http.client.HTTPResponse.debuglevel",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.debuglevel"
    },
    {
        "name": "http.client.HTTPResponse.fileno()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.fileno"
    },
    {
        "name": "http.client.HTTPResponse.getheader()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.getheader"
    },
    {
        "name": "http.client.HTTPResponse.getheaders()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.getheaders"
    },
    {
        "name": "http.client.HTTPResponse.msg",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.msg"
    },
    {
        "name": "http.client.HTTPResponse.read()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.read"
    },
    {
        "name": "http.client.HTTPResponse.readinto()",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.readinto"
    },
    {
        "name": "http.client.HTTPResponse.reason",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.reason"
    },
    {
        "name": "http.client.HTTPResponse.status",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.status"
    },
    {
        "name": "http.client.HTTPResponse.version",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPResponse.version"
    },
    {
        "name": "http.client.HTTPSConnection",
        "type": "Internet",
        "path": "library/http.client#http.client.HTTPSConnection"
    },
    {
        "name": "http.client.ImproperConnectionState",
        "type": "Internet",
        "path": "library/http.client#http.client.ImproperConnectionState"
    },
    {
        "name": "http.client.IncompleteRead",
        "type": "Internet",
        "path": "library/http.client#http.client.IncompleteRead"
    },
    {
        "name": "http.client.InvalidURL",
        "type": "Internet",
        "path": "library/http.client#http.client.InvalidURL"
    },
    {
        "name": "http.client.LineTooLong",
        "type": "Internet",
        "path": "library/http.client#http.client.LineTooLong"
    },
    {
        "name": "http.client.NotConnected",
        "type": "Internet",
        "path": "library/http.client#http.client.NotConnected"
    },
    {
        "name": "http.client.ResponseNotReady",
        "type": "Internet",
        "path": "library/http.client#http.client.ResponseNotReady"
    },
    {
        "name": "http.client.responses",
        "type": "Internet",
        "path": "library/http.client#http.client.responses"
    },
    {
        "name": "http.client.UnimplementedFileMode",
        "type": "Internet",
        "path": "library/http.client#http.client.UnimplementedFileMode"
    },
    {
        "name": "http.client.UnknownProtocol",
        "type": "Internet",
        "path": "library/http.client#http.client.UnknownProtocol"
    },
    {
        "name": "http.client.UnknownTransferEncoding",
        "type": "Internet",
        "path": "library/http.client#http.client.UnknownTransferEncoding"
    },
    {
        "name": "http.cookiejar",
        "type": "Internet",
        "path": "library/http.cookiejar"
    },
    {
        "name": "http.cookiejar.Cookie",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie"
    },
    {
        "name": "http.cookiejar.Cookie.comment",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.comment"
    },
    {
        "name": "http.cookiejar.Cookie.comment_url",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.comment_url"
    },
    {
        "name": "http.cookiejar.Cookie.discard",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.discard"
    },
    {
        "name": "http.cookiejar.Cookie.domain_initial_dot",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.domain_initial_dot"
    },
    {
        "name": "http.cookiejar.Cookie.domain_specified",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.domain_specified"
    },
    {
        "name": "http.cookiejar.Cookie.expires",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.expires"
    },
    {
        "name": "http.cookiejar.Cookie.get_nonstandard_attr()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.get_nonstandard_attr"
    },
    {
        "name": "http.cookiejar.Cookie.has_nonstandard_attr()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.has_nonstandard_attr"
    },
    {
        "name": "http.cookiejar.Cookie.is_expired()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.is_expired"
    },
    {
        "name": "http.cookiejar.Cookie.name",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.name"
    },
    {
        "name": "http.cookiejar.Cookie.path",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.path"
    },
    {
        "name": "http.cookiejar.Cookie.port",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.port"
    },
    {
        "name": "http.cookiejar.Cookie.port_specified",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.port_specified"
    },
    {
        "name": "http.cookiejar.Cookie.rfc2109",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.rfc2109"
    },
    {
        "name": "http.cookiejar.Cookie.secure",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.secure"
    },
    {
        "name": "http.cookiejar.Cookie.set_nonstandard_attr()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.set_nonstandard_attr"
    },
    {
        "name": "http.cookiejar.Cookie.value",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.value"
    },
    {
        "name": "http.cookiejar.Cookie.version",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.Cookie.version"
    },
    {
        "name": "http.cookiejar.CookieJar",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar"
    },
    {
        "name": "http.cookiejar.CookieJar.add_cookie_header()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.add_cookie_header"
    },
    {
        "name": "http.cookiejar.CookieJar.clear()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.clear"
    },
    {
        "name": "http.cookiejar.CookieJar.clear_session_cookies()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.clear_session_cookies"
    },
    {
        "name": "http.cookiejar.CookieJar.extract_cookies()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.extract_cookies"
    },
    {
        "name": "http.cookiejar.CookieJar.make_cookies()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.make_cookies"
    },
    {
        "name": "http.cookiejar.CookieJar.set_cookie()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.set_cookie"
    },
    {
        "name": "http.cookiejar.CookieJar.set_cookie_if_ok()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.set_cookie_if_ok"
    },
    {
        "name": "http.cookiejar.CookieJar.set_policy()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookieJar.set_policy"
    },
    {
        "name": "http.cookiejar.CookiePolicy",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy"
    },
    {
        "name": "http.cookiejar.CookiePolicy.domain_return_ok()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.domain_return_ok"
    },
    {
        "name": "http.cookiejar.CookiePolicy.hide_cookie2",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.hide_cookie2"
    },
    {
        "name": "http.cookiejar.CookiePolicy.netscape",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.netscape"
    },
    {
        "name": "http.cookiejar.CookiePolicy.path_return_ok()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.path_return_ok"
    },
    {
        "name": "http.cookiejar.CookiePolicy.return_ok()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.return_ok"
    },
    {
        "name": "http.cookiejar.CookiePolicy.rfc2965",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.rfc2965"
    },
    {
        "name": "http.cookiejar.CookiePolicy.set_ok()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.CookiePolicy.set_ok"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.allowed_domains()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.allowed_domains"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.blocked_domains()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.blocked_domains"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.DomainLiberal",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.DomainLiberal"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.DomainStrict",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.DomainStrict"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.is_blocked()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.is_blocked"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.is_not_allowed()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.is_not_allowed"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.set_allowed_domains()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.set_allowed_domains"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.set_blocked_domains()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.set_blocked_domains"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_domain",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_domain"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_ns_domain",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_ns_domain"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_ns_set_path"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable"
    },
    {
        "name": "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable"
    },
    {
        "name": "http.cookiejar.FileCookieJar",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar"
    },
    {
        "name": "http.cookiejar.FileCookieJar.delayload",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar.delayload"
    },
    {
        "name": "http.cookiejar.FileCookieJar.filename",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar.filename"
    },
    {
        "name": "http.cookiejar.FileCookieJar.load()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar.load"
    },
    {
        "name": "http.cookiejar.FileCookieJar.revert()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar.revert"
    },
    {
        "name": "http.cookiejar.FileCookieJar.save()",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.FileCookieJar.save"
    },
    {
        "name": "http.cookiejar.LoadError",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.LoadError"
    },
    {
        "name": "http.cookiejar.LWPCookieJar",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.LWPCookieJar"
    },
    {
        "name": "http.cookiejar.MozillaCookieJar",
        "type": "Internet",
        "path": "library/http.cookiejar#http.cookiejar.MozillaCookieJar"
    },
    {
        "name": "http.cookies",
        "type": "Internet",
        "path": "library/http.cookies"
    },
    {
        "name": "http.cookies.BaseCookie",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie"
    },
    {
        "name": "http.cookies.BaseCookie.js_output()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie.js_output"
    },
    {
        "name": "http.cookies.BaseCookie.load()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie.load"
    },
    {
        "name": "http.cookies.BaseCookie.output()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie.output"
    },
    {
        "name": "http.cookies.BaseCookie.value_decode()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie.value_decode"
    },
    {
        "name": "http.cookies.BaseCookie.value_encode()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.BaseCookie.value_encode"
    },
    {
        "name": "http.cookies.CookieError",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.CookieError"
    },
    {
        "name": "http.cookies.Morsel",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel"
    },
    {
        "name": "http.cookies.Morsel.coded_value",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.coded_value"
    },
    {
        "name": "http.cookies.Morsel.isReservedKey()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.isReservedKey"
    },
    {
        "name": "http.cookies.Morsel.js_output()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.js_output"
    },
    {
        "name": "http.cookies.Morsel.key",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.key"
    },
    {
        "name": "http.cookies.Morsel.output()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.output"
    },
    {
        "name": "http.cookies.Morsel.OutputString()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.OutputString"
    },
    {
        "name": "http.cookies.Morsel.set()",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.set"
    },
    {
        "name": "http.cookies.Morsel.value",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.Morsel.value"
    },
    {
        "name": "http.cookies.SimpleCookie",
        "type": "Internet",
        "path": "library/http.cookies#http.cookies.SimpleCookie"
    },
    {
        "name": "http.server",
        "type": "Internet",
        "path": "library/http.server"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.address_string()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.address_string"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.client_address",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.client_address"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.close_connection",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.close_connection"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.command",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.command"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.date_time_string()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.date_time_string"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.end_headers()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.end_headers"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.error_content_type",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.error_content_type"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.error_message_format",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.error_message_format"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.flush_headers()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.flush_headers"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.handle()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.handle"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.handle_expect_100()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.handle_expect_100"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.handle_one_request()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.handle_one_request"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.headers",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.headers"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.log_date_time_string()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.log_date_time_string"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.log_error()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.log_error"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.log_message()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.log_message"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.log_request()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.log_request"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.MessageClass",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.MessageClass"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.path",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.path"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.protocol_version",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.protocol_version"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.requestline",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.requestline"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.request_version",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.request_version"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.responses",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.responses"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.rfile",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.rfile"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.send_error()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.send_error"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.send_header()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.send_header"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.send_response()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.send_response"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.send_response_only()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.send_response_only"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.server",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.server"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.server_version",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.server_version"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.sys_version",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.sys_version"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.version_string()",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.version_string"
    },
    {
        "name": "http.server.BaseHTTPRequestHandler.wfile",
        "type": "Internet",
        "path": "library/http.server#http.server.BaseHTTPRequestHandler.wfile"
    },
    {
        "name": "http.server.CGIHTTPRequestHandler",
        "type": "Internet",
        "path": "library/http.server#http.server.CGIHTTPRequestHandler"
    },
    {
        "name": "http.server.CGIHTTPRequestHandler.cgi_directories",
        "type": "Internet",
        "path": "library/http.server#http.server.CGIHTTPRequestHandler.cgi_directories"
    },
    {
        "name": "http.server.CGIHTTPRequestHandler.do_POST()",
        "type": "Internet",
        "path": "library/http.server#http.server.CGIHTTPRequestHandler.do_POST"
    },
    {
        "name": "http.server.HTTPServer",
        "type": "Internet",
        "path": "library/http.server#http.server.HTTPServer"
    },
    {
        "name": "http.server.SimpleHTTPRequestHandler",
        "type": "Internet",
        "path": "library/http.server#http.server.SimpleHTTPRequestHandler"
    },
    {
        "name": "http.server.SimpleHTTPRequestHandler.do_GET()",
        "type": "Internet",
        "path": "library/http.server#http.server.SimpleHTTPRequestHandler.do_GET"
    },
    {
        "name": "http.server.SimpleHTTPRequestHandler.do_HEAD()",
        "type": "Internet",
        "path": "library/http.server#http.server.SimpleHTTPRequestHandler.do_HEAD"
    },
    {
        "name": "http.server.SimpleHTTPRequestHandler.extensions_map",
        "type": "Internet",
        "path": "library/http.server#http.server.SimpleHTTPRequestHandler.extensions_map"
    },
    {
        "name": "http.server.SimpleHTTPRequestHandler.server_version",
        "type": "Internet",
        "path": "library/http.server#http.server.SimpleHTTPRequestHandler.server_version"
    },
    {
        "name": "id()",
        "type": "Built-in Functions",
        "path": "library/functions#id"
    },
    {
        "name": "IDLE",
        "type": "Tk",
        "path": "library/idle"
    },
    {
        "name": "imaplib",
        "type": "Internet",
        "path": "library/imaplib"
    },
    {
        "name": "imaplib.IMAP4",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4"
    },
    {
        "name": "imaplib.IMAP4.abort",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.abort"
    },
    {
        "name": "imaplib.IMAP4.append()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.append"
    },
    {
        "name": "imaplib.IMAP4.authenticate()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.authenticate"
    },
    {
        "name": "imaplib.IMAP4.check()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.check"
    },
    {
        "name": "imaplib.IMAP4.close()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.close"
    },
    {
        "name": "imaplib.IMAP4.copy()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.copy"
    },
    {
        "name": "imaplib.IMAP4.create()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.create"
    },
    {
        "name": "imaplib.IMAP4.debug",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.debug"
    },
    {
        "name": "imaplib.IMAP4.delete()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.delete"
    },
    {
        "name": "imaplib.IMAP4.deleteacl()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.deleteacl"
    },
    {
        "name": "imaplib.IMAP4.error",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.error"
    },
    {
        "name": "imaplib.IMAP4.expunge()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.expunge"
    },
    {
        "name": "imaplib.IMAP4.fetch()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.fetch"
    },
    {
        "name": "imaplib.IMAP4.getacl()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.getacl"
    },
    {
        "name": "imaplib.IMAP4.getannotation()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.getannotation"
    },
    {
        "name": "imaplib.IMAP4.getquota()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.getquota"
    },
    {
        "name": "imaplib.IMAP4.getquotaroot()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.getquotaroot"
    },
    {
        "name": "imaplib.IMAP4.list()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.list"
    },
    {
        "name": "imaplib.IMAP4.login()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.login"
    },
    {
        "name": "imaplib.IMAP4.login_cram_md5()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.login_cram_md5"
    },
    {
        "name": "imaplib.IMAP4.logout()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.logout"
    },
    {
        "name": "imaplib.IMAP4.lsub()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.lsub"
    },
    {
        "name": "imaplib.IMAP4.myrights()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.myrights"
    },
    {
        "name": "imaplib.IMAP4.namespace()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.namespace"
    },
    {
        "name": "imaplib.IMAP4.noop()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.noop"
    },
    {
        "name": "imaplib.IMAP4.open()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.open"
    },
    {
        "name": "imaplib.IMAP4.partial()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.partial"
    },
    {
        "name": "imaplib.IMAP4.PROTOCOL_VERSION",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.PROTOCOL_VERSION"
    },
    {
        "name": "imaplib.IMAP4.proxyauth()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.proxyauth"
    },
    {
        "name": "imaplib.IMAP4.read()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.read"
    },
    {
        "name": "imaplib.IMAP4.readline()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.readline"
    },
    {
        "name": "imaplib.IMAP4.readonly",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.readonly"
    },
    {
        "name": "imaplib.IMAP4.recent()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.recent"
    },
    {
        "name": "imaplib.IMAP4.rename()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.rename"
    },
    {
        "name": "imaplib.IMAP4.response()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.response"
    },
    {
        "name": "imaplib.IMAP4.search()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.search"
    },
    {
        "name": "imaplib.IMAP4.select()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.select"
    },
    {
        "name": "imaplib.IMAP4.send()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.send"
    },
    {
        "name": "imaplib.IMAP4.setacl()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.setacl"
    },
    {
        "name": "imaplib.IMAP4.setannotation()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.setannotation"
    },
    {
        "name": "imaplib.IMAP4.setquota()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.setquota"
    },
    {
        "name": "imaplib.IMAP4.shutdown()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.shutdown"
    },
    {
        "name": "imaplib.IMAP4.socket()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.socket"
    },
    {
        "name": "imaplib.IMAP4.sort()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.sort"
    },
    {
        "name": "imaplib.IMAP4.starttls()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.starttls"
    },
    {
        "name": "imaplib.IMAP4.status()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.status"
    },
    {
        "name": "imaplib.IMAP4.store()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.store"
    },
    {
        "name": "imaplib.IMAP4.subscribe()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.subscribe"
    },
    {
        "name": "imaplib.IMAP4.thread()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.thread"
    },
    {
        "name": "imaplib.IMAP4.uid()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.uid"
    },
    {
        "name": "imaplib.IMAP4.unsubscribe()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.unsubscribe"
    },
    {
        "name": "imaplib.IMAP4.xatom()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4.xatom"
    },
    {
        "name": "imaplib.IMAP4_SSL",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4_SSL"
    },
    {
        "name": "imaplib.IMAP4_stream",
        "type": "Internet",
        "path": "library/imaplib#imaplib.IMAP4_stream"
    },
    {
        "name": "imaplib.Int2AP()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.Int2AP"
    },
    {
        "name": "imaplib.Internaldate2tuple()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.Internaldate2tuple"
    },
    {
        "name": "imaplib.ParseFlags()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.ParseFlags"
    },
    {
        "name": "imaplib.Time2Internaldate()",
        "type": "Internet",
        "path": "library/imaplib#imaplib.Time2Internaldate"
    },
    {
        "name": "imghdr",
        "type": "Multimedia",
        "path": "library/imghdr"
    },
    {
        "name": "imghdr.tests",
        "type": "Multimedia",
        "path": "library/imghdr#imghdr.tests"
    },
    {
        "name": "imghdr.what()",
        "type": "Multimedia",
        "path": "library/imghdr#imghdr.what"
    },
    {
        "name": "ImportError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ImportError"
    },
    {
        "name": "importlib",
        "type": "Importing",
        "path": "library/importlib"
    },
    {
        "name": "importlib.abc.ExecutionLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.ExecutionLoader"
    },
    {
        "name": "importlib.abc.ExecutionLoader.get_filename()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.ExecutionLoader.get_filename"
    },
    {
        "name": "importlib.abc.FileLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader"
    },
    {
        "name": "importlib.abc.FileLoader.get_data()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader.get_data"
    },
    {
        "name": "importlib.abc.FileLoader.get_filename()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader.get_filename"
    },
    {
        "name": "importlib.abc.FileLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader.load_module"
    },
    {
        "name": "importlib.abc.FileLoader.name",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader.name"
    },
    {
        "name": "importlib.abc.FileLoader.path",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.FileLoader.path"
    },
    {
        "name": "importlib.abc.Finder",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Finder"
    },
    {
        "name": "importlib.abc.Finder.find_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Finder.find_module"
    },
    {
        "name": "importlib.abc.InspectLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader"
    },
    {
        "name": "importlib.abc.InspectLoader.exec_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.exec_module"
    },
    {
        "name": "importlib.abc.InspectLoader.get_code()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.get_code"
    },
    {
        "name": "importlib.abc.InspectLoader.get_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.get_source"
    },
    {
        "name": "importlib.abc.InspectLoader.is_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.is_package"
    },
    {
        "name": "importlib.abc.InspectLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.load_module"
    },
    {
        "name": "importlib.abc.InspectLoader.source_to_code()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.InspectLoader.source_to_code"
    },
    {
        "name": "importlib.abc.Loader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Loader"
    },
    {
        "name": "importlib.abc.Loader.create_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Loader.create_module"
    },
    {
        "name": "importlib.abc.Loader.exec_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Loader.exec_module"
    },
    {
        "name": "importlib.abc.Loader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Loader.load_module"
    },
    {
        "name": "importlib.abc.Loader.module_repr()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.Loader.module_repr"
    },
    {
        "name": "importlib.abc.MetaPathFinder",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.MetaPathFinder"
    },
    {
        "name": "importlib.abc.MetaPathFinder.find_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.MetaPathFinder.find_module"
    },
    {
        "name": "importlib.abc.MetaPathFinder.find_spec()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.MetaPathFinder.find_spec"
    },
    {
        "name": "importlib.abc.MetaPathFinder.invalidate_caches()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.MetaPathFinder.invalidate_caches"
    },
    {
        "name": "importlib.abc.PathEntryFinder",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.PathEntryFinder"
    },
    {
        "name": "importlib.abc.PathEntryFinder.find_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.PathEntryFinder.find_loader"
    },
    {
        "name": "importlib.abc.PathEntryFinder.find_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.PathEntryFinder.find_module"
    },
    {
        "name": "importlib.abc.PathEntryFinder.find_spec()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.PathEntryFinder.find_spec"
    },
    {
        "name": "importlib.abc.PathEntryFinder.invalidate_caches()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.PathEntryFinder.invalidate_caches"
    },
    {
        "name": "importlib.abc.ResourceLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.ResourceLoader"
    },
    {
        "name": "importlib.abc.ResourceLoader.get_data()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.ResourceLoader.get_data"
    },
    {
        "name": "importlib.abc.SourceLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader"
    },
    {
        "name": "importlib.abc.SourceLoader.exec_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.exec_module"
    },
    {
        "name": "importlib.abc.SourceLoader.get_code()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.get_code"
    },
    {
        "name": "importlib.abc.SourceLoader.get_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.get_source"
    },
    {
        "name": "importlib.abc.SourceLoader.is_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.is_package"
    },
    {
        "name": "importlib.abc.SourceLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.load_module"
    },
    {
        "name": "importlib.abc.SourceLoader.path_mtime()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.path_mtime"
    },
    {
        "name": "importlib.abc.SourceLoader.path_stats()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.path_stats"
    },
    {
        "name": "importlib.abc.SourceLoader.set_data()",
        "type": "Importing",
        "path": "library/importlib#importlib.abc.SourceLoader.set_data"
    },
    {
        "name": "importlib.find_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.find_loader"
    },
    {
        "name": "importlib.import_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.import_module"
    },
    {
        "name": "importlib.invalidate_caches()",
        "type": "Importing",
        "path": "library/importlib#importlib.invalidate_caches"
    },
    {
        "name": "importlib.machinery.all_suffixes()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.all_suffixes"
    },
    {
        "name": "importlib.machinery.BuiltinImporter",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.BuiltinImporter"
    },
    {
        "name": "importlib.machinery.BYTECODE_SUFFIXES",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.BYTECODE_SUFFIXES"
    },
    {
        "name": "importlib.machinery.DEBUG_BYTECODE_SUFFIXES",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.DEBUG_BYTECODE_SUFFIXES"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.get_code()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.get_code"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.get_filename()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.get_filename"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.get_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.get_source"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.is_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.is_package"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.load_module"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.name",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.name"
    },
    {
        "name": "importlib.machinery.ExtensionFileLoader.path",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ExtensionFileLoader.path"
    },
    {
        "name": "importlib.machinery.EXTENSION_SUFFIXES",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.EXTENSION_SUFFIXES"
    },
    {
        "name": "importlib.machinery.FileFinder",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder"
    },
    {
        "name": "importlib.machinery.FileFinder.find_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder.find_loader"
    },
    {
        "name": "importlib.machinery.FileFinder.find_spec()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder.find_spec"
    },
    {
        "name": "importlib.machinery.FileFinder.invalidate_caches()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder.invalidate_caches"
    },
    {
        "name": "importlib.machinery.FileFinder.path",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder.path"
    },
    {
        "name": "importlib.machinery.FileFinder.path_hook()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FileFinder.path_hook"
    },
    {
        "name": "importlib.machinery.FrozenImporter",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.FrozenImporter"
    },
    {
        "name": "importlib.machinery.ModuleSpec",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec"
    },
    {
        "name": "importlib.machinery.ModuleSpec.cached",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.cached"
    },
    {
        "name": "importlib.machinery.ModuleSpec.has_location",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.has_location"
    },
    {
        "name": "importlib.machinery.ModuleSpec.loader",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.loader"
    },
    {
        "name": "importlib.machinery.ModuleSpec.loader_state",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.loader_state"
    },
    {
        "name": "importlib.machinery.ModuleSpec.name",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.name"
    },
    {
        "name": "importlib.machinery.ModuleSpec.origin",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.origin"
    },
    {
        "name": "importlib.machinery.ModuleSpec.parent",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.parent"
    },
    {
        "name": "importlib.machinery.ModuleSpec.submodule_search_locations",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.ModuleSpec.submodule_search_locations"
    },
    {
        "name": "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES"
    },
    {
        "name": "importlib.machinery.PathFinder",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.PathFinder"
    },
    {
        "name": "importlib.machinery.PathFinder.find_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.PathFinder.find_module"
    },
    {
        "name": "importlib.machinery.PathFinder.find_spec()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.PathFinder.find_spec"
    },
    {
        "name": "importlib.machinery.PathFinder.invalidate_caches()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.PathFinder.invalidate_caches"
    },
    {
        "name": "importlib.machinery.SourceFileLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.is_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.is_package"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.load_module"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.name",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.name"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.path",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.path"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.path_stats()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.path_stats"
    },
    {
        "name": "importlib.machinery.SourceFileLoader.set_data()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourceFileLoader.set_data"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.get_code()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.get_code"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.get_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.get_source"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.is_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.is_package"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.load_module()",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.load_module"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.name",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.name"
    },
    {
        "name": "importlib.machinery.SourcelessFileLoader.path",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SourcelessFileLoader.path"
    },
    {
        "name": "importlib.machinery.SOURCE_SUFFIXES",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.SOURCE_SUFFIXES"
    },
    {
        "name": "importlib.machinery.WindowsRegistryFinder",
        "type": "Importing",
        "path": "library/importlib#importlib.machinery.WindowsRegistryFinder"
    },
    {
        "name": "importlib.reload()",
        "type": "Importing",
        "path": "library/importlib#importlib.reload"
    },
    {
        "name": "importlib.util.cache_from_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.cache_from_source"
    },
    {
        "name": "importlib.util.decode_source()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.decode_source"
    },
    {
        "name": "importlib.util.find_spec()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.find_spec"
    },
    {
        "name": "importlib.util.MAGIC_NUMBER",
        "type": "Importing",
        "path": "library/importlib#importlib.util.MAGIC_NUMBER"
    },
    {
        "name": "importlib.util.module_for_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.module_for_loader"
    },
    {
        "name": "importlib.util.resolve_name()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.resolve_name"
    },
    {
        "name": "importlib.util.set_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.set_loader"
    },
    {
        "name": "importlib.util.set_package()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.set_package"
    },
    {
        "name": "importlib.util.source_from_cache()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.source_from_cache"
    },
    {
        "name": "importlib.util.spec_from_file_location()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.spec_from_file_location"
    },
    {
        "name": "importlib.util.spec_from_loader()",
        "type": "Importing",
        "path": "library/importlib#importlib.util.spec_from_loader"
    },
    {
        "name": "importlib.__import__()",
        "type": "Importing",
        "path": "library/importlib#importlib.__import__"
    },
    {
        "name": "ImportWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ImportWarning"
    },
    {
        "name": "IndentationError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#IndentationError"
    },
    {
        "name": "IndexError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#IndexError"
    },
    {
        "name": "input()",
        "type": "Built-in Functions",
        "path": "library/functions#input"
    },
    {
        "name": "inspect",
        "type": "Runtime",
        "path": "library/inspect"
    },
    {
        "name": "inspect.BoundArguments",
        "type": "Runtime",
        "path": "library/inspect#inspect.BoundArguments"
    },
    {
        "name": "inspect.BoundArguments.args",
        "type": "Runtime",
        "path": "library/inspect#inspect.BoundArguments.args"
    },
    {
        "name": "inspect.BoundArguments.arguments",
        "type": "Runtime",
        "path": "library/inspect#inspect.BoundArguments.arguments"
    },
    {
        "name": "inspect.BoundArguments.kwargs",
        "type": "Runtime",
        "path": "library/inspect#inspect.BoundArguments.kwargs"
    },
    {
        "name": "inspect.cleandoc()",
        "type": "Runtime",
        "path": "library/inspect#inspect.cleandoc"
    },
    {
        "name": "inspect.currentframe()",
        "type": "Runtime",
        "path": "library/inspect#inspect.currentframe"
    },
    {
        "name": "inspect.formatargspec()",
        "type": "Runtime",
        "path": "library/inspect#inspect.formatargspec"
    },
    {
        "name": "inspect.formatargvalues()",
        "type": "Runtime",
        "path": "library/inspect#inspect.formatargvalues"
    },
    {
        "name": "inspect.getargspec()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getargspec"
    },
    {
        "name": "inspect.getargvalues()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getargvalues"
    },
    {
        "name": "inspect.getattr_static()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getattr_static"
    },
    {
        "name": "inspect.getcallargs()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getcallargs"
    },
    {
        "name": "inspect.getclasstree()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getclasstree"
    },
    {
        "name": "inspect.getclosurevars()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getclosurevars"
    },
    {
        "name": "inspect.getcomments()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getcomments"
    },
    {
        "name": "inspect.getdoc()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getdoc"
    },
    {
        "name": "inspect.getfile()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getfile"
    },
    {
        "name": "inspect.getframeinfo()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getframeinfo"
    },
    {
        "name": "inspect.getfullargspec()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getfullargspec"
    },
    {
        "name": "inspect.getgeneratorlocals()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getgeneratorlocals"
    },
    {
        "name": "inspect.getgeneratorstate()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getgeneratorstate"
    },
    {
        "name": "inspect.getinnerframes()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getinnerframes"
    },
    {
        "name": "inspect.getmembers()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getmembers"
    },
    {
        "name": "inspect.getmodule()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getmodule"
    },
    {
        "name": "inspect.getmoduleinfo()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getmoduleinfo"
    },
    {
        "name": "inspect.getmodulename()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getmodulename"
    },
    {
        "name": "inspect.getmro()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getmro"
    },
    {
        "name": "inspect.getouterframes()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getouterframes"
    },
    {
        "name": "inspect.getsource()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getsource"
    },
    {
        "name": "inspect.getsourcefile()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getsourcefile"
    },
    {
        "name": "inspect.getsourcelines()",
        "type": "Runtime",
        "path": "library/inspect#inspect.getsourcelines"
    },
    {
        "name": "inspect.isabstract()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isabstract"
    },
    {
        "name": "inspect.isbuiltin()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isbuiltin"
    },
    {
        "name": "inspect.isclass()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isclass"
    },
    {
        "name": "inspect.iscode()",
        "type": "Runtime",
        "path": "library/inspect#inspect.iscode"
    },
    {
        "name": "inspect.isdatadescriptor()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isdatadescriptor"
    },
    {
        "name": "inspect.isframe()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isframe"
    },
    {
        "name": "inspect.isfunction()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isfunction"
    },
    {
        "name": "inspect.isgenerator()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isgenerator"
    },
    {
        "name": "inspect.isgeneratorfunction()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isgeneratorfunction"
    },
    {
        "name": "inspect.isgetsetdescriptor()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isgetsetdescriptor"
    },
    {
        "name": "inspect.ismemberdescriptor()",
        "type": "Runtime",
        "path": "library/inspect#inspect.ismemberdescriptor"
    },
    {
        "name": "inspect.ismethod()",
        "type": "Runtime",
        "path": "library/inspect#inspect.ismethod"
    },
    {
        "name": "inspect.ismethoddescriptor()",
        "type": "Runtime",
        "path": "library/inspect#inspect.ismethoddescriptor"
    },
    {
        "name": "inspect.ismodule()",
        "type": "Runtime",
        "path": "library/inspect#inspect.ismodule"
    },
    {
        "name": "inspect.isroutine()",
        "type": "Runtime",
        "path": "library/inspect#inspect.isroutine"
    },
    {
        "name": "inspect.istraceback()",
        "type": "Runtime",
        "path": "library/inspect#inspect.istraceback"
    },
    {
        "name": "inspect.Parameter",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter"
    },
    {
        "name": "inspect.Parameter.annotation",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.annotation"
    },
    {
        "name": "inspect.Parameter.default",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.default"
    },
    {
        "name": "inspect.Parameter.empty",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.empty"
    },
    {
        "name": "inspect.Parameter.kind",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.kind"
    },
    {
        "name": "inspect.Parameter.name",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.name"
    },
    {
        "name": "inspect.Parameter.replace()",
        "type": "Runtime",
        "path": "library/inspect#inspect.Parameter.replace"
    },
    {
        "name": "inspect.Signature",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature"
    },
    {
        "name": "inspect.signature()",
        "type": "Runtime",
        "path": "library/inspect#inspect.signature"
    },
    {
        "name": "inspect.Signature.bind()",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.bind"
    },
    {
        "name": "inspect.Signature.bind_partial()",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.bind_partial"
    },
    {
        "name": "inspect.Signature.empty",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.empty"
    },
    {
        "name": "inspect.Signature.parameters",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.parameters"
    },
    {
        "name": "inspect.Signature.replace()",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.replace"
    },
    {
        "name": "inspect.Signature.return_annotation",
        "type": "Runtime",
        "path": "library/inspect#inspect.Signature.return_annotation"
    },
    {
        "name": "inspect.stack()",
        "type": "Runtime",
        "path": "library/inspect#inspect.stack"
    },
    {
        "name": "inspect.trace()",
        "type": "Runtime",
        "path": "library/inspect#inspect.trace"
    },
    {
        "name": "inspect.unwrap()",
        "type": "Runtime",
        "path": "library/inspect#inspect.unwrap"
    },
    {
        "name": "instance.__class__",
        "type": "Built-in Types",
        "path": "library/stdtypes#instance.__class__"
    },
    {
        "name": "int",
        "type": "Built-in Functions",
        "path": "library/functions#int"
    },
    {
        "name": "int.bit_length()",
        "type": "Built-in Types",
        "path": "library/stdtypes#int.bit_length"
    },
    {
        "name": "int.from_bytes()",
        "type": "Built-in Types",
        "path": "library/stdtypes#int.from_bytes"
    },
    {
        "name": "int.to_bytes()",
        "type": "Built-in Types",
        "path": "library/stdtypes#int.to_bytes"
    },
    {
        "name": "InterruptedError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#InterruptedError"
    },
    {
        "name": "io",
        "type": "Operating System",
        "path": "library/io"
    },
    {
        "name": "io.BlockingIOError",
        "type": "Operating System",
        "path": "library/io#io.BlockingIOError"
    },
    {
        "name": "io.BufferedIOBase",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase"
    },
    {
        "name": "io.BufferedIOBase.detach()",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.detach"
    },
    {
        "name": "io.BufferedIOBase.raw",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.raw"
    },
    {
        "name": "io.BufferedIOBase.read()",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.read"
    },
    {
        "name": "io.BufferedIOBase.read1()",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.read1"
    },
    {
        "name": "io.BufferedIOBase.readinto()",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.readinto"
    },
    {
        "name": "io.BufferedIOBase.write()",
        "type": "Operating System",
        "path": "library/io#io.BufferedIOBase.write"
    },
    {
        "name": "io.BufferedRandom",
        "type": "Operating System",
        "path": "library/io#io.BufferedRandom"
    },
    {
        "name": "io.BufferedReader",
        "type": "Operating System",
        "path": "library/io#io.BufferedReader"
    },
    {
        "name": "io.BufferedReader.peek()",
        "type": "Operating System",
        "path": "library/io#io.BufferedReader.peek"
    },
    {
        "name": "io.BufferedReader.read()",
        "type": "Operating System",
        "path": "library/io#io.BufferedReader.read"
    },
    {
        "name": "io.BufferedReader.read1()",
        "type": "Operating System",
        "path": "library/io#io.BufferedReader.read1"
    },
    {
        "name": "io.BufferedRWPair",
        "type": "Operating System",
        "path": "library/io#io.BufferedRWPair"
    },
    {
        "name": "io.BufferedWriter",
        "type": "Operating System",
        "path": "library/io#io.BufferedWriter"
    },
    {
        "name": "io.BufferedWriter.flush()",
        "type": "Operating System",
        "path": "library/io#io.BufferedWriter.flush"
    },
    {
        "name": "io.BufferedWriter.write()",
        "type": "Operating System",
        "path": "library/io#io.BufferedWriter.write"
    },
    {
        "name": "io.BytesIO",
        "type": "Operating System",
        "path": "library/io#io.BytesIO"
    },
    {
        "name": "io.BytesIO.getbuffer()",
        "type": "Operating System",
        "path": "library/io#io.BytesIO.getbuffer"
    },
    {
        "name": "io.BytesIO.getvalue()",
        "type": "Operating System",
        "path": "library/io#io.BytesIO.getvalue"
    },
    {
        "name": "io.BytesIO.read1()",
        "type": "Operating System",
        "path": "library/io#io.BytesIO.read1"
    },
    {
        "name": "io.FileIO",
        "type": "Operating System",
        "path": "library/io#io.FileIO"
    },
    {
        "name": "io.FileIO.mode",
        "type": "Operating System",
        "path": "library/io#io.FileIO.mode"
    },
    {
        "name": "io.FileIO.name",
        "type": "Operating System",
        "path": "library/io#io.FileIO.name"
    },
    {
        "name": "io.IncrementalNewlineDecoder",
        "type": "Operating System",
        "path": "library/io#io.IncrementalNewlineDecoder"
    },
    {
        "name": "io.IOBase",
        "type": "Operating System",
        "path": "library/io#io.IOBase"
    },
    {
        "name": "io.IOBase.close()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.close"
    },
    {
        "name": "io.IOBase.closed",
        "type": "Operating System",
        "path": "library/io#io.IOBase.closed"
    },
    {
        "name": "io.IOBase.fileno()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.fileno"
    },
    {
        "name": "io.IOBase.flush()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.flush"
    },
    {
        "name": "io.IOBase.isatty()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.isatty"
    },
    {
        "name": "io.IOBase.readable()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.readable"
    },
    {
        "name": "io.IOBase.readline()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.readline"
    },
    {
        "name": "io.IOBase.readlines()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.readlines"
    },
    {
        "name": "io.IOBase.seek()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.seek"
    },
    {
        "name": "io.IOBase.seekable()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.seekable"
    },
    {
        "name": "io.IOBase.tell()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.tell"
    },
    {
        "name": "io.IOBase.truncate()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.truncate"
    },
    {
        "name": "io.IOBase.writable()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.writable"
    },
    {
        "name": "io.IOBase.writelines()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.writelines"
    },
    {
        "name": "io.IOBase.__del__()",
        "type": "Operating System",
        "path": "library/io#io.IOBase.__del__"
    },
    {
        "name": "io.open()",
        "type": "Operating System",
        "path": "library/io#io.open"
    },
    {
        "name": "io.RawIOBase",
        "type": "Operating System",
        "path": "library/io#io.RawIOBase"
    },
    {
        "name": "io.RawIOBase.read()",
        "type": "Operating System",
        "path": "library/io#io.RawIOBase.read"
    },
    {
        "name": "io.RawIOBase.readall()",
        "type": "Operating System",
        "path": "library/io#io.RawIOBase.readall"
    },
    {
        "name": "io.RawIOBase.readinto()",
        "type": "Operating System",
        "path": "library/io#io.RawIOBase.readinto"
    },
    {
        "name": "io.RawIOBase.write()",
        "type": "Operating System",
        "path": "library/io#io.RawIOBase.write"
    },
    {
        "name": "io.StringIO",
        "type": "Operating System",
        "path": "library/io#io.StringIO"
    },
    {
        "name": "io.StringIO.getvalue()",
        "type": "Operating System",
        "path": "library/io#io.StringIO.getvalue"
    },
    {
        "name": "io.TextIOBase",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase"
    },
    {
        "name": "io.TextIOBase.buffer",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.buffer"
    },
    {
        "name": "io.TextIOBase.detach()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.detach"
    },
    {
        "name": "io.TextIOBase.encoding",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.encoding"
    },
    {
        "name": "io.TextIOBase.errors",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.errors"
    },
    {
        "name": "io.TextIOBase.newlines",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.newlines"
    },
    {
        "name": "io.TextIOBase.read()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.read"
    },
    {
        "name": "io.TextIOBase.readline()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.readline"
    },
    {
        "name": "io.TextIOBase.seek()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.seek"
    },
    {
        "name": "io.TextIOBase.tell()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.tell"
    },
    {
        "name": "io.TextIOBase.write()",
        "type": "Operating System",
        "path": "library/io#io.TextIOBase.write"
    },
    {
        "name": "io.TextIOWrapper",
        "type": "Operating System",
        "path": "library/io#io.TextIOWrapper"
    },
    {
        "name": "io.TextIOWrapper.line_buffering",
        "type": "Operating System",
        "path": "library/io#io.TextIOWrapper.line_buffering"
    },
    {
        "name": "io.UnsupportedOperation",
        "type": "Operating System",
        "path": "library/io#io.UnsupportedOperation"
    },
    {
        "name": "IOError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#IOError"
    },
    {
        "name": "ipaddress",
        "type": "Internet",
        "path": "library/ipaddress"
    },
    {
        "name": "ipaddress.AddressValueError",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.AddressValueError"
    },
    {
        "name": "ipaddress.collapse_addresses()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.collapse_addresses"
    },
    {
        "name": "ipaddress.get_mixed_type_key()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.get_mixed_type_key"
    },
    {
        "name": "ipaddress.IPv4Address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address"
    },
    {
        "name": "ipaddress.IPv4Address.compressed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.compressed"
    },
    {
        "name": "ipaddress.IPv4Address.exploded",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.exploded"
    },
    {
        "name": "ipaddress.IPv4Address.is_global",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_global"
    },
    {
        "name": "ipaddress.IPv4Address.is_link_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_link_local"
    },
    {
        "name": "ipaddress.IPv4Address.is_loopback",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_loopback"
    },
    {
        "name": "ipaddress.IPv4Address.is_multicast",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_multicast"
    },
    {
        "name": "ipaddress.IPv4Address.is_private",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_private"
    },
    {
        "name": "ipaddress.IPv4Address.is_reserved",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_reserved"
    },
    {
        "name": "ipaddress.IPv4Address.is_unspecified",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.is_unspecified"
    },
    {
        "name": "ipaddress.IPv4Address.max_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.max_prefixlen"
    },
    {
        "name": "ipaddress.IPv4Address.packed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.packed"
    },
    {
        "name": "ipaddress.IPv4Address.version",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Address.version"
    },
    {
        "name": "ipaddress.IPv4Interface",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface"
    },
    {
        "name": "ipaddress.IPv4Interface.ip",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface.ip"
    },
    {
        "name": "ipaddress.IPv4Interface.network",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface.network"
    },
    {
        "name": "ipaddress.IPv4Interface.with_hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface.with_hostmask"
    },
    {
        "name": "ipaddress.IPv4Interface.with_netmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface.with_netmask"
    },
    {
        "name": "ipaddress.IPv4Interface.with_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Interface.with_prefixlen"
    },
    {
        "name": "ipaddress.IPv4Network",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network"
    },
    {
        "name": "ipaddress.IPv4Network.address_exclude()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.address_exclude"
    },
    {
        "name": "ipaddress.IPv4Network.broadcast_address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.broadcast_address"
    },
    {
        "name": "ipaddress.IPv4Network.compare_networks()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.compare_networks"
    },
    {
        "name": "ipaddress.IPv4Network.compressed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.compressed"
    },
    {
        "name": "ipaddress.IPv4Network.exploded",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.exploded"
    },
    {
        "name": "ipaddress.IPv4Network.hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.hostmask"
    },
    {
        "name": "ipaddress.IPv4Network.hosts()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.hosts"
    },
    {
        "name": "ipaddress.IPv4Network.is_link_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_link_local"
    },
    {
        "name": "ipaddress.IPv4Network.is_loopback",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_loopback"
    },
    {
        "name": "ipaddress.IPv4Network.is_multicast",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_multicast"
    },
    {
        "name": "ipaddress.IPv4Network.is_private",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_private"
    },
    {
        "name": "ipaddress.IPv4Network.is_reserved",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_reserved"
    },
    {
        "name": "ipaddress.IPv4Network.is_unspecified",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.is_unspecified"
    },
    {
        "name": "ipaddress.IPv4Network.max_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.max_prefixlen"
    },
    {
        "name": "ipaddress.IPv4Network.network_address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.network_address"
    },
    {
        "name": "ipaddress.IPv4Network.num_addresses",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.num_addresses"
    },
    {
        "name": "ipaddress.IPv4Network.overlaps()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.overlaps"
    },
    {
        "name": "ipaddress.IPv4Network.prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.prefixlen"
    },
    {
        "name": "ipaddress.IPv4Network.subnets()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.subnets"
    },
    {
        "name": "ipaddress.IPv4Network.supernet()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.supernet"
    },
    {
        "name": "ipaddress.IPv4Network.version",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.version"
    },
    {
        "name": "ipaddress.IPv4Network.with_hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.with_hostmask"
    },
    {
        "name": "ipaddress.IPv4Network.with_netmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.with_netmask"
    },
    {
        "name": "ipaddress.IPv4Network.with_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv4Network.with_prefixlen"
    },
    {
        "name": "ipaddress.IPv6Address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address"
    },
    {
        "name": "ipaddress.IPv6Address.compressed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.compressed"
    },
    {
        "name": "ipaddress.IPv6Address.exploded",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.exploded"
    },
    {
        "name": "ipaddress.IPv6Address.ipv4_mapped",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.ipv4_mapped"
    },
    {
        "name": "ipaddress.IPv6Address.is_global",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_global"
    },
    {
        "name": "ipaddress.IPv6Address.is_link_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_link_local"
    },
    {
        "name": "ipaddress.IPv6Address.is_loopback",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_loopback"
    },
    {
        "name": "ipaddress.IPv6Address.is_multicast",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_multicast"
    },
    {
        "name": "ipaddress.IPv6Address.is_private",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_private"
    },
    {
        "name": "ipaddress.IPv6Address.is_reserved",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_reserved"
    },
    {
        "name": "ipaddress.IPv6Address.is_site_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_site_local"
    },
    {
        "name": "ipaddress.IPv6Address.is_unspecified",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.is_unspecified"
    },
    {
        "name": "ipaddress.IPv6Address.max_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.max_prefixlen"
    },
    {
        "name": "ipaddress.IPv6Address.packed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.packed"
    },
    {
        "name": "ipaddress.IPv6Address.sixtofour",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.sixtofour"
    },
    {
        "name": "ipaddress.IPv6Address.teredo",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.teredo"
    },
    {
        "name": "ipaddress.IPv6Address.version",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Address.version"
    },
    {
        "name": "ipaddress.IPv6Interface",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface"
    },
    {
        "name": "ipaddress.IPv6Interface.ip",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface.ip"
    },
    {
        "name": "ipaddress.IPv6Interface.network",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface.network"
    },
    {
        "name": "ipaddress.IPv6Interface.with_hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface.with_hostmask"
    },
    {
        "name": "ipaddress.IPv6Interface.with_netmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface.with_netmask"
    },
    {
        "name": "ipaddress.IPv6Interface.with_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Interface.with_prefixlen"
    },
    {
        "name": "ipaddress.IPv6Network",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network"
    },
    {
        "name": "ipaddress.IPv6Network.address_exclude()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.address_exclude"
    },
    {
        "name": "ipaddress.IPv6Network.broadcast_address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.broadcast_address"
    },
    {
        "name": "ipaddress.IPv6Network.compare_networks()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.compare_networks"
    },
    {
        "name": "ipaddress.IPv6Network.compressed",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.compressed"
    },
    {
        "name": "ipaddress.IPv6Network.exploded",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.exploded"
    },
    {
        "name": "ipaddress.IPv6Network.hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.hostmask"
    },
    {
        "name": "ipaddress.IPv6Network.hosts()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.hosts"
    },
    {
        "name": "ipaddress.IPv6Network.is_link_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_link_local"
    },
    {
        "name": "ipaddress.IPv6Network.is_loopback",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_loopback"
    },
    {
        "name": "ipaddress.IPv6Network.is_multicast",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_multicast"
    },
    {
        "name": "ipaddress.IPv6Network.is_private",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_private"
    },
    {
        "name": "ipaddress.IPv6Network.is_reserved",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_reserved"
    },
    {
        "name": "ipaddress.IPv6Network.is_site_local",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_site_local"
    },
    {
        "name": "ipaddress.IPv6Network.is_unspecified",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.is_unspecified"
    },
    {
        "name": "ipaddress.IPv6Network.max_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.max_prefixlen"
    },
    {
        "name": "ipaddress.IPv6Network.network_address",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.network_address"
    },
    {
        "name": "ipaddress.IPv6Network.num_addresses",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.num_addresses"
    },
    {
        "name": "ipaddress.IPv6Network.overlaps()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.overlaps"
    },
    {
        "name": "ipaddress.IPv6Network.prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.prefixlen"
    },
    {
        "name": "ipaddress.IPv6Network.subnets()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.subnets"
    },
    {
        "name": "ipaddress.IPv6Network.supernet()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.supernet"
    },
    {
        "name": "ipaddress.IPv6Network.version",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.version"
    },
    {
        "name": "ipaddress.IPv6Network.with_hostmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.with_hostmask"
    },
    {
        "name": "ipaddress.IPv6Network.with_netmask",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.with_netmask"
    },
    {
        "name": "ipaddress.IPv6Network.with_prefixlen",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.IPv6Network.with_prefixlen"
    },
    {
        "name": "ipaddress.ip_address()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.ip_address"
    },
    {
        "name": "ipaddress.ip_interface()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.ip_interface"
    },
    {
        "name": "ipaddress.ip_network()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.ip_network"
    },
    {
        "name": "ipaddress.NetmaskValueError",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.NetmaskValueError"
    },
    {
        "name": "ipaddress.summarize_address_range()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.summarize_address_range"
    },
    {
        "name": "ipaddress.v4_int_to_packed()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.v4_int_to_packed"
    },
    {
        "name": "ipaddress.v6_int_to_packed()",
        "type": "Internet",
        "path": "library/ipaddress#ipaddress.v6_int_to_packed"
    },
    {
        "name": "IsADirectoryError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#IsADirectoryError"
    },
    {
        "name": "isinstance()",
        "type": "Built-in Functions",
        "path": "library/functions#isinstance"
    },
    {
        "name": "issubclass()",
        "type": "Built-in Functions",
        "path": "library/functions#issubclass"
    },
    {
        "name": "iter()",
        "type": "Built-in Functions",
        "path": "library/functions#iter"
    },
    {
        "name": "iterator.__iter__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#iterator.__iter__"
    },
    {
        "name": "iterator.__next__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#iterator.__next__"
    },
    {
        "name": "itertools",
        "type": "Functional Programming",
        "path": "library/itertools"
    },
    {
        "name": "itertools.accumulate()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.accumulate"
    },
    {
        "name": "itertools.chain()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.chain"
    },
    {
        "name": "itertools.chain.from_iterable()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.chain.from_iterable"
    },
    {
        "name": "itertools.combinations()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.combinations"
    },
    {
        "name": "itertools.combinations_with_replacement()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.combinations_with_replacement"
    },
    {
        "name": "itertools.compress()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.compress"
    },
    {
        "name": "itertools.count()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.count"
    },
    {
        "name": "itertools.cycle()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.cycle"
    },
    {
        "name": "itertools.dropwhile()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.dropwhile"
    },
    {
        "name": "itertools.filterfalse()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.filterfalse"
    },
    {
        "name": "itertools.groupby()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.groupby"
    },
    {
        "name": "itertools.islice()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.islice"
    },
    {
        "name": "itertools.permutations()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.permutations"
    },
    {
        "name": "itertools.product()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.product"
    },
    {
        "name": "itertools.repeat()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.repeat"
    },
    {
        "name": "itertools.starmap()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.starmap"
    },
    {
        "name": "itertools.takewhile()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.takewhile"
    },
    {
        "name": "itertools.tee()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.tee"
    },
    {
        "name": "itertools.zip_longest()",
        "type": "Functional Programming",
        "path": "library/itertools#itertools.zip_longest"
    },
    {
        "name": "json",
        "type": "Internet Data",
        "path": "library/json"
    },
    {
        "name": "json.dump()",
        "type": "Internet Data",
        "path": "library/json#json.dump"
    },
    {
        "name": "json.dumps()",
        "type": "Internet Data",
        "path": "library/json#json.dumps"
    },
    {
        "name": "json.JSONDecoder",
        "type": "Internet Data",
        "path": "library/json#json.JSONDecoder"
    },
    {
        "name": "json.JSONDecoder.decode()",
        "type": "Internet Data",
        "path": "library/json#json.JSONDecoder.decode"
    },
    {
        "name": "json.JSONDecoder.raw_decode()",
        "type": "Internet Data",
        "path": "library/json#json.JSONDecoder.raw_decode"
    },
    {
        "name": "json.JSONEncoder",
        "type": "Internet Data",
        "path": "library/json#json.JSONEncoder"
    },
    {
        "name": "json.JSONEncoder.default()",
        "type": "Internet Data",
        "path": "library/json#json.JSONEncoder.default"
    },
    {
        "name": "json.JSONEncoder.encode()",
        "type": "Internet Data",
        "path": "library/json#json.JSONEncoder.encode"
    },
    {
        "name": "json.JSONEncoder.iterencode()",
        "type": "Internet Data",
        "path": "library/json#json.JSONEncoder.iterencode"
    },
    {
        "name": "json.load()",
        "type": "Internet Data",
        "path": "library/json#json.load"
    },
    {
        "name": "json.loads()",
        "type": "Internet Data",
        "path": "library/json#json.loads"
    },
    {
        "name": "KeyboardInterrupt",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#KeyboardInterrupt"
    },
    {
        "name": "KeyError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#KeyError"
    },
    {
        "name": "len()",
        "type": "Built-in Functions",
        "path": "library/functions#len"
    },
    {
        "name": "license",
        "type": "Built-in Constants",
        "path": "library/constants#license"
    },
    {
        "name": "linecache",
        "type": "File & Directory Access",
        "path": "library/linecache"
    },
    {
        "name": "linecache.checkcache()",
        "type": "File & Directory Access",
        "path": "library/linecache#linecache.checkcache"
    },
    {
        "name": "linecache.clearcache()",
        "type": "File & Directory Access",
        "path": "library/linecache#linecache.clearcache"
    },
    {
        "name": "linecache.getline()",
        "type": "File & Directory Access",
        "path": "library/linecache#linecache.getline"
    },
    {
        "name": "list",
        "type": "Built-in Functions",
        "path": "library/functions#list"
    },
    {
        "name": "list",
        "type": "Built-in Types",
        "path": "library/stdtypes#list"
    },
    {
        "name": "list.sort()",
        "type": "Built-in Types",
        "path": "library/stdtypes#list.sort"
    },
    {
        "name": "locale",
        "type": "Internationalization",
        "path": "library/locale"
    },
    {
        "name": "locale.atof()",
        "type": "Internationalization",
        "path": "library/locale#locale.atof"
    },
    {
        "name": "locale.atoi()",
        "type": "Internationalization",
        "path": "library/locale#locale.atoi"
    },
    {
        "name": "locale.currency()",
        "type": "Internationalization",
        "path": "library/locale#locale.currency"
    },
    {
        "name": "locale.Error",
        "type": "Internationalization",
        "path": "library/locale#locale.Error"
    },
    {
        "name": "locale.format()",
        "type": "Internationalization",
        "path": "library/locale#locale.format"
    },
    {
        "name": "locale.format_string()",
        "type": "Internationalization",
        "path": "library/locale#locale.format_string"
    },
    {
        "name": "locale.getdefaultlocale()",
        "type": "Internationalization",
        "path": "library/locale#locale.getdefaultlocale"
    },
    {
        "name": "locale.getlocale()",
        "type": "Internationalization",
        "path": "library/locale#locale.getlocale"
    },
    {
        "name": "locale.getpreferredencoding()",
        "type": "Internationalization",
        "path": "library/locale#locale.getpreferredencoding"
    },
    {
        "name": "locale.localeconv()",
        "type": "Internationalization",
        "path": "library/locale#locale.localeconv"
    },
    {
        "name": "locale.nl_langinfo()",
        "type": "Internationalization",
        "path": "library/locale#locale.nl_langinfo"
    },
    {
        "name": "locale.normalize()",
        "type": "Internationalization",
        "path": "library/locale#locale.normalize"
    },
    {
        "name": "locale.resetlocale()",
        "type": "Internationalization",
        "path": "library/locale#locale.resetlocale"
    },
    {
        "name": "locale.setlocale()",
        "type": "Internationalization",
        "path": "library/locale#locale.setlocale"
    },
    {
        "name": "locale.str()",
        "type": "Internationalization",
        "path": "library/locale#locale.str"
    },
    {
        "name": "locale.strcoll()",
        "type": "Internationalization",
        "path": "library/locale#locale.strcoll"
    },
    {
        "name": "locale.strxfrm()",
        "type": "Internationalization",
        "path": "library/locale#locale.strxfrm"
    },
    {
        "name": "locals()",
        "type": "Built-in Functions",
        "path": "library/functions#locals"
    },
    {
        "name": "logging",
        "type": "Logging",
        "path": "library/logging"
    },
    {
        "name": "logging.addLevelName()",
        "type": "Logging",
        "path": "library/logging#logging.addLevelName"
    },
    {
        "name": "logging.basicConfig()",
        "type": "Logging",
        "path": "library/logging#logging.basicConfig"
    },
    {
        "name": "logging.captureWarnings()",
        "type": "Logging",
        "path": "library/logging#logging.captureWarnings"
    },
    {
        "name": "logging.config",
        "type": "Logging",
        "path": "library/logging.config"
    },
    {
        "name": "logging.config.dictConfig()",
        "type": "Logging",
        "path": "library/logging.config#logging.config.dictConfig"
    },
    {
        "name": "logging.config.fileConfig()",
        "type": "Logging",
        "path": "library/logging.config#logging.config.fileConfig"
    },
    {
        "name": "logging.config.listen()",
        "type": "Logging",
        "path": "library/logging.config#logging.config.listen"
    },
    {
        "name": "logging.config.stopListening()",
        "type": "Logging",
        "path": "library/logging.config#logging.config.stopListening"
    },
    {
        "name": "logging.critical()",
        "type": "Logging",
        "path": "library/logging#logging.critical"
    },
    {
        "name": "logging.debug()",
        "type": "Logging",
        "path": "library/logging#logging.debug"
    },
    {
        "name": "logging.disable()",
        "type": "Logging",
        "path": "library/logging#logging.disable"
    },
    {
        "name": "logging.error()",
        "type": "Logging",
        "path": "library/logging#logging.error"
    },
    {
        "name": "logging.exception()",
        "type": "Logging",
        "path": "library/logging#logging.exception"
    },
    {
        "name": "logging.FileHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.FileHandler"
    },
    {
        "name": "logging.FileHandler.close()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.FileHandler.close"
    },
    {
        "name": "logging.FileHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.FileHandler.emit"
    },
    {
        "name": "logging.Filter",
        "type": "Logging",
        "path": "library/logging#logging.Filter"
    },
    {
        "name": "logging.Filter.filter()",
        "type": "Logging",
        "path": "library/logging#logging.Filter.filter"
    },
    {
        "name": "logging.Formatter",
        "type": "Logging",
        "path": "library/logging#logging.Formatter"
    },
    {
        "name": "logging.Formatter.format()",
        "type": "Logging",
        "path": "library/logging#logging.Formatter.format"
    },
    {
        "name": "logging.Formatter.formatException()",
        "type": "Logging",
        "path": "library/logging#logging.Formatter.formatException"
    },
    {
        "name": "logging.Formatter.formatStack()",
        "type": "Logging",
        "path": "library/logging#logging.Formatter.formatStack"
    },
    {
        "name": "logging.Formatter.formatTime()",
        "type": "Logging",
        "path": "library/logging#logging.Formatter.formatTime"
    },
    {
        "name": "logging.getLevelName()",
        "type": "Logging",
        "path": "library/logging#logging.getLevelName"
    },
    {
        "name": "logging.getLogger()",
        "type": "Logging",
        "path": "library/logging#logging.getLogger"
    },
    {
        "name": "logging.getLoggerClass()",
        "type": "Logging",
        "path": "library/logging#logging.getLoggerClass"
    },
    {
        "name": "logging.getLogRecordFactory()",
        "type": "Logging",
        "path": "library/logging#logging.getLogRecordFactory"
    },
    {
        "name": "logging.Handler.acquire()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.acquire"
    },
    {
        "name": "logging.Handler.addFilter()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.addFilter"
    },
    {
        "name": "logging.Handler.close()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.close"
    },
    {
        "name": "logging.Handler.createLock()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.createLock"
    },
    {
        "name": "logging.Handler.emit()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.emit"
    },
    {
        "name": "logging.Handler.filter()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.filter"
    },
    {
        "name": "logging.Handler.flush()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.flush"
    },
    {
        "name": "logging.Handler.format()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.format"
    },
    {
        "name": "logging.Handler.handle()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.handle"
    },
    {
        "name": "logging.Handler.handleError()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.handleError"
    },
    {
        "name": "logging.Handler.release()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.release"
    },
    {
        "name": "logging.Handler.removeFilter()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.removeFilter"
    },
    {
        "name": "logging.Handler.setFormatter()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.setFormatter"
    },
    {
        "name": "logging.Handler.setLevel()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.setLevel"
    },
    {
        "name": "logging.Handler.__init__()",
        "type": "Logging",
        "path": "library/logging#logging.Handler.__init__"
    },
    {
        "name": "logging.handlers",
        "type": "Logging",
        "path": "library/logging.handlers"
    },
    {
        "name": "logging.handlers.BaseRotatingHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BaseRotatingHandler"
    },
    {
        "name": "logging.handlers.BaseRotatingHandler.namer",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BaseRotatingHandler.namer"
    },
    {
        "name": "logging.handlers.BaseRotatingHandler.rotate()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BaseRotatingHandler.rotate"
    },
    {
        "name": "logging.handlers.BaseRotatingHandler.rotation_filename()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BaseRotatingHandler.rotation_filename"
    },
    {
        "name": "logging.handlers.BaseRotatingHandler.rotator",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BaseRotatingHandler.rotator"
    },
    {
        "name": "logging.handlers.BufferingHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BufferingHandler"
    },
    {
        "name": "logging.handlers.BufferingHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BufferingHandler.emit"
    },
    {
        "name": "logging.handlers.BufferingHandler.flush()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BufferingHandler.flush"
    },
    {
        "name": "logging.handlers.BufferingHandler.shouldFlush()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.BufferingHandler.shouldFlush"
    },
    {
        "name": "logging.handlers.DatagramHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.DatagramHandler"
    },
    {
        "name": "logging.handlers.DatagramHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.DatagramHandler.emit"
    },
    {
        "name": "logging.handlers.DatagramHandler.makeSocket()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.DatagramHandler.makeSocket"
    },
    {
        "name": "logging.handlers.DatagramHandler.send()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.DatagramHandler.send"
    },
    {
        "name": "logging.handlers.HTTPHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.HTTPHandler"
    },
    {
        "name": "logging.handlers.HTTPHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.HTTPHandler.emit"
    },
    {
        "name": "logging.handlers.HTTPHandler.mapLogRecord()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.HTTPHandler.mapLogRecord"
    },
    {
        "name": "logging.handlers.MemoryHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.MemoryHandler"
    },
    {
        "name": "logging.handlers.MemoryHandler.close()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.MemoryHandler.close"
    },
    {
        "name": "logging.handlers.MemoryHandler.flush()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.MemoryHandler.flush"
    },
    {
        "name": "logging.handlers.MemoryHandler.setTarget()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.MemoryHandler.setTarget"
    },
    {
        "name": "logging.handlers.MemoryHandler.shouldFlush()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.MemoryHandler.shouldFlush"
    },
    {
        "name": "logging.handlers.NTEventLogHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler"
    },
    {
        "name": "logging.handlers.NTEventLogHandler.close()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler.close"
    },
    {
        "name": "logging.handlers.NTEventLogHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler.emit"
    },
    {
        "name": "logging.handlers.NTEventLogHandler.getEventCategory()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler.getEventCategory"
    },
    {
        "name": "logging.handlers.NTEventLogHandler.getEventType()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler.getEventType"
    },
    {
        "name": "logging.handlers.NTEventLogHandler.getMessageID()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.NTEventLogHandler.getMessageID"
    },
    {
        "name": "logging.handlers.QueueHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueHandler"
    },
    {
        "name": "logging.handlers.QueueHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueHandler.emit"
    },
    {
        "name": "logging.handlers.QueueHandler.enqueue()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueHandler.enqueue"
    },
    {
        "name": "logging.handlers.QueueHandler.prepare()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueHandler.prepare"
    },
    {
        "name": "logging.handlers.QueueListener",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener"
    },
    {
        "name": "logging.handlers.QueueListener.dequeue()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.dequeue"
    },
    {
        "name": "logging.handlers.QueueListener.enqueue_sentinel()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.enqueue_sentinel"
    },
    {
        "name": "logging.handlers.QueueListener.handle()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.handle"
    },
    {
        "name": "logging.handlers.QueueListener.prepare()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.prepare"
    },
    {
        "name": "logging.handlers.QueueListener.start()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.start"
    },
    {
        "name": "logging.handlers.QueueListener.stop()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.QueueListener.stop"
    },
    {
        "name": "logging.handlers.RotatingFileHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.RotatingFileHandler"
    },
    {
        "name": "logging.handlers.RotatingFileHandler.doRollover()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.RotatingFileHandler.doRollover"
    },
    {
        "name": "logging.handlers.RotatingFileHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.RotatingFileHandler.emit"
    },
    {
        "name": "logging.handlers.SMTPHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SMTPHandler"
    },
    {
        "name": "logging.handlers.SMTPHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SMTPHandler.emit"
    },
    {
        "name": "logging.handlers.SMTPHandler.getSubject()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SMTPHandler.getSubject"
    },
    {
        "name": "logging.handlers.SocketHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler"
    },
    {
        "name": "logging.handlers.SocketHandler.close()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.close"
    },
    {
        "name": "logging.handlers.SocketHandler.createSocket()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.createSocket"
    },
    {
        "name": "logging.handlers.SocketHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.emit"
    },
    {
        "name": "logging.handlers.SocketHandler.handleError()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.handleError"
    },
    {
        "name": "logging.handlers.SocketHandler.makePickle()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.makePickle"
    },
    {
        "name": "logging.handlers.SocketHandler.makeSocket()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.makeSocket"
    },
    {
        "name": "logging.handlers.SocketHandler.send()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SocketHandler.send"
    },
    {
        "name": "logging.handlers.SysLogHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SysLogHandler"
    },
    {
        "name": "logging.handlers.SysLogHandler.close()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SysLogHandler.close"
    },
    {
        "name": "logging.handlers.SysLogHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SysLogHandler.emit"
    },
    {
        "name": "logging.handlers.SysLogHandler.encodePriority()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SysLogHandler.encodePriority"
    },
    {
        "name": "logging.handlers.SysLogHandler.mapPriority()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.SysLogHandler.mapPriority"
    },
    {
        "name": "logging.handlers.TimedRotatingFileHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.TimedRotatingFileHandler"
    },
    {
        "name": "logging.handlers.TimedRotatingFileHandler.doRollover()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.TimedRotatingFileHandler.doRollover"
    },
    {
        "name": "logging.handlers.TimedRotatingFileHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.TimedRotatingFileHandler.emit"
    },
    {
        "name": "logging.handlers.WatchedFileHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.WatchedFileHandler"
    },
    {
        "name": "logging.handlers.WatchedFileHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.handlers.WatchedFileHandler.emit"
    },
    {
        "name": "logging.info()",
        "type": "Logging",
        "path": "library/logging#logging.info"
    },
    {
        "name": "logging.lastResort",
        "type": "Logging",
        "path": "library/logging#logging.lastResort"
    },
    {
        "name": "logging.log()",
        "type": "Logging",
        "path": "library/logging#logging.log"
    },
    {
        "name": "logging.Logger",
        "type": "Logging",
        "path": "library/logging#logging.Logger"
    },
    {
        "name": "logging.Logger.addFilter()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.addFilter"
    },
    {
        "name": "logging.Logger.addHandler()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.addHandler"
    },
    {
        "name": "logging.Logger.critical()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.critical"
    },
    {
        "name": "logging.Logger.debug()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.debug"
    },
    {
        "name": "logging.Logger.error()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.error"
    },
    {
        "name": "logging.Logger.exception()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.exception"
    },
    {
        "name": "logging.Logger.filter()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.filter"
    },
    {
        "name": "logging.Logger.findCaller()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.findCaller"
    },
    {
        "name": "logging.Logger.getChild()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.getChild"
    },
    {
        "name": "logging.Logger.getEffectiveLevel()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.getEffectiveLevel"
    },
    {
        "name": "logging.Logger.handle()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.handle"
    },
    {
        "name": "logging.Logger.hasHandlers()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.hasHandlers"
    },
    {
        "name": "logging.Logger.info()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.info"
    },
    {
        "name": "logging.Logger.isEnabledFor()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.isEnabledFor"
    },
    {
        "name": "logging.Logger.log()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.log"
    },
    {
        "name": "logging.Logger.makeRecord()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.makeRecord"
    },
    {
        "name": "logging.Logger.propagate",
        "type": "Logging",
        "path": "library/logging#logging.Logger.propagate"
    },
    {
        "name": "logging.Logger.removeFilter()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.removeFilter"
    },
    {
        "name": "logging.Logger.removeHandler()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.removeHandler"
    },
    {
        "name": "logging.Logger.setLevel()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.setLevel"
    },
    {
        "name": "logging.Logger.warning()",
        "type": "Logging",
        "path": "library/logging#logging.Logger.warning"
    },
    {
        "name": "logging.LoggerAdapter",
        "type": "Logging",
        "path": "library/logging#logging.LoggerAdapter"
    },
    {
        "name": "logging.LoggerAdapter.process()",
        "type": "Logging",
        "path": "library/logging#logging.LoggerAdapter.process"
    },
    {
        "name": "logging.LogRecord",
        "type": "Logging",
        "path": "library/logging#logging.LogRecord"
    },
    {
        "name": "logging.LogRecord.getMessage()",
        "type": "Logging",
        "path": "library/logging#logging.LogRecord.getMessage"
    },
    {
        "name": "logging.makeLogRecord()",
        "type": "Logging",
        "path": "library/logging#logging.makeLogRecord"
    },
    {
        "name": "logging.NullHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.NullHandler"
    },
    {
        "name": "logging.NullHandler.createLock()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.NullHandler.createLock"
    },
    {
        "name": "logging.NullHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.NullHandler.emit"
    },
    {
        "name": "logging.NullHandler.handle()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.NullHandler.handle"
    },
    {
        "name": "logging.setLoggerClass()",
        "type": "Logging",
        "path": "library/logging#logging.setLoggerClass"
    },
    {
        "name": "logging.setLogRecordFactory()",
        "type": "Logging",
        "path": "library/logging#logging.setLogRecordFactory"
    },
    {
        "name": "logging.shutdown()",
        "type": "Logging",
        "path": "library/logging#logging.shutdown"
    },
    {
        "name": "logging.StreamHandler",
        "type": "Logging",
        "path": "library/logging.handlers#logging.StreamHandler"
    },
    {
        "name": "logging.StreamHandler.emit()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.StreamHandler.emit"
    },
    {
        "name": "logging.StreamHandler.flush()",
        "type": "Logging",
        "path": "library/logging.handlers#logging.StreamHandler.flush"
    },
    {
        "name": "logging.warning()",
        "type": "Logging",
        "path": "library/logging#logging.warning"
    },
    {
        "name": "LookupError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#LookupError"
    },
    {
        "name": "lzma",
        "type": "Data Compression",
        "path": "library/lzma"
    },
    {
        "name": "lzma.compress()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.compress"
    },
    {
        "name": "lzma.decompress()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.decompress"
    },
    {
        "name": "lzma.is_check_supported()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.is_check_supported"
    },
    {
        "name": "lzma.LZMACompressor",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMACompressor"
    },
    {
        "name": "lzma.LZMACompressor.compress()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMACompressor.compress"
    },
    {
        "name": "lzma.LZMACompressor.flush()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMACompressor.flush"
    },
    {
        "name": "lzma.LZMADecompressor",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMADecompressor"
    },
    {
        "name": "lzma.LZMADecompressor.check",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMADecompressor.check"
    },
    {
        "name": "lzma.LZMADecompressor.decompress()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMADecompressor.decompress"
    },
    {
        "name": "lzma.LZMADecompressor.eof",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMADecompressor.eof"
    },
    {
        "name": "lzma.LZMADecompressor.unused_data",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMADecompressor.unused_data"
    },
    {
        "name": "lzma.LZMAError",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMAError"
    },
    {
        "name": "lzma.LZMAFile",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMAFile"
    },
    {
        "name": "lzma.LZMAFile.peek()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.LZMAFile.peek"
    },
    {
        "name": "lzma.open()",
        "type": "Data Compression",
        "path": "library/lzma#lzma.open"
    },
    {
        "name": "macpath",
        "type": "File & Directory Access",
        "path": "library/macpath"
    },
    {
        "name": "mailbox",
        "type": "Internet Data",
        "path": "library/mailbox"
    },
    {
        "name": "mailbox.Babyl",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Babyl"
    },
    {
        "name": "mailbox.Babyl.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Babyl.get_file"
    },
    {
        "name": "mailbox.Babyl.get_labels()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Babyl.get_labels"
    },
    {
        "name": "mailbox.Babyl.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Babyl.lock"
    },
    {
        "name": "mailbox.Babyl.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Babyl.unlock"
    },
    {
        "name": "mailbox.BabylMessage",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage"
    },
    {
        "name": "mailbox.BabylMessage.add_label()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.add_label"
    },
    {
        "name": "mailbox.BabylMessage.get_labels()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.get_labels"
    },
    {
        "name": "mailbox.BabylMessage.get_visible()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.get_visible"
    },
    {
        "name": "mailbox.BabylMessage.remove_label()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.remove_label"
    },
    {
        "name": "mailbox.BabylMessage.set_labels()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.set_labels"
    },
    {
        "name": "mailbox.BabylMessage.set_visible()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.set_visible"
    },
    {
        "name": "mailbox.BabylMessage.update_visible()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.BabylMessage.update_visible"
    },
    {
        "name": "mailbox.Error",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Error"
    },
    {
        "name": "mailbox.ExternalClashError",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.ExternalClashError"
    },
    {
        "name": "mailbox.FormatError",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.FormatError"
    },
    {
        "name": "mailbox.Mailbox",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox"
    },
    {
        "name": "mailbox.Mailbox.add()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.add"
    },
    {
        "name": "mailbox.Mailbox.clear()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.clear"
    },
    {
        "name": "mailbox.Mailbox.close()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.close"
    },
    {
        "name": "mailbox.Mailbox.discard()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.discard"
    },
    {
        "name": "mailbox.Mailbox.flush()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.flush"
    },
    {
        "name": "mailbox.Mailbox.get()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.get"
    },
    {
        "name": "mailbox.Mailbox.get_bytes()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.get_bytes"
    },
    {
        "name": "mailbox.Mailbox.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.get_file"
    },
    {
        "name": "mailbox.Mailbox.get_message()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.get_message"
    },
    {
        "name": "mailbox.Mailbox.get_string()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.get_string"
    },
    {
        "name": "mailbox.Mailbox.items()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.items"
    },
    {
        "name": "mailbox.Mailbox.iteritems()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.iteritems"
    },
    {
        "name": "mailbox.Mailbox.iterkeys()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.iterkeys"
    },
    {
        "name": "mailbox.Mailbox.itervalues()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.itervalues"
    },
    {
        "name": "mailbox.Mailbox.keys()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.keys"
    },
    {
        "name": "mailbox.Mailbox.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.lock"
    },
    {
        "name": "mailbox.Mailbox.pop()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.pop"
    },
    {
        "name": "mailbox.Mailbox.popitem()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.popitem"
    },
    {
        "name": "mailbox.Mailbox.remove()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.remove"
    },
    {
        "name": "mailbox.Mailbox.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.unlock"
    },
    {
        "name": "mailbox.Mailbox.update()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.update"
    },
    {
        "name": "mailbox.Mailbox.values()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.values"
    },
    {
        "name": "mailbox.Mailbox.__contains__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__contains__"
    },
    {
        "name": "mailbox.Mailbox.__delitem__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__delitem__"
    },
    {
        "name": "mailbox.Mailbox.__getitem__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__getitem__"
    },
    {
        "name": "mailbox.Mailbox.__iter__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__iter__"
    },
    {
        "name": "mailbox.Mailbox.__len__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__len__"
    },
    {
        "name": "mailbox.Mailbox.__setitem__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Mailbox.__setitem__"
    },
    {
        "name": "mailbox.Maildir",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir"
    },
    {
        "name": "mailbox.Maildir.add()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.add"
    },
    {
        "name": "mailbox.Maildir.add_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.add_folder"
    },
    {
        "name": "mailbox.Maildir.clean()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.clean"
    },
    {
        "name": "mailbox.Maildir.close()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.close"
    },
    {
        "name": "mailbox.Maildir.flush()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.flush"
    },
    {
        "name": "mailbox.Maildir.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.get_file"
    },
    {
        "name": "mailbox.Maildir.get_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.get_folder"
    },
    {
        "name": "mailbox.Maildir.list_folders()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.list_folders"
    },
    {
        "name": "mailbox.Maildir.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.lock"
    },
    {
        "name": "mailbox.Maildir.remove_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.remove_folder"
    },
    {
        "name": "mailbox.Maildir.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.unlock"
    },
    {
        "name": "mailbox.Maildir.update()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.update"
    },
    {
        "name": "mailbox.Maildir.__setitem__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Maildir.__setitem__"
    },
    {
        "name": "mailbox.MaildirMessage",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage"
    },
    {
        "name": "mailbox.MaildirMessage.add_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.add_flag"
    },
    {
        "name": "mailbox.MaildirMessage.get_date()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.get_date"
    },
    {
        "name": "mailbox.MaildirMessage.get_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.get_flags"
    },
    {
        "name": "mailbox.MaildirMessage.get_info()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.get_info"
    },
    {
        "name": "mailbox.MaildirMessage.get_subdir()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.get_subdir"
    },
    {
        "name": "mailbox.MaildirMessage.remove_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.remove_flag"
    },
    {
        "name": "mailbox.MaildirMessage.set_date()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.set_date"
    },
    {
        "name": "mailbox.MaildirMessage.set_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.set_flags"
    },
    {
        "name": "mailbox.MaildirMessage.set_info()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.set_info"
    },
    {
        "name": "mailbox.MaildirMessage.set_subdir()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MaildirMessage.set_subdir"
    },
    {
        "name": "mailbox.mbox",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mbox"
    },
    {
        "name": "mailbox.mbox.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mbox.get_file"
    },
    {
        "name": "mailbox.mbox.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mbox.lock"
    },
    {
        "name": "mailbox.mbox.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mbox.unlock"
    },
    {
        "name": "mailbox.mboxMessage",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage"
    },
    {
        "name": "mailbox.mboxMessage.add_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.add_flag"
    },
    {
        "name": "mailbox.mboxMessage.get_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.get_flags"
    },
    {
        "name": "mailbox.mboxMessage.get_from()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.get_from"
    },
    {
        "name": "mailbox.mboxMessage.remove_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.remove_flag"
    },
    {
        "name": "mailbox.mboxMessage.set_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.set_flags"
    },
    {
        "name": "mailbox.mboxMessage.set_from()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.mboxMessage.set_from"
    },
    {
        "name": "mailbox.Message",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.Message"
    },
    {
        "name": "mailbox.MH",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH"
    },
    {
        "name": "mailbox.MH.add_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.add_folder"
    },
    {
        "name": "mailbox.MH.close()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.close"
    },
    {
        "name": "mailbox.MH.discard()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.discard"
    },
    {
        "name": "mailbox.MH.flush()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.flush"
    },
    {
        "name": "mailbox.MH.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.get_file"
    },
    {
        "name": "mailbox.MH.get_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.get_folder"
    },
    {
        "name": "mailbox.MH.get_sequences()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.get_sequences"
    },
    {
        "name": "mailbox.MH.list_folders()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.list_folders"
    },
    {
        "name": "mailbox.MH.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.lock"
    },
    {
        "name": "mailbox.MH.pack()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.pack"
    },
    {
        "name": "mailbox.MH.remove()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.remove"
    },
    {
        "name": "mailbox.MH.remove_folder()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.remove_folder"
    },
    {
        "name": "mailbox.MH.set_sequences()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.set_sequences"
    },
    {
        "name": "mailbox.MH.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.unlock"
    },
    {
        "name": "mailbox.MH.__delitem__()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MH.__delitem__"
    },
    {
        "name": "mailbox.MHMessage",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MHMessage"
    },
    {
        "name": "mailbox.MHMessage.add_sequence()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MHMessage.add_sequence"
    },
    {
        "name": "mailbox.MHMessage.get_sequences()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MHMessage.get_sequences"
    },
    {
        "name": "mailbox.MHMessage.remove_sequence()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MHMessage.remove_sequence"
    },
    {
        "name": "mailbox.MHMessage.set_sequences()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MHMessage.set_sequences"
    },
    {
        "name": "mailbox.MMDF",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDF"
    },
    {
        "name": "mailbox.MMDF.get_file()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDF.get_file"
    },
    {
        "name": "mailbox.MMDF.lock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDF.lock"
    },
    {
        "name": "mailbox.MMDF.unlock()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDF.unlock"
    },
    {
        "name": "mailbox.MMDFMessage",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage"
    },
    {
        "name": "mailbox.MMDFMessage.add_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.add_flag"
    },
    {
        "name": "mailbox.MMDFMessage.get_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.get_flags"
    },
    {
        "name": "mailbox.MMDFMessage.get_from()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.get_from"
    },
    {
        "name": "mailbox.MMDFMessage.remove_flag()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.remove_flag"
    },
    {
        "name": "mailbox.MMDFMessage.set_flags()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.set_flags"
    },
    {
        "name": "mailbox.MMDFMessage.set_from()",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.MMDFMessage.set_from"
    },
    {
        "name": "mailbox.NoSuchMailboxError",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.NoSuchMailboxError"
    },
    {
        "name": "mailbox.NotEmptyError",
        "type": "Internet Data",
        "path": "library/mailbox#mailbox.NotEmptyError"
    },
    {
        "name": "mailcap",
        "type": "Internet Data",
        "path": "library/mailcap"
    },
    {
        "name": "mailcap.findmatch()",
        "type": "Internet Data",
        "path": "library/mailcap#mailcap.findmatch"
    },
    {
        "name": "mailcap.getcaps()",
        "type": "Internet Data",
        "path": "library/mailcap#mailcap.getcaps"
    },
    {
        "name": "map()",
        "type": "Built-in Functions",
        "path": "library/functions#map"
    },
    {
        "name": "marshal",
        "type": "Data Persistence",
        "path": "library/marshal"
    },
    {
        "name": "marshal.dump()",
        "type": "Data Persistence",
        "path": "library/marshal#marshal.dump"
    },
    {
        "name": "marshal.dumps()",
        "type": "Data Persistence",
        "path": "library/marshal#marshal.dumps"
    },
    {
        "name": "marshal.load()",
        "type": "Data Persistence",
        "path": "library/marshal#marshal.load"
    },
    {
        "name": "marshal.loads()",
        "type": "Data Persistence",
        "path": "library/marshal#marshal.loads"
    },
    {
        "name": "marshal.version",
        "type": "Data Persistence",
        "path": "library/marshal#marshal.version"
    },
    {
        "name": "math",
        "type": "Numeric & Mathematical",
        "path": "library/math"
    },
    {
        "name": "math.acos()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.acos"
    },
    {
        "name": "math.acosh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.acosh"
    },
    {
        "name": "math.asin()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.asin"
    },
    {
        "name": "math.asinh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.asinh"
    },
    {
        "name": "math.atan()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.atan"
    },
    {
        "name": "math.atan2()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.atan2"
    },
    {
        "name": "math.atanh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.atanh"
    },
    {
        "name": "math.ceil()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.ceil"
    },
    {
        "name": "math.copysign()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.copysign"
    },
    {
        "name": "math.cos()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.cos"
    },
    {
        "name": "math.cosh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.cosh"
    },
    {
        "name": "math.degrees()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.degrees"
    },
    {
        "name": "math.e",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.e"
    },
    {
        "name": "math.erf()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.erf"
    },
    {
        "name": "math.erfc()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.erfc"
    },
    {
        "name": "math.exp()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.exp"
    },
    {
        "name": "math.expm1()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.expm1"
    },
    {
        "name": "math.fabs()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.fabs"
    },
    {
        "name": "math.factorial()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.factorial"
    },
    {
        "name": "math.floor()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.floor"
    },
    {
        "name": "math.fmod()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.fmod"
    },
    {
        "name": "math.frexp()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.frexp"
    },
    {
        "name": "math.fsum()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.fsum"
    },
    {
        "name": "math.gamma()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.gamma"
    },
    {
        "name": "math.hypot()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.hypot"
    },
    {
        "name": "math.isfinite()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.isfinite"
    },
    {
        "name": "math.isinf()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.isinf"
    },
    {
        "name": "math.isnan()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.isnan"
    },
    {
        "name": "math.ldexp()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.ldexp"
    },
    {
        "name": "math.lgamma()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.lgamma"
    },
    {
        "name": "math.log()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.log"
    },
    {
        "name": "math.log10()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.log10"
    },
    {
        "name": "math.log1p()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.log1p"
    },
    {
        "name": "math.log2()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.log2"
    },
    {
        "name": "math.modf()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.modf"
    },
    {
        "name": "math.pi",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.pi"
    },
    {
        "name": "math.pow()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.pow"
    },
    {
        "name": "math.radians()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.radians"
    },
    {
        "name": "math.sin()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.sin"
    },
    {
        "name": "math.sinh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.sinh"
    },
    {
        "name": "math.sqrt()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.sqrt"
    },
    {
        "name": "math.tan()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.tan"
    },
    {
        "name": "math.tanh()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.tanh"
    },
    {
        "name": "math.trunc()",
        "type": "Numeric & Mathematical",
        "path": "library/math#math.trunc"
    },
    {
        "name": "max()",
        "type": "Built-in Functions",
        "path": "library/functions#max"
    },
    {
        "name": "MemoryError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#MemoryError"
    },
    {
        "name": "memoryview",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview"
    },
    {
        "name": "memoryview()",
        "type": "Built-in Functions",
        "path": "library/functions#memoryview"
    },
    {
        "name": "memoryview.cast()",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.cast"
    },
    {
        "name": "memoryview.contiguous",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.contiguous"
    },
    {
        "name": "memoryview.c_contiguous",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.c_contiguous"
    },
    {
        "name": "memoryview.format",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.format"
    },
    {
        "name": "memoryview.f_contiguous",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.f_contiguous"
    },
    {
        "name": "memoryview.itemsize",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.itemsize"
    },
    {
        "name": "memoryview.nbytes",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.nbytes"
    },
    {
        "name": "memoryview.ndim",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.ndim"
    },
    {
        "name": "memoryview.obj",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.obj"
    },
    {
        "name": "memoryview.readonly",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.readonly"
    },
    {
        "name": "memoryview.release()",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.release"
    },
    {
        "name": "memoryview.shape",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.shape"
    },
    {
        "name": "memoryview.strides",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.strides"
    },
    {
        "name": "memoryview.suboffsets",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.suboffsets"
    },
    {
        "name": "memoryview.tobytes()",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.tobytes"
    },
    {
        "name": "memoryview.tolist()",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.tolist"
    },
    {
        "name": "memoryview.__eq__()",
        "type": "Built-in Types",
        "path": "library/stdtypes#memoryview.__eq__"
    },
    {
        "name": "mimetypes",
        "type": "Internet Data",
        "path": "library/mimetypes"
    },
    {
        "name": "mimetypes.add_type()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.add_type"
    },
    {
        "name": "mimetypes.common_types",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.common_types"
    },
    {
        "name": "mimetypes.encodings_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.encodings_map"
    },
    {
        "name": "mimetypes.guess_all_extensions()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.guess_all_extensions"
    },
    {
        "name": "mimetypes.guess_extension()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.guess_extension"
    },
    {
        "name": "mimetypes.guess_type()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.guess_type"
    },
    {
        "name": "mimetypes.init()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.init"
    },
    {
        "name": "mimetypes.inited",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.inited"
    },
    {
        "name": "mimetypes.knownfiles",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.knownfiles"
    },
    {
        "name": "mimetypes.MimeTypes",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes"
    },
    {
        "name": "mimetypes.MimeTypes.encodings_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.encodings_map"
    },
    {
        "name": "mimetypes.MimeTypes.guess_all_extensions()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.guess_all_extensions"
    },
    {
        "name": "mimetypes.MimeTypes.guess_extension()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.guess_extension"
    },
    {
        "name": "mimetypes.MimeTypes.guess_type()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.guess_type"
    },
    {
        "name": "mimetypes.MimeTypes.read()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.read"
    },
    {
        "name": "mimetypes.MimeTypes.readfp()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.readfp"
    },
    {
        "name": "mimetypes.MimeTypes.read_windows_registry()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.read_windows_registry"
    },
    {
        "name": "mimetypes.MimeTypes.suffix_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.suffix_map"
    },
    {
        "name": "mimetypes.MimeTypes.types_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.types_map"
    },
    {
        "name": "mimetypes.MimeTypes.types_map_inv",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.MimeTypes.types_map_inv"
    },
    {
        "name": "mimetypes.read_mime_types()",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.read_mime_types"
    },
    {
        "name": "mimetypes.suffix_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.suffix_map"
    },
    {
        "name": "mimetypes.types_map",
        "type": "Internet Data",
        "path": "library/mimetypes#mimetypes.types_map"
    },
    {
        "name": "min()",
        "type": "Built-in Functions",
        "path": "library/functions#min"
    },
    {
        "name": "mmap",
        "type": "Networking",
        "path": "library/mmap"
    },
    {
        "name": "mmap.mmap",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap"
    },
    {
        "name": "mmap.mmap.close()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.close"
    },
    {
        "name": "mmap.mmap.closed",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.closed"
    },
    {
        "name": "mmap.mmap.find()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.find"
    },
    {
        "name": "mmap.mmap.flush()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.flush"
    },
    {
        "name": "mmap.mmap.move()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.move"
    },
    {
        "name": "mmap.mmap.read()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.read"
    },
    {
        "name": "mmap.mmap.readline()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.readline"
    },
    {
        "name": "mmap.mmap.read_byte()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.read_byte"
    },
    {
        "name": "mmap.mmap.resize()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.resize"
    },
    {
        "name": "mmap.mmap.rfind()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.rfind"
    },
    {
        "name": "mmap.mmap.seek()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.seek"
    },
    {
        "name": "mmap.mmap.size()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.size"
    },
    {
        "name": "mmap.mmap.tell()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.tell"
    },
    {
        "name": "mmap.mmap.write()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.write"
    },
    {
        "name": "mmap.mmap.write_byte()",
        "type": "Networking",
        "path": "library/mmap#mmap.mmap.write_byte"
    },
    {
        "name": "modulefinder",
        "type": "Importing",
        "path": "library/modulefinder"
    },
    {
        "name": "modulefinder.AddPackagePath()",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.AddPackagePath"
    },
    {
        "name": "modulefinder.ModuleFinder",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.ModuleFinder"
    },
    {
        "name": "modulefinder.ModuleFinder.modules",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.ModuleFinder.modules"
    },
    {
        "name": "modulefinder.ModuleFinder.report()",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.ModuleFinder.report"
    },
    {
        "name": "modulefinder.ModuleFinder.run_script()",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.ModuleFinder.run_script"
    },
    {
        "name": "modulefinder.ReplacePackage()",
        "type": "Importing",
        "path": "library/modulefinder#modulefinder.ReplacePackage"
    },
    {
        "name": "msilib",
        "type": "MS Windows",
        "path": "library/msilib"
    },
    {
        "name": "msilib.add_data()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.add_data"
    },
    {
        "name": "msilib.add_stream()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.add_stream"
    },
    {
        "name": "msilib.add_tables()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.add_tables"
    },
    {
        "name": "msilib.Binary",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Binary"
    },
    {
        "name": "msilib.CAB",
        "type": "MS Windows",
        "path": "library/msilib#msilib.CAB"
    },
    {
        "name": "msilib.CAB.append()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.CAB.append"
    },
    {
        "name": "msilib.CAB.commit()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.CAB.commit"
    },
    {
        "name": "msilib.Control",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Control"
    },
    {
        "name": "msilib.Control.condition()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Control.condition"
    },
    {
        "name": "msilib.Control.event()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Control.event"
    },
    {
        "name": "msilib.Control.mapping()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Control.mapping"
    },
    {
        "name": "msilib.CreateRecord()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.CreateRecord"
    },
    {
        "name": "msilib.Database.Commit()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Database.Commit"
    },
    {
        "name": "msilib.Database.GetSummaryInformation()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Database.GetSummaryInformation"
    },
    {
        "name": "msilib.Database.OpenView()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Database.OpenView"
    },
    {
        "name": "msilib.Dialog",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog"
    },
    {
        "name": "msilib.Dialog.bitmap()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.bitmap"
    },
    {
        "name": "msilib.Dialog.checkbox()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.checkbox"
    },
    {
        "name": "msilib.Dialog.control()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.control"
    },
    {
        "name": "msilib.Dialog.line()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.line"
    },
    {
        "name": "msilib.Dialog.pushbutton()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.pushbutton"
    },
    {
        "name": "msilib.Dialog.radiogroup()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.radiogroup"
    },
    {
        "name": "msilib.Dialog.text()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Dialog.text"
    },
    {
        "name": "msilib.Directory",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Directory"
    },
    {
        "name": "msilib.Directory.add_file()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Directory.add_file"
    },
    {
        "name": "msilib.Directory.glob()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Directory.glob"
    },
    {
        "name": "msilib.Directory.remove_pyc()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Directory.remove_pyc"
    },
    {
        "name": "msilib.Directory.start_component()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Directory.start_component"
    },
    {
        "name": "msilib.FCICreate()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.FCICreate"
    },
    {
        "name": "msilib.Feature",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Feature"
    },
    {
        "name": "msilib.Feature.set_current()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Feature.set_current"
    },
    {
        "name": "msilib.gen_uuid()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.gen_uuid"
    },
    {
        "name": "msilib.init_database()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.init_database"
    },
    {
        "name": "msilib.OpenDatabase()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.OpenDatabase"
    },
    {
        "name": "msilib.RadioButtonGroup",
        "type": "MS Windows",
        "path": "library/msilib#msilib.RadioButtonGroup"
    },
    {
        "name": "msilib.RadioButtonGroup.add()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.RadioButtonGroup.add"
    },
    {
        "name": "msilib.Record.ClearData()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.ClearData"
    },
    {
        "name": "msilib.Record.GetFieldCount()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.GetFieldCount"
    },
    {
        "name": "msilib.Record.GetInteger()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.GetInteger"
    },
    {
        "name": "msilib.Record.GetString()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.GetString"
    },
    {
        "name": "msilib.Record.SetInteger()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.SetInteger"
    },
    {
        "name": "msilib.Record.SetStream()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.SetStream"
    },
    {
        "name": "msilib.Record.SetString()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.Record.SetString"
    },
    {
        "name": "msilib.schema",
        "type": "MS Windows",
        "path": "library/msilib#msilib.schema"
    },
    {
        "name": "msilib.sequence",
        "type": "MS Windows",
        "path": "library/msilib#msilib.sequence"
    },
    {
        "name": "msilib.SummaryInformation.GetProperty()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.SummaryInformation.GetProperty"
    },
    {
        "name": "msilib.SummaryInformation.GetPropertyCount()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.SummaryInformation.GetPropertyCount"
    },
    {
        "name": "msilib.SummaryInformation.Persist()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.SummaryInformation.Persist"
    },
    {
        "name": "msilib.SummaryInformation.SetProperty()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.SummaryInformation.SetProperty"
    },
    {
        "name": "msilib.text",
        "type": "MS Windows",
        "path": "library/msilib#msilib.text"
    },
    {
        "name": "msilib.UuidCreate()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.UuidCreate"
    },
    {
        "name": "msilib.View.Close()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.View.Close"
    },
    {
        "name": "msilib.View.Execute()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.View.Execute"
    },
    {
        "name": "msilib.View.Fetch()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.View.Fetch"
    },
    {
        "name": "msilib.View.GetColumnInfo()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.View.GetColumnInfo"
    },
    {
        "name": "msilib.View.Modify()",
        "type": "MS Windows",
        "path": "library/msilib#msilib.View.Modify"
    },
    {
        "name": "msvcrt",
        "type": "MS Windows",
        "path": "library/msvcrt"
    },
    {
        "name": "msvcrt.getch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.getch"
    },
    {
        "name": "msvcrt.getche()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.getche"
    },
    {
        "name": "msvcrt.getwch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.getwch"
    },
    {
        "name": "msvcrt.getwche()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.getwche"
    },
    {
        "name": "msvcrt.get_osfhandle()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.get_osfhandle"
    },
    {
        "name": "msvcrt.heapmin()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.heapmin"
    },
    {
        "name": "msvcrt.kbhit()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.kbhit"
    },
    {
        "name": "msvcrt.locking()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.locking"
    },
    {
        "name": "msvcrt.open_osfhandle()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.open_osfhandle"
    },
    {
        "name": "msvcrt.putch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.putch"
    },
    {
        "name": "msvcrt.putwch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.putwch"
    },
    {
        "name": "msvcrt.setmode()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.setmode"
    },
    {
        "name": "msvcrt.ungetch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.ungetch"
    },
    {
        "name": "msvcrt.ungetwch()",
        "type": "MS Windows",
        "path": "library/msvcrt#msvcrt.ungetwch"
    },
    {
        "name": "multiprocessing",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing"
    },
    {
        "name": "multiprocessing.active_children()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.active_children"
    },
    {
        "name": "multiprocessing.Array()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Array"
    },
    {
        "name": "multiprocessing.AuthenticationError",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.AuthenticationError"
    },
    {
        "name": "multiprocessing.Barrier",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Barrier"
    },
    {
        "name": "multiprocessing.BoundedSemaphore",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.BoundedSemaphore"
    },
    {
        "name": "multiprocessing.BufferTooShort",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.BufferTooShort"
    },
    {
        "name": "multiprocessing.Condition",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Condition"
    },
    {
        "name": "multiprocessing.Connection",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection"
    },
    {
        "name": "multiprocessing.connection.answer_challenge()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.answer_challenge"
    },
    {
        "name": "multiprocessing.connection.Client()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Client"
    },
    {
        "name": "multiprocessing.Connection.close()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.close"
    },
    {
        "name": "multiprocessing.connection.deliver_challenge()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.deliver_challenge"
    },
    {
        "name": "multiprocessing.Connection.fileno()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.fileno"
    },
    {
        "name": "multiprocessing.connection.Listener",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Listener"
    },
    {
        "name": "multiprocessing.connection.Listener.accept()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Listener.accept"
    },
    {
        "name": "multiprocessing.connection.Listener.address",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Listener.address"
    },
    {
        "name": "multiprocessing.connection.Listener.close()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Listener.close"
    },
    {
        "name": "multiprocessing.connection.Listener.last_accepted",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.Listener.last_accepted"
    },
    {
        "name": "multiprocessing.Connection.poll()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.poll"
    },
    {
        "name": "multiprocessing.Connection.recv()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.recv"
    },
    {
        "name": "multiprocessing.Connection.recv_bytes()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.recv_bytes"
    },
    {
        "name": "multiprocessing.Connection.recv_bytes_into()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.recv_bytes_into"
    },
    {
        "name": "multiprocessing.Connection.send()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.send"
    },
    {
        "name": "multiprocessing.Connection.send_bytes()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Connection.send_bytes"
    },
    {
        "name": "multiprocessing.connection.wait()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.connection.wait"
    },
    {
        "name": "multiprocessing.cpu_count()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.cpu_count"
    },
    {
        "name": "multiprocessing.current_process()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.current_process"
    },
    {
        "name": "multiprocessing.Event",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Event"
    },
    {
        "name": "multiprocessing.freeze_support()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.freeze_support"
    },
    {
        "name": "multiprocessing.get_all_start_methods()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.get_all_start_methods"
    },
    {
        "name": "multiprocessing.get_context()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.get_context"
    },
    {
        "name": "multiprocessing.get_logger()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.get_logger"
    },
    {
        "name": "multiprocessing.get_start_method()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.get_start_method"
    },
    {
        "name": "multiprocessing.JoinableQueue",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.JoinableQueue"
    },
    {
        "name": "multiprocessing.JoinableQueue.join()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.JoinableQueue.join"
    },
    {
        "name": "multiprocessing.JoinableQueue.task_done()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.JoinableQueue.task_done"
    },
    {
        "name": "multiprocessing.Lock",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Lock"
    },
    {
        "name": "multiprocessing.log_to_stderr()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.log_to_stderr"
    },
    {
        "name": "multiprocessing.managers.BaseManager",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager"
    },
    {
        "name": "multiprocessing.managers.BaseManager.address",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.address"
    },
    {
        "name": "multiprocessing.managers.BaseManager.connect()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.connect"
    },
    {
        "name": "multiprocessing.managers.BaseManager.get_server()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.get_server"
    },
    {
        "name": "multiprocessing.managers.BaseManager.register()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.register"
    },
    {
        "name": "multiprocessing.managers.BaseManager.shutdown()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.shutdown"
    },
    {
        "name": "multiprocessing.managers.BaseManager.start()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseManager.start"
    },
    {
        "name": "multiprocessing.managers.BaseProxy",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseProxy"
    },
    {
        "name": "multiprocessing.managers.BaseProxy._callmethod()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseProxy._callmethod"
    },
    {
        "name": "multiprocessing.managers.BaseProxy._getvalue()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseProxy._getvalue"
    },
    {
        "name": "multiprocessing.managers.BaseProxy.__repr__()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseProxy.__repr__"
    },
    {
        "name": "multiprocessing.managers.BaseProxy.__str__()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.BaseProxy.__str__"
    },
    {
        "name": "multiprocessing.managers.SyncManager",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Array()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Array"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Barrier()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Barrier"
    },
    {
        "name": "multiprocessing.managers.SyncManager.BoundedSemaphore()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.BoundedSemaphore"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Condition()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Condition"
    },
    {
        "name": "multiprocessing.managers.SyncManager.dict()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.dict"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Event()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Event"
    },
    {
        "name": "multiprocessing.managers.SyncManager.list()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.list"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Lock()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Lock"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Namespace()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Namespace"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Queue()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Queue"
    },
    {
        "name": "multiprocessing.managers.SyncManager.RLock()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.RLock"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Semaphore()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Semaphore"
    },
    {
        "name": "multiprocessing.managers.SyncManager.Value()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.managers.SyncManager.Value"
    },
    {
        "name": "multiprocessing.Pipe()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Pipe"
    },
    {
        "name": "multiprocessing.pool.AsyncResult",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.AsyncResult"
    },
    {
        "name": "multiprocessing.pool.AsyncResult.get()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.AsyncResult.get"
    },
    {
        "name": "multiprocessing.pool.AsyncResult.ready()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.AsyncResult.ready"
    },
    {
        "name": "multiprocessing.pool.AsyncResult.successful()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.AsyncResult.successful"
    },
    {
        "name": "multiprocessing.pool.AsyncResult.wait()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.AsyncResult.wait"
    },
    {
        "name": "multiprocessing.pool.Pool",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool"
    },
    {
        "name": "multiprocessing.pool.Pool.apply()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.apply"
    },
    {
        "name": "multiprocessing.pool.Pool.apply_async()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.apply_async"
    },
    {
        "name": "multiprocessing.pool.Pool.close()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.close"
    },
    {
        "name": "multiprocessing.pool.Pool.imap()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.imap"
    },
    {
        "name": "multiprocessing.pool.Pool.imap_unordered()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.imap_unordered"
    },
    {
        "name": "multiprocessing.pool.Pool.join()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.join"
    },
    {
        "name": "multiprocessing.pool.Pool.map()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.map"
    },
    {
        "name": "multiprocessing.pool.Pool.map_async()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.map_async"
    },
    {
        "name": "multiprocessing.pool.Pool.starmap()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.starmap"
    },
    {
        "name": "multiprocessing.pool.Pool.starmap_async()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.starmap_async"
    },
    {
        "name": "multiprocessing.pool.Pool.terminate()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.pool.Pool.terminate"
    },
    {
        "name": "multiprocessing.Process",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process"
    },
    {
        "name": "multiprocessing.Process.authkey",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.authkey"
    },
    {
        "name": "multiprocessing.Process.daemon",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.daemon"
    },
    {
        "name": "multiprocessing.Process.exitcode",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.exitcode"
    },
    {
        "name": "multiprocessing.Process.is_alive()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.is_alive"
    },
    {
        "name": "multiprocessing.Process.join()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.join"
    },
    {
        "name": "multiprocessing.Process.name",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.name"
    },
    {
        "name": "multiprocessing.Process.pid",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.pid"
    },
    {
        "name": "multiprocessing.Process.run()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.run"
    },
    {
        "name": "multiprocessing.Process.sentinel",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.sentinel"
    },
    {
        "name": "multiprocessing.Process.start()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.start"
    },
    {
        "name": "multiprocessing.Process.terminate()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Process.terminate"
    },
    {
        "name": "multiprocessing.ProcessError",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.ProcessError"
    },
    {
        "name": "multiprocessing.Queue",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue"
    },
    {
        "name": "multiprocessing.Queue.cancel_join_thread()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.cancel_join_thread"
    },
    {
        "name": "multiprocessing.Queue.close()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.close"
    },
    {
        "name": "multiprocessing.Queue.empty()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.empty"
    },
    {
        "name": "multiprocessing.Queue.full()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.full"
    },
    {
        "name": "multiprocessing.Queue.get()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.get"
    },
    {
        "name": "multiprocessing.Queue.get_nowait()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.get_nowait"
    },
    {
        "name": "multiprocessing.Queue.join_thread()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.join_thread"
    },
    {
        "name": "multiprocessing.Queue.put()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.put"
    },
    {
        "name": "multiprocessing.Queue.put_nowait()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.put_nowait"
    },
    {
        "name": "multiprocessing.Queue.qsize()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Queue.qsize"
    },
    {
        "name": "multiprocessing.RLock",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.RLock"
    },
    {
        "name": "multiprocessing.Semaphore",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Semaphore"
    },
    {
        "name": "multiprocessing.set_executable()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.set_executable"
    },
    {
        "name": "multiprocessing.set_start_method()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.set_start_method"
    },
    {
        "name": "multiprocessing.sharedctypes.Array()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.Array"
    },
    {
        "name": "multiprocessing.sharedctypes.copy()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.copy"
    },
    {
        "name": "multiprocessing.sharedctypes.multiprocessing.Manager()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.multiprocessing.Manager"
    },
    {
        "name": "multiprocessing.sharedctypes.RawArray()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.RawArray"
    },
    {
        "name": "multiprocessing.sharedctypes.RawValue()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.RawValue"
    },
    {
        "name": "multiprocessing.sharedctypes.synchronized()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.synchronized"
    },
    {
        "name": "multiprocessing.sharedctypes.Value()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.sharedctypes.Value"
    },
    {
        "name": "multiprocessing.SimpleQueue",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.SimpleQueue"
    },
    {
        "name": "multiprocessing.SimpleQueue.empty()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.SimpleQueue.empty"
    },
    {
        "name": "multiprocessing.SimpleQueue.get()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.SimpleQueue.get"
    },
    {
        "name": "multiprocessing.SimpleQueue.put()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.SimpleQueue.put"
    },
    {
        "name": "multiprocessing.TimeoutError",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.TimeoutError"
    },
    {
        "name": "multiprocessing.Value()",
        "type": "Concurrent Execution",
        "path": "library/multiprocessing#multiprocessing.Value"
    },
    {
        "name": "NameError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#NameError"
    },
    {
        "name": "netrc",
        "type": "File Formats",
        "path": "library/netrc"
    },
    {
        "name": "netrc.netrc",
        "type": "File Formats",
        "path": "library/netrc#netrc.netrc"
    },
    {
        "name": "netrc.netrc.authenticators()",
        "type": "File Formats",
        "path": "library/netrc#netrc.netrc.authenticators"
    },
    {
        "name": "netrc.netrc.hosts",
        "type": "File Formats",
        "path": "library/netrc#netrc.netrc.hosts"
    },
    {
        "name": "netrc.netrc.macros",
        "type": "File Formats",
        "path": "library/netrc#netrc.netrc.macros"
    },
    {
        "name": "netrc.netrc.__repr__()",
        "type": "File Formats",
        "path": "library/netrc#netrc.netrc.__repr__"
    },
    {
        "name": "netrc.NetrcParseError",
        "type": "File Formats",
        "path": "library/netrc#netrc.NetrcParseError"
    },
    {
        "name": "next()",
        "type": "Built-in Functions",
        "path": "library/functions#next"
    },
    {
        "name": "nis",
        "type": "Unix",
        "path": "library/nis"
    },
    {
        "name": "nis.cat()",
        "type": "Unix",
        "path": "library/nis#nis.cat"
    },
    {
        "name": "nis.error",
        "type": "Unix",
        "path": "library/nis#nis.error"
    },
    {
        "name": "nis.get_default_domain()",
        "type": "Unix",
        "path": "library/nis#nis.get_default_domain"
    },
    {
        "name": "nis.maps()",
        "type": "Unix",
        "path": "library/nis#nis.maps"
    },
    {
        "name": "nis.match()",
        "type": "Unix",
        "path": "library/nis#nis.match"
    },
    {
        "name": "nntplib",
        "type": "Internet",
        "path": "library/nntplib"
    },
    {
        "name": "nntplib.decode_header()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.decode_header"
    },
    {
        "name": "nntplib.NNTP",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP"
    },
    {
        "name": "nntplib.NNTP.article()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.article"
    },
    {
        "name": "nntplib.NNTP.body()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.body"
    },
    {
        "name": "nntplib.NNTP.date()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.date"
    },
    {
        "name": "nntplib.NNTP.description()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.description"
    },
    {
        "name": "nntplib.NNTP.descriptions()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.descriptions"
    },
    {
        "name": "nntplib.NNTP.getcapabilities()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.getcapabilities"
    },
    {
        "name": "nntplib.NNTP.getwelcome()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.getwelcome"
    },
    {
        "name": "nntplib.NNTP.group()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.group"
    },
    {
        "name": "nntplib.NNTP.head()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.head"
    },
    {
        "name": "nntplib.NNTP.help()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.help"
    },
    {
        "name": "nntplib.NNTP.ihave()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.ihave"
    },
    {
        "name": "nntplib.NNTP.last()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.last"
    },
    {
        "name": "nntplib.NNTP.list()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.list"
    },
    {
        "name": "nntplib.NNTP.login()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.login"
    },
    {
        "name": "nntplib.NNTP.newgroups()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.newgroups"
    },
    {
        "name": "nntplib.NNTP.newnews()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.newnews"
    },
    {
        "name": "nntplib.NNTP.next()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.next"
    },
    {
        "name": "nntplib.NNTP.nntp_implementation",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.nntp_implementation"
    },
    {
        "name": "nntplib.NNTP.nntp_version",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.nntp_version"
    },
    {
        "name": "nntplib.NNTP.over()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.over"
    },
    {
        "name": "nntplib.NNTP.post()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.post"
    },
    {
        "name": "nntplib.NNTP.quit()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.quit"
    },
    {
        "name": "nntplib.NNTP.set_debuglevel()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.set_debuglevel"
    },
    {
        "name": "nntplib.NNTP.slave()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.slave"
    },
    {
        "name": "nntplib.NNTP.starttls()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.starttls"
    },
    {
        "name": "nntplib.NNTP.stat()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.stat"
    },
    {
        "name": "nntplib.NNTP.xhdr()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.xhdr"
    },
    {
        "name": "nntplib.NNTP.xover()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.xover"
    },
    {
        "name": "nntplib.NNTP.xpath()",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP.xpath"
    },
    {
        "name": "nntplib.NNTPDataError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPDataError"
    },
    {
        "name": "nntplib.NNTPError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPError"
    },
    {
        "name": "nntplib.NNTPError.response",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPError.response"
    },
    {
        "name": "nntplib.NNTPPermanentError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPPermanentError"
    },
    {
        "name": "nntplib.NNTPProtocolError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPProtocolError"
    },
    {
        "name": "nntplib.NNTPReplyError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPReplyError"
    },
    {
        "name": "nntplib.NNTPTemporaryError",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTPTemporaryError"
    },
    {
        "name": "nntplib.NNTP_SSL",
        "type": "Internet",
        "path": "library/nntplib#nntplib.NNTP_SSL"
    },
    {
        "name": "None",
        "type": "Built-in Constants",
        "path": "library/constants#None"
    },
    {
        "name": "NotADirectoryError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#NotADirectoryError"
    },
    {
        "name": "NotImplemented",
        "type": "Built-in Constants",
        "path": "library/constants#NotImplemented"
    },
    {
        "name": "NotImplementedError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#NotImplementedError"
    },
    {
        "name": "numbers",
        "type": "Numeric & Mathematical",
        "path": "library/numbers"
    },
    {
        "name": "numbers.Complex",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Complex"
    },
    {
        "name": "numbers.Complex.conjugate()",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Complex.conjugate"
    },
    {
        "name": "numbers.Complex.imag",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Complex.imag"
    },
    {
        "name": "numbers.Complex.real",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Complex.real"
    },
    {
        "name": "numbers.Integral",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Integral"
    },
    {
        "name": "numbers.Number",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Number"
    },
    {
        "name": "numbers.Rational",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Rational"
    },
    {
        "name": "numbers.Rational.denominator",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Rational.denominator"
    },
    {
        "name": "numbers.Rational.numerator",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Rational.numerator"
    },
    {
        "name": "numbers.Real",
        "type": "Numeric & Mathematical",
        "path": "library/numbers#numbers.Real"
    },
    {
        "name": "object",
        "type": "Built-in Functions",
        "path": "library/functions#object"
    },
    {
        "name": "object.__dict__",
        "type": "Built-in Types",
        "path": "library/stdtypes#object.__dict__"
    },
    {
        "name": "object.__getnewargs_ex__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__getnewargs_ex__"
    },
    {
        "name": "object.__getnewargs__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__getnewargs__"
    },
    {
        "name": "object.__getstate__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__getstate__"
    },
    {
        "name": "object.__reduce_ex__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__reduce_ex__"
    },
    {
        "name": "object.__reduce__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__reduce__"
    },
    {
        "name": "object.__setstate__()",
        "type": "Data Persistence",
        "path": "library/pickle#object.__setstate__"
    },
    {
        "name": "oct()",
        "type": "Built-in Functions",
        "path": "library/functions#oct"
    },
    {
        "name": "open()",
        "type": "Built-in Functions",
        "path": "library/functions#open"
    },
    {
        "name": "operator",
        "type": "Functional Programming",
        "path": "library/operator"
    },
    {
        "name": "operator.abs()",
        "type": "Functional Programming",
        "path": "library/operator#operator.abs"
    },
    {
        "name": "operator.add()",
        "type": "Functional Programming",
        "path": "library/operator#operator.add"
    },
    {
        "name": "operator.and_()",
        "type": "Functional Programming",
        "path": "library/operator#operator.and_"
    },
    {
        "name": "operator.attrgetter()",
        "type": "Functional Programming",
        "path": "library/operator#operator.attrgetter"
    },
    {
        "name": "operator.concat()",
        "type": "Functional Programming",
        "path": "library/operator#operator.concat"
    },
    {
        "name": "operator.contains()",
        "type": "Functional Programming",
        "path": "library/operator#operator.contains"
    },
    {
        "name": "operator.countOf()",
        "type": "Functional Programming",
        "path": "library/operator#operator.countOf"
    },
    {
        "name": "operator.delitem()",
        "type": "Functional Programming",
        "path": "library/operator#operator.delitem"
    },
    {
        "name": "operator.eq()",
        "type": "Functional Programming",
        "path": "library/operator#operator.eq"
    },
    {
        "name": "operator.floordiv()",
        "type": "Functional Programming",
        "path": "library/operator#operator.floordiv"
    },
    {
        "name": "operator.ge()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ge"
    },
    {
        "name": "operator.getitem()",
        "type": "Functional Programming",
        "path": "library/operator#operator.getitem"
    },
    {
        "name": "operator.gt()",
        "type": "Functional Programming",
        "path": "library/operator#operator.gt"
    },
    {
        "name": "operator.iadd()",
        "type": "Functional Programming",
        "path": "library/operator#operator.iadd"
    },
    {
        "name": "operator.iand()",
        "type": "Functional Programming",
        "path": "library/operator#operator.iand"
    },
    {
        "name": "operator.iconcat()",
        "type": "Functional Programming",
        "path": "library/operator#operator.iconcat"
    },
    {
        "name": "operator.ifloordiv()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ifloordiv"
    },
    {
        "name": "operator.ilshift()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ilshift"
    },
    {
        "name": "operator.imod()",
        "type": "Functional Programming",
        "path": "library/operator#operator.imod"
    },
    {
        "name": "operator.imul()",
        "type": "Functional Programming",
        "path": "library/operator#operator.imul"
    },
    {
        "name": "operator.index()",
        "type": "Functional Programming",
        "path": "library/operator#operator.index"
    },
    {
        "name": "operator.indexOf()",
        "type": "Functional Programming",
        "path": "library/operator#operator.indexOf"
    },
    {
        "name": "operator.inv()",
        "type": "Functional Programming",
        "path": "library/operator#operator.inv"
    },
    {
        "name": "operator.invert()",
        "type": "Functional Programming",
        "path": "library/operator#operator.invert"
    },
    {
        "name": "operator.ior()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ior"
    },
    {
        "name": "operator.ipow()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ipow"
    },
    {
        "name": "operator.irshift()",
        "type": "Functional Programming",
        "path": "library/operator#operator.irshift"
    },
    {
        "name": "operator.isub()",
        "type": "Functional Programming",
        "path": "library/operator#operator.isub"
    },
    {
        "name": "operator.is_()",
        "type": "Functional Programming",
        "path": "library/operator#operator.is_"
    },
    {
        "name": "operator.is_not()",
        "type": "Functional Programming",
        "path": "library/operator#operator.is_not"
    },
    {
        "name": "operator.itemgetter()",
        "type": "Functional Programming",
        "path": "library/operator#operator.itemgetter"
    },
    {
        "name": "operator.itruediv()",
        "type": "Functional Programming",
        "path": "library/operator#operator.itruediv"
    },
    {
        "name": "operator.ixor()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ixor"
    },
    {
        "name": "operator.le()",
        "type": "Functional Programming",
        "path": "library/operator#operator.le"
    },
    {
        "name": "operator.length_hint()",
        "type": "Functional Programming",
        "path": "library/operator#operator.length_hint"
    },
    {
        "name": "operator.lshift()",
        "type": "Functional Programming",
        "path": "library/operator#operator.lshift"
    },
    {
        "name": "operator.lt()",
        "type": "Functional Programming",
        "path": "library/operator#operator.lt"
    },
    {
        "name": "operator.methodcaller()",
        "type": "Functional Programming",
        "path": "library/operator#operator.methodcaller"
    },
    {
        "name": "operator.mod()",
        "type": "Functional Programming",
        "path": "library/operator#operator.mod"
    },
    {
        "name": "operator.mul()",
        "type": "Functional Programming",
        "path": "library/operator#operator.mul"
    },
    {
        "name": "operator.ne()",
        "type": "Functional Programming",
        "path": "library/operator#operator.ne"
    },
    {
        "name": "operator.neg()",
        "type": "Functional Programming",
        "path": "library/operator#operator.neg"
    },
    {
        "name": "operator.not_()",
        "type": "Functional Programming",
        "path": "library/operator#operator.not_"
    },
    {
        "name": "operator.or_()",
        "type": "Functional Programming",
        "path": "library/operator#operator.or_"
    },
    {
        "name": "operator.pos()",
        "type": "Functional Programming",
        "path": "library/operator#operator.pos"
    },
    {
        "name": "operator.pow()",
        "type": "Functional Programming",
        "path": "library/operator#operator.pow"
    },
    {
        "name": "operator.rshift()",
        "type": "Functional Programming",
        "path": "library/operator#operator.rshift"
    },
    {
        "name": "operator.setitem()",
        "type": "Functional Programming",
        "path": "library/operator#operator.setitem"
    },
    {
        "name": "operator.sub()",
        "type": "Functional Programming",
        "path": "library/operator#operator.sub"
    },
    {
        "name": "operator.truediv()",
        "type": "Functional Programming",
        "path": "library/operator#operator.truediv"
    },
    {
        "name": "operator.truth()",
        "type": "Functional Programming",
        "path": "library/operator#operator.truth"
    },
    {
        "name": "operator.xor()",
        "type": "Functional Programming",
        "path": "library/operator#operator.xor"
    },
    {
        "name": "operator.__abs__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__abs__"
    },
    {
        "name": "operator.__add__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__add__"
    },
    {
        "name": "operator.__and__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__and__"
    },
    {
        "name": "operator.__concat__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__concat__"
    },
    {
        "name": "operator.__contains__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__contains__"
    },
    {
        "name": "operator.__delitem__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__delitem__"
    },
    {
        "name": "operator.__eq__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__eq__"
    },
    {
        "name": "operator.__floordiv__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__floordiv__"
    },
    {
        "name": "operator.__getitem__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__getitem__"
    },
    {
        "name": "operator.__ge__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ge__"
    },
    {
        "name": "operator.__gt__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__gt__"
    },
    {
        "name": "operator.__iadd__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__iadd__"
    },
    {
        "name": "operator.__iand__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__iand__"
    },
    {
        "name": "operator.__iconcat__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__iconcat__"
    },
    {
        "name": "operator.__ifloordiv__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ifloordiv__"
    },
    {
        "name": "operator.__ilshift__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ilshift__"
    },
    {
        "name": "operator.__imod__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__imod__"
    },
    {
        "name": "operator.__imul__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__imul__"
    },
    {
        "name": "operator.__index__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__index__"
    },
    {
        "name": "operator.__invert__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__invert__"
    },
    {
        "name": "operator.__inv__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__inv__"
    },
    {
        "name": "operator.__ior__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ior__"
    },
    {
        "name": "operator.__ipow__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ipow__"
    },
    {
        "name": "operator.__irshift__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__irshift__"
    },
    {
        "name": "operator.__isub__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__isub__"
    },
    {
        "name": "operator.__itruediv__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__itruediv__"
    },
    {
        "name": "operator.__ixor__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ixor__"
    },
    {
        "name": "operator.__le__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__le__"
    },
    {
        "name": "operator.__lshift__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__lshift__"
    },
    {
        "name": "operator.__lt__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__lt__"
    },
    {
        "name": "operator.__mod__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__mod__"
    },
    {
        "name": "operator.__mul__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__mul__"
    },
    {
        "name": "operator.__neg__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__neg__"
    },
    {
        "name": "operator.__ne__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__ne__"
    },
    {
        "name": "operator.__not__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__not__"
    },
    {
        "name": "operator.__or__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__or__"
    },
    {
        "name": "operator.__pos__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__pos__"
    },
    {
        "name": "operator.__pow__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__pow__"
    },
    {
        "name": "operator.__rshift__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__rshift__"
    },
    {
        "name": "operator.__setitem__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__setitem__"
    },
    {
        "name": "operator.__sub__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__sub__"
    },
    {
        "name": "operator.__truediv__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__truediv__"
    },
    {
        "name": "operator.__xor__()",
        "type": "Functional Programming",
        "path": "library/operator#operator.__xor__"
    },
    {
        "name": "ord()",
        "type": "Built-in Functions",
        "path": "library/functions#ord"
    },
    {
        "name": "os",
        "type": "Operating System",
        "path": "library/os"
    },
    {
        "name": "os.abort()",
        "type": "Operating System",
        "path": "library/os#os.abort"
    },
    {
        "name": "os.access()",
        "type": "Operating System",
        "path": "library/os#os.access"
    },
    {
        "name": "os.altsep",
        "type": "Operating System",
        "path": "library/os#os.altsep"
    },
    {
        "name": "os.chdir()",
        "type": "Operating System",
        "path": "library/os#os.chdir"
    },
    {
        "name": "os.chflags()",
        "type": "Operating System",
        "path": "library/os#os.chflags"
    },
    {
        "name": "os.chmod()",
        "type": "Operating System",
        "path": "library/os#os.chmod"
    },
    {
        "name": "os.chown()",
        "type": "Operating System",
        "path": "library/os#os.chown"
    },
    {
        "name": "os.chroot()",
        "type": "Operating System",
        "path": "library/os#os.chroot"
    },
    {
        "name": "os.close()",
        "type": "Operating System",
        "path": "library/os#os.close"
    },
    {
        "name": "os.closerange()",
        "type": "Operating System",
        "path": "library/os#os.closerange"
    },
    {
        "name": "os.confstr()",
        "type": "Operating System",
        "path": "library/os#os.confstr"
    },
    {
        "name": "os.confstr_names",
        "type": "Operating System",
        "path": "library/os#os.confstr_names"
    },
    {
        "name": "os.cpu_count()",
        "type": "Operating System",
        "path": "library/os#os.cpu_count"
    },
    {
        "name": "os.ctermid()",
        "type": "Operating System",
        "path": "library/os#os.ctermid"
    },
    {
        "name": "os.curdir",
        "type": "Operating System",
        "path": "library/os#os.curdir"
    },
    {
        "name": "os.defpath",
        "type": "Operating System",
        "path": "library/os#os.defpath"
    },
    {
        "name": "os.device_encoding()",
        "type": "Operating System",
        "path": "library/os#os.device_encoding"
    },
    {
        "name": "os.devnull",
        "type": "Operating System",
        "path": "library/os#os.devnull"
    },
    {
        "name": "os.dup()",
        "type": "Operating System",
        "path": "library/os#os.dup"
    },
    {
        "name": "os.dup2()",
        "type": "Operating System",
        "path": "library/os#os.dup2"
    },
    {
        "name": "os.environ",
        "type": "Operating System",
        "path": "library/os#os.environ"
    },
    {
        "name": "os.environb",
        "type": "Operating System",
        "path": "library/os#os.environb"
    },
    {
        "name": "os.error",
        "type": "Operating System",
        "path": "library/os#os.error"
    },
    {
        "name": "os.execl()",
        "type": "Operating System",
        "path": "library/os#os.execl"
    },
    {
        "name": "os.execle()",
        "type": "Operating System",
        "path": "library/os#os.execle"
    },
    {
        "name": "os.execlp()",
        "type": "Operating System",
        "path": "library/os#os.execlp"
    },
    {
        "name": "os.execlpe()",
        "type": "Operating System",
        "path": "library/os#os.execlpe"
    },
    {
        "name": "os.execv()",
        "type": "Operating System",
        "path": "library/os#os.execv"
    },
    {
        "name": "os.execve()",
        "type": "Operating System",
        "path": "library/os#os.execve"
    },
    {
        "name": "os.execvp()",
        "type": "Operating System",
        "path": "library/os#os.execvp"
    },
    {
        "name": "os.execvpe()",
        "type": "Operating System",
        "path": "library/os#os.execvpe"
    },
    {
        "name": "os.extsep",
        "type": "Operating System",
        "path": "library/os#os.extsep"
    },
    {
        "name": "os.fchdir()",
        "type": "Operating System",
        "path": "library/os#os.fchdir"
    },
    {
        "name": "os.fchmod()",
        "type": "Operating System",
        "path": "library/os#os.fchmod"
    },
    {
        "name": "os.fchown()",
        "type": "Operating System",
        "path": "library/os#os.fchown"
    },
    {
        "name": "os.fdatasync()",
        "type": "Operating System",
        "path": "library/os#os.fdatasync"
    },
    {
        "name": "os.fdopen()",
        "type": "Operating System",
        "path": "library/os#os.fdopen"
    },
    {
        "name": "os.fork()",
        "type": "Operating System",
        "path": "library/os#os.fork"
    },
    {
        "name": "os.forkpty()",
        "type": "Operating System",
        "path": "library/os#os.forkpty"
    },
    {
        "name": "os.fpathconf()",
        "type": "Operating System",
        "path": "library/os#os.fpathconf"
    },
    {
        "name": "os.fsdecode()",
        "type": "Operating System",
        "path": "library/os#os.fsdecode"
    },
    {
        "name": "os.fsencode()",
        "type": "Operating System",
        "path": "library/os#os.fsencode"
    },
    {
        "name": "os.fstat()",
        "type": "Operating System",
        "path": "library/os#os.fstat"
    },
    {
        "name": "os.fstatvfs()",
        "type": "Operating System",
        "path": "library/os#os.fstatvfs"
    },
    {
        "name": "os.fsync()",
        "type": "Operating System",
        "path": "library/os#os.fsync"
    },
    {
        "name": "os.ftruncate()",
        "type": "Operating System",
        "path": "library/os#os.ftruncate"
    },
    {
        "name": "os.fwalk()",
        "type": "Operating System",
        "path": "library/os#os.fwalk"
    },
    {
        "name": "os.getcwd()",
        "type": "Operating System",
        "path": "library/os#os.getcwd"
    },
    {
        "name": "os.getcwdb()",
        "type": "Operating System",
        "path": "library/os#os.getcwdb"
    },
    {
        "name": "os.getegid()",
        "type": "Operating System",
        "path": "library/os#os.getegid"
    },
    {
        "name": "os.getenv()",
        "type": "Operating System",
        "path": "library/os#os.getenv"
    },
    {
        "name": "os.getenvb()",
        "type": "Operating System",
        "path": "library/os#os.getenvb"
    },
    {
        "name": "os.geteuid()",
        "type": "Operating System",
        "path": "library/os#os.geteuid"
    },
    {
        "name": "os.getgid()",
        "type": "Operating System",
        "path": "library/os#os.getgid"
    },
    {
        "name": "os.getgrouplist()",
        "type": "Operating System",
        "path": "library/os#os.getgrouplist"
    },
    {
        "name": "os.getgroups()",
        "type": "Operating System",
        "path": "library/os#os.getgroups"
    },
    {
        "name": "os.getloadavg()",
        "type": "Operating System",
        "path": "library/os#os.getloadavg"
    },
    {
        "name": "os.getlogin()",
        "type": "Operating System",
        "path": "library/os#os.getlogin"
    },
    {
        "name": "os.getpgid()",
        "type": "Operating System",
        "path": "library/os#os.getpgid"
    },
    {
        "name": "os.getpgrp()",
        "type": "Operating System",
        "path": "library/os#os.getpgrp"
    },
    {
        "name": "os.getpid()",
        "type": "Operating System",
        "path": "library/os#os.getpid"
    },
    {
        "name": "os.getppid()",
        "type": "Operating System",
        "path": "library/os#os.getppid"
    },
    {
        "name": "os.getpriority()",
        "type": "Operating System",
        "path": "library/os#os.getpriority"
    },
    {
        "name": "os.getresgid()",
        "type": "Operating System",
        "path": "library/os#os.getresgid"
    },
    {
        "name": "os.getresuid()",
        "type": "Operating System",
        "path": "library/os#os.getresuid"
    },
    {
        "name": "os.getsid()",
        "type": "Operating System",
        "path": "library/os#os.getsid"
    },
    {
        "name": "os.getuid()",
        "type": "Operating System",
        "path": "library/os#os.getuid"
    },
    {
        "name": "os.getxattr()",
        "type": "Operating System",
        "path": "library/os#os.getxattr"
    },
    {
        "name": "os.get_exec_path()",
        "type": "Operating System",
        "path": "library/os#os.get_exec_path"
    },
    {
        "name": "os.get_handle_inheritable()",
        "type": "Operating System",
        "path": "library/os#os.get_handle_inheritable"
    },
    {
        "name": "os.get_inheritable()",
        "type": "Operating System",
        "path": "library/os#os.get_inheritable"
    },
    {
        "name": "os.get_terminal_size()",
        "type": "Operating System",
        "path": "library/os#os.get_terminal_size"
    },
    {
        "name": "os.initgroups()",
        "type": "Operating System",
        "path": "library/os#os.initgroups"
    },
    {
        "name": "os.isatty()",
        "type": "Operating System",
        "path": "library/os#os.isatty"
    },
    {
        "name": "os.kill()",
        "type": "Operating System",
        "path": "library/os#os.kill"
    },
    {
        "name": "os.killpg()",
        "type": "Operating System",
        "path": "library/os#os.killpg"
    },
    {
        "name": "os.lchflags()",
        "type": "Operating System",
        "path": "library/os#os.lchflags"
    },
    {
        "name": "os.lchmod()",
        "type": "Operating System",
        "path": "library/os#os.lchmod"
    },
    {
        "name": "os.lchown()",
        "type": "Operating System",
        "path": "library/os#os.lchown"
    },
    {
        "name": "os.linesep",
        "type": "Operating System",
        "path": "library/os#os.linesep"
    },
    {
        "name": "os.link()",
        "type": "Operating System",
        "path": "library/os#os.link"
    },
    {
        "name": "os.listdir()",
        "type": "Operating System",
        "path": "library/os#os.listdir"
    },
    {
        "name": "os.listxattr()",
        "type": "Operating System",
        "path": "library/os#os.listxattr"
    },
    {
        "name": "os.lockf()",
        "type": "Operating System",
        "path": "library/os#os.lockf"
    },
    {
        "name": "os.lseek()",
        "type": "Operating System",
        "path": "library/os#os.lseek"
    },
    {
        "name": "os.lstat()",
        "type": "Operating System",
        "path": "library/os#os.lstat"
    },
    {
        "name": "os.major()",
        "type": "Operating System",
        "path": "library/os#os.major"
    },
    {
        "name": "os.makedev()",
        "type": "Operating System",
        "path": "library/os#os.makedev"
    },
    {
        "name": "os.makedirs()",
        "type": "Operating System",
        "path": "library/os#os.makedirs"
    },
    {
        "name": "os.minor()",
        "type": "Operating System",
        "path": "library/os#os.minor"
    },
    {
        "name": "os.mkdir()",
        "type": "Operating System",
        "path": "library/os#os.mkdir"
    },
    {
        "name": "os.mkfifo()",
        "type": "Operating System",
        "path": "library/os#os.mkfifo"
    },
    {
        "name": "os.mknod()",
        "type": "Operating System",
        "path": "library/os#os.mknod"
    },
    {
        "name": "os.name",
        "type": "Operating System",
        "path": "library/os#os.name"
    },
    {
        "name": "os.nice()",
        "type": "Operating System",
        "path": "library/os#os.nice"
    },
    {
        "name": "os.open()",
        "type": "Operating System",
        "path": "library/os#os.open"
    },
    {
        "name": "os.openpty()",
        "type": "Operating System",
        "path": "library/os#os.openpty"
    },
    {
        "name": "os.pardir",
        "type": "Operating System",
        "path": "library/os#os.pardir"
    },
    {
        "name": "os.path",
        "type": "File & Directory Access",
        "path": "library/os.path"
    },
    {
        "name": "os.path.abspath()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.abspath"
    },
    {
        "name": "os.path.basename()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.basename"
    },
    {
        "name": "os.path.commonprefix()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.commonprefix"
    },
    {
        "name": "os.path.dirname()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.dirname"
    },
    {
        "name": "os.path.exists()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.exists"
    },
    {
        "name": "os.path.expanduser()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.expanduser"
    },
    {
        "name": "os.path.expandvars()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.expandvars"
    },
    {
        "name": "os.path.getatime()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.getatime"
    },
    {
        "name": "os.path.getctime()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.getctime"
    },
    {
        "name": "os.path.getmtime()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.getmtime"
    },
    {
        "name": "os.path.getsize()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.getsize"
    },
    {
        "name": "os.path.isabs()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.isabs"
    },
    {
        "name": "os.path.isdir()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.isdir"
    },
    {
        "name": "os.path.isfile()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.isfile"
    },
    {
        "name": "os.path.islink()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.islink"
    },
    {
        "name": "os.path.ismount()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.ismount"
    },
    {
        "name": "os.path.join()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.join"
    },
    {
        "name": "os.path.lexists()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.lexists"
    },
    {
        "name": "os.path.normcase()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.normcase"
    },
    {
        "name": "os.path.normpath()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.normpath"
    },
    {
        "name": "os.path.realpath()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.realpath"
    },
    {
        "name": "os.path.relpath()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.relpath"
    },
    {
        "name": "os.path.samefile()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.samefile"
    },
    {
        "name": "os.path.sameopenfile()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.sameopenfile"
    },
    {
        "name": "os.path.samestat()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.samestat"
    },
    {
        "name": "os.path.split()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.split"
    },
    {
        "name": "os.path.splitdrive()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.splitdrive"
    },
    {
        "name": "os.path.splitext()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.splitext"
    },
    {
        "name": "os.path.splitunc()",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.splitunc"
    },
    {
        "name": "os.path.supports_unicode_filenames",
        "type": "File & Directory Access",
        "path": "library/os.path#os.path.supports_unicode_filenames"
    },
    {
        "name": "os.pathconf()",
        "type": "Operating System",
        "path": "library/os#os.pathconf"
    },
    {
        "name": "os.pathconf_names",
        "type": "Operating System",
        "path": "library/os#os.pathconf_names"
    },
    {
        "name": "os.pathsep",
        "type": "Operating System",
        "path": "library/os#os.pathsep"
    },
    {
        "name": "os.pipe()",
        "type": "Operating System",
        "path": "library/os#os.pipe"
    },
    {
        "name": "os.pipe2()",
        "type": "Operating System",
        "path": "library/os#os.pipe2"
    },
    {
        "name": "os.plock()",
        "type": "Operating System",
        "path": "library/os#os.plock"
    },
    {
        "name": "os.popen()",
        "type": "Operating System",
        "path": "library/os#os.popen"
    },
    {
        "name": "os.posix_fadvise()",
        "type": "Operating System",
        "path": "library/os#os.posix_fadvise"
    },
    {
        "name": "os.posix_fallocate()",
        "type": "Operating System",
        "path": "library/os#os.posix_fallocate"
    },
    {
        "name": "os.pread()",
        "type": "Operating System",
        "path": "library/os#os.pread"
    },
    {
        "name": "os.putenv()",
        "type": "Operating System",
        "path": "library/os#os.putenv"
    },
    {
        "name": "os.pwrite()",
        "type": "Operating System",
        "path": "library/os#os.pwrite"
    },
    {
        "name": "os.read()",
        "type": "Operating System",
        "path": "library/os#os.read"
    },
    {
        "name": "os.readlink()",
        "type": "Operating System",
        "path": "library/os#os.readlink"
    },
    {
        "name": "os.readv()",
        "type": "Operating System",
        "path": "library/os#os.readv"
    },
    {
        "name": "os.remove()",
        "type": "Operating System",
        "path": "library/os#os.remove"
    },
    {
        "name": "os.removedirs()",
        "type": "Operating System",
        "path": "library/os#os.removedirs"
    },
    {
        "name": "os.removexattr()",
        "type": "Operating System",
        "path": "library/os#os.removexattr"
    },
    {
        "name": "os.rename()",
        "type": "Operating System",
        "path": "library/os#os.rename"
    },
    {
        "name": "os.renames()",
        "type": "Operating System",
        "path": "library/os#os.renames"
    },
    {
        "name": "os.replace()",
        "type": "Operating System",
        "path": "library/os#os.replace"
    },
    {
        "name": "os.rmdir()",
        "type": "Operating System",
        "path": "library/os#os.rmdir"
    },
    {
        "name": "os.sched_getaffinity()",
        "type": "Operating System",
        "path": "library/os#os.sched_getaffinity"
    },
    {
        "name": "os.sched_getparam()",
        "type": "Operating System",
        "path": "library/os#os.sched_getparam"
    },
    {
        "name": "os.sched_getscheduler()",
        "type": "Operating System",
        "path": "library/os#os.sched_getscheduler"
    },
    {
        "name": "os.sched_get_priority_max()",
        "type": "Operating System",
        "path": "library/os#os.sched_get_priority_max"
    },
    {
        "name": "os.sched_get_priority_min()",
        "type": "Operating System",
        "path": "library/os#os.sched_get_priority_min"
    },
    {
        "name": "os.sched_param",
        "type": "Operating System",
        "path": "library/os#os.sched_param"
    },
    {
        "name": "os.sched_param.sched_priority",
        "type": "Operating System",
        "path": "library/os#os.sched_param.sched_priority"
    },
    {
        "name": "os.sched_rr_get_interval()",
        "type": "Operating System",
        "path": "library/os#os.sched_rr_get_interval"
    },
    {
        "name": "os.sched_setaffinity()",
        "type": "Operating System",
        "path": "library/os#os.sched_setaffinity"
    },
    {
        "name": "os.sched_setparam()",
        "type": "Operating System",
        "path": "library/os#os.sched_setparam"
    },
    {
        "name": "os.sched_setscheduler()",
        "type": "Operating System",
        "path": "library/os#os.sched_setscheduler"
    },
    {
        "name": "os.sched_yield()",
        "type": "Operating System",
        "path": "library/os#os.sched_yield"
    },
    {
        "name": "os.sendfile()",
        "type": "Operating System",
        "path": "library/os#os.sendfile"
    },
    {
        "name": "os.sep",
        "type": "Operating System",
        "path": "library/os#os.sep"
    },
    {
        "name": "os.setegid()",
        "type": "Operating System",
        "path": "library/os#os.setegid"
    },
    {
        "name": "os.seteuid()",
        "type": "Operating System",
        "path": "library/os#os.seteuid"
    },
    {
        "name": "os.setgid()",
        "type": "Operating System",
        "path": "library/os#os.setgid"
    },
    {
        "name": "os.setgroups()",
        "type": "Operating System",
        "path": "library/os#os.setgroups"
    },
    {
        "name": "os.setpgid()",
        "type": "Operating System",
        "path": "library/os#os.setpgid"
    },
    {
        "name": "os.setpgrp()",
        "type": "Operating System",
        "path": "library/os#os.setpgrp"
    },
    {
        "name": "os.setpriority()",
        "type": "Operating System",
        "path": "library/os#os.setpriority"
    },
    {
        "name": "os.setregid()",
        "type": "Operating System",
        "path": "library/os#os.setregid"
    },
    {
        "name": "os.setresgid()",
        "type": "Operating System",
        "path": "library/os#os.setresgid"
    },
    {
        "name": "os.setresuid()",
        "type": "Operating System",
        "path": "library/os#os.setresuid"
    },
    {
        "name": "os.setreuid()",
        "type": "Operating System",
        "path": "library/os#os.setreuid"
    },
    {
        "name": "os.setsid()",
        "type": "Operating System",
        "path": "library/os#os.setsid"
    },
    {
        "name": "os.setuid()",
        "type": "Operating System",
        "path": "library/os#os.setuid"
    },
    {
        "name": "os.setxattr()",
        "type": "Operating System",
        "path": "library/os#os.setxattr"
    },
    {
        "name": "os.set_handle_inheritable()",
        "type": "Operating System",
        "path": "library/os#os.set_handle_inheritable"
    },
    {
        "name": "os.set_inheritable()",
        "type": "Operating System",
        "path": "library/os#os.set_inheritable"
    },
    {
        "name": "os.spawnl()",
        "type": "Operating System",
        "path": "library/os#os.spawnl"
    },
    {
        "name": "os.spawnle()",
        "type": "Operating System",
        "path": "library/os#os.spawnle"
    },
    {
        "name": "os.spawnlp()",
        "type": "Operating System",
        "path": "library/os#os.spawnlp"
    },
    {
        "name": "os.spawnlpe()",
        "type": "Operating System",
        "path": "library/os#os.spawnlpe"
    },
    {
        "name": "os.spawnv()",
        "type": "Operating System",
        "path": "library/os#os.spawnv"
    },
    {
        "name": "os.spawnve()",
        "type": "Operating System",
        "path": "library/os#os.spawnve"
    },
    {
        "name": "os.spawnvp()",
        "type": "Operating System",
        "path": "library/os#os.spawnvp"
    },
    {
        "name": "os.spawnvpe()",
        "type": "Operating System",
        "path": "library/os#os.spawnvpe"
    },
    {
        "name": "os.startfile()",
        "type": "Operating System",
        "path": "library/os#os.startfile"
    },
    {
        "name": "os.stat()",
        "type": "Operating System",
        "path": "library/os#os.stat"
    },
    {
        "name": "os.statvfs()",
        "type": "Operating System",
        "path": "library/os#os.statvfs"
    },
    {
        "name": "os.stat_float_times()",
        "type": "Operating System",
        "path": "library/os#os.stat_float_times"
    },
    {
        "name": "os.stat_result",
        "type": "Operating System",
        "path": "library/os#os.stat_result"
    },
    {
        "name": "os.stat_result.st_atime",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_atime"
    },
    {
        "name": "os.stat_result.st_atime_ns",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_atime_ns"
    },
    {
        "name": "os.stat_result.st_birthtime",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_birthtime"
    },
    {
        "name": "os.stat_result.st_blksize",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_blksize"
    },
    {
        "name": "os.stat_result.st_blocks",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_blocks"
    },
    {
        "name": "os.stat_result.st_creator",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_creator"
    },
    {
        "name": "os.stat_result.st_ctime",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_ctime"
    },
    {
        "name": "os.stat_result.st_ctime_ns",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_ctime_ns"
    },
    {
        "name": "os.stat_result.st_dev",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_dev"
    },
    {
        "name": "os.stat_result.st_flags",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_flags"
    },
    {
        "name": "os.stat_result.st_gen",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_gen"
    },
    {
        "name": "os.stat_result.st_gid",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_gid"
    },
    {
        "name": "os.stat_result.st_ino",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_ino"
    },
    {
        "name": "os.stat_result.st_mode",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_mode"
    },
    {
        "name": "os.stat_result.st_mtime",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_mtime"
    },
    {
        "name": "os.stat_result.st_mtime_ns",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_mtime_ns"
    },
    {
        "name": "os.stat_result.st_nlink",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_nlink"
    },
    {
        "name": "os.stat_result.st_rdev",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_rdev"
    },
    {
        "name": "os.stat_result.st_rsize",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_rsize"
    },
    {
        "name": "os.stat_result.st_size",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_size"
    },
    {
        "name": "os.stat_result.st_type",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_type"
    },
    {
        "name": "os.stat_result.st_uid",
        "type": "Operating System",
        "path": "library/os#os.stat_result.st_uid"
    },
    {
        "name": "os.strerror()",
        "type": "Operating System",
        "path": "library/os#os.strerror"
    },
    {
        "name": "os.supports_bytes_environ",
        "type": "Operating System",
        "path": "library/os#os.supports_bytes_environ"
    },
    {
        "name": "os.supports_dir_fd",
        "type": "Operating System",
        "path": "library/os#os.supports_dir_fd"
    },
    {
        "name": "os.supports_effective_ids",
        "type": "Operating System",
        "path": "library/os#os.supports_effective_ids"
    },
    {
        "name": "os.supports_fd",
        "type": "Operating System",
        "path": "library/os#os.supports_fd"
    },
    {
        "name": "os.supports_follow_symlinks",
        "type": "Operating System",
        "path": "library/os#os.supports_follow_symlinks"
    },
    {
        "name": "os.symlink()",
        "type": "Operating System",
        "path": "library/os#os.symlink"
    },
    {
        "name": "os.sync()",
        "type": "Operating System",
        "path": "library/os#os.sync"
    },
    {
        "name": "os.sysconf()",
        "type": "Operating System",
        "path": "library/os#os.sysconf"
    },
    {
        "name": "os.sysconf_names",
        "type": "Operating System",
        "path": "library/os#os.sysconf_names"
    },
    {
        "name": "os.system()",
        "type": "Operating System",
        "path": "library/os#os.system"
    },
    {
        "name": "os.tcgetpgrp()",
        "type": "Operating System",
        "path": "library/os#os.tcgetpgrp"
    },
    {
        "name": "os.tcsetpgrp()",
        "type": "Operating System",
        "path": "library/os#os.tcsetpgrp"
    },
    {
        "name": "os.terminal_size",
        "type": "Operating System",
        "path": "library/os#os.terminal_size"
    },
    {
        "name": "os.terminal_size.columns",
        "type": "Operating System",
        "path": "library/os#os.terminal_size.columns"
    },
    {
        "name": "os.terminal_size.lines",
        "type": "Operating System",
        "path": "library/os#os.terminal_size.lines"
    },
    {
        "name": "os.times()",
        "type": "Operating System",
        "path": "library/os#os.times"
    },
    {
        "name": "os.truncate()",
        "type": "Operating System",
        "path": "library/os#os.truncate"
    },
    {
        "name": "os.ttyname()",
        "type": "Operating System",
        "path": "library/os#os.ttyname"
    },
    {
        "name": "os.umask()",
        "type": "Operating System",
        "path": "library/os#os.umask"
    },
    {
        "name": "os.uname()",
        "type": "Operating System",
        "path": "library/os#os.uname"
    },
    {
        "name": "os.unlink()",
        "type": "Operating System",
        "path": "library/os#os.unlink"
    },
    {
        "name": "os.unsetenv()",
        "type": "Operating System",
        "path": "library/os#os.unsetenv"
    },
    {
        "name": "os.urandom()",
        "type": "Operating System",
        "path": "library/os#os.urandom"
    },
    {
        "name": "os.utime()",
        "type": "Operating System",
        "path": "library/os#os.utime"
    },
    {
        "name": "os.wait()",
        "type": "Operating System",
        "path": "library/os#os.wait"
    },
    {
        "name": "os.wait3()",
        "type": "Operating System",
        "path": "library/os#os.wait3"
    },
    {
        "name": "os.wait4()",
        "type": "Operating System",
        "path": "library/os#os.wait4"
    },
    {
        "name": "os.waitid()",
        "type": "Operating System",
        "path": "library/os#os.waitid"
    },
    {
        "name": "os.waitpid()",
        "type": "Operating System",
        "path": "library/os#os.waitpid"
    },
    {
        "name": "os.walk()",
        "type": "Operating System",
        "path": "library/os#os.walk"
    },
    {
        "name": "os.WCOREDUMP()",
        "type": "Operating System",
        "path": "library/os#os.WCOREDUMP"
    },
    {
        "name": "os.WEXITSTATUS()",
        "type": "Operating System",
        "path": "library/os#os.WEXITSTATUS"
    },
    {
        "name": "os.WIFCONTINUED()",
        "type": "Operating System",
        "path": "library/os#os.WIFCONTINUED"
    },
    {
        "name": "os.WIFEXITED()",
        "type": "Operating System",
        "path": "library/os#os.WIFEXITED"
    },
    {
        "name": "os.WIFSIGNALED()",
        "type": "Operating System",
        "path": "library/os#os.WIFSIGNALED"
    },
    {
        "name": "os.WIFSTOPPED()",
        "type": "Operating System",
        "path": "library/os#os.WIFSTOPPED"
    },
    {
        "name": "os.write()",
        "type": "Operating System",
        "path": "library/os#os.write"
    },
    {
        "name": "os.writev()",
        "type": "Operating System",
        "path": "library/os#os.writev"
    },
    {
        "name": "os.WSTOPSIG()",
        "type": "Operating System",
        "path": "library/os#os.WSTOPSIG"
    },
    {
        "name": "os.WTERMSIG()",
        "type": "Operating System",
        "path": "library/os#os.WTERMSIG"
    },
    {
        "name": "os._exit()",
        "type": "Operating System",
        "path": "library/os#os._exit"
    },
    {
        "name": "OSError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#OSError"
    },
    {
        "name": "ossaudiodev",
        "type": "Multimedia",
        "path": "library/ossaudiodev"
    },
    {
        "name": "ossaudiodev.open()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.open"
    },
    {
        "name": "ossaudiodev.openmixer()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.openmixer"
    },
    {
        "name": "ossaudiodev.OSSAudioError",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.OSSAudioError"
    },
    {
        "name": "ossaudiodev.oss_audio_device.bufsize()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.bufsize"
    },
    {
        "name": "ossaudiodev.oss_audio_device.channels()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.channels"
    },
    {
        "name": "ossaudiodev.oss_audio_device.close()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.close"
    },
    {
        "name": "ossaudiodev.oss_audio_device.closed",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.closed"
    },
    {
        "name": "ossaudiodev.oss_audio_device.fileno()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.fileno"
    },
    {
        "name": "ossaudiodev.oss_audio_device.getfmts()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.getfmts"
    },
    {
        "name": "ossaudiodev.oss_audio_device.mode",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.mode"
    },
    {
        "name": "ossaudiodev.oss_audio_device.name",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.name"
    },
    {
        "name": "ossaudiodev.oss_audio_device.nonblock()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.nonblock"
    },
    {
        "name": "ossaudiodev.oss_audio_device.obufcount()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.obufcount"
    },
    {
        "name": "ossaudiodev.oss_audio_device.obuffree()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.obuffree"
    },
    {
        "name": "ossaudiodev.oss_audio_device.post()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.post"
    },
    {
        "name": "ossaudiodev.oss_audio_device.read()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.read"
    },
    {
        "name": "ossaudiodev.oss_audio_device.reset()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.reset"
    },
    {
        "name": "ossaudiodev.oss_audio_device.setfmt()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.setfmt"
    },
    {
        "name": "ossaudiodev.oss_audio_device.setparameters()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.setparameters"
    },
    {
        "name": "ossaudiodev.oss_audio_device.speed()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.speed"
    },
    {
        "name": "ossaudiodev.oss_audio_device.sync()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.sync"
    },
    {
        "name": "ossaudiodev.oss_audio_device.write()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.write"
    },
    {
        "name": "ossaudiodev.oss_audio_device.writeall()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_audio_device.writeall"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.close()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.close"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.controls()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.controls"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.fileno()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.fileno"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.get()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.get"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.get_recsrc()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.get_recsrc"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.reccontrols()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.reccontrols"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.set()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.set"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.set_recsrc()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.set_recsrc"
    },
    {
        "name": "ossaudiodev.oss_mixer_device.stereocontrols()",
        "type": "Multimedia",
        "path": "library/ossaudiodev#ossaudiodev.oss_mixer_device.stereocontrols"
    },
    {
        "name": "Other Graphical User Interface Packages",
        "type": "Tk",
        "path": "library/othergui"
    },
    {
        "name": "OverflowError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#OverflowError"
    },
    {
        "name": "pathlib",
        "type": "File & Directory Access",
        "path": "library/pathlib"
    },
    {
        "name": "pathlib.Path",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path"
    },
    {
        "name": "pathlib.Path.chmod()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.chmod"
    },
    {
        "name": "pathlib.Path.cwd()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.cwd"
    },
    {
        "name": "pathlib.Path.exists()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.exists"
    },
    {
        "name": "pathlib.Path.glob()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.glob"
    },
    {
        "name": "pathlib.Path.group()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.group"
    },
    {
        "name": "pathlib.Path.is_block_device()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_block_device"
    },
    {
        "name": "pathlib.Path.is_char_device()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_char_device"
    },
    {
        "name": "pathlib.Path.is_dir()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_dir"
    },
    {
        "name": "pathlib.Path.is_fifo()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_fifo"
    },
    {
        "name": "pathlib.Path.is_file()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_file"
    },
    {
        "name": "pathlib.Path.is_socket()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_socket"
    },
    {
        "name": "pathlib.Path.is_symlink()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.is_symlink"
    },
    {
        "name": "pathlib.Path.iterdir()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.iterdir"
    },
    {
        "name": "pathlib.Path.lchmod()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.lchmod"
    },
    {
        "name": "pathlib.Path.lstat()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.lstat"
    },
    {
        "name": "pathlib.Path.mkdir()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.mkdir"
    },
    {
        "name": "pathlib.Path.open()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.open"
    },
    {
        "name": "pathlib.Path.owner()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.owner"
    },
    {
        "name": "pathlib.Path.rename()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.rename"
    },
    {
        "name": "pathlib.Path.replace()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.replace"
    },
    {
        "name": "pathlib.Path.resolve()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.resolve"
    },
    {
        "name": "pathlib.Path.rglob()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.rglob"
    },
    {
        "name": "pathlib.Path.rmdir()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.rmdir"
    },
    {
        "name": "pathlib.Path.stat()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.stat"
    },
    {
        "name": "pathlib.Path.symlink_to()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.symlink_to"
    },
    {
        "name": "pathlib.Path.touch()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.touch"
    },
    {
        "name": "pathlib.Path.unlink()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.Path.unlink"
    },
    {
        "name": "pathlib.PosixPath",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PosixPath"
    },
    {
        "name": "pathlib.PurePath",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath"
    },
    {
        "name": "pathlib.PurePath.anchor",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.anchor"
    },
    {
        "name": "pathlib.PurePath.as_posix()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.as_posix"
    },
    {
        "name": "pathlib.PurePath.as_uri()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.as_uri"
    },
    {
        "name": "pathlib.PurePath.drive",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.drive"
    },
    {
        "name": "pathlib.PurePath.is_absolute()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.is_absolute"
    },
    {
        "name": "pathlib.PurePath.is_reserved()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.is_reserved"
    },
    {
        "name": "pathlib.PurePath.joinpath()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.joinpath"
    },
    {
        "name": "pathlib.PurePath.match()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.match"
    },
    {
        "name": "pathlib.PurePath.name",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.name"
    },
    {
        "name": "pathlib.PurePath.parent",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.parent"
    },
    {
        "name": "pathlib.PurePath.parents",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.parents"
    },
    {
        "name": "pathlib.PurePath.parts",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.parts"
    },
    {
        "name": "pathlib.PurePath.relative_to()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.relative_to"
    },
    {
        "name": "pathlib.PurePath.root",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.root"
    },
    {
        "name": "pathlib.PurePath.stem",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.stem"
    },
    {
        "name": "pathlib.PurePath.suffix",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.suffix"
    },
    {
        "name": "pathlib.PurePath.suffixes",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.suffixes"
    },
    {
        "name": "pathlib.PurePath.with_name()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.with_name"
    },
    {
        "name": "pathlib.PurePath.with_suffix()",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePath.with_suffix"
    },
    {
        "name": "pathlib.PurePosixPath",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PurePosixPath"
    },
    {
        "name": "pathlib.PureWindowsPath",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.PureWindowsPath"
    },
    {
        "name": "pathlib.WindowsPath",
        "type": "File & Directory Access",
        "path": "library/pathlib#pathlib.WindowsPath"
    },
    {
        "name": "pdb",
        "type": "Debugging & Profiling",
        "path": "library/pdb"
    },
    {
        "name": "pdb.Pdb",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.Pdb"
    },
    {
        "name": "pdb.Pdb.run()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.Pdb.run"
    },
    {
        "name": "pdb.Pdb.runcall()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.Pdb.runcall"
    },
    {
        "name": "pdb.Pdb.runeval()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.Pdb.runeval"
    },
    {
        "name": "pdb.Pdb.set_trace()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.Pdb.set_trace"
    },
    {
        "name": "pdb.pm()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.pm"
    },
    {
        "name": "pdb.post_mortem()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.post_mortem"
    },
    {
        "name": "pdb.run()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.run"
    },
    {
        "name": "pdb.runcall()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.runcall"
    },
    {
        "name": "pdb.runeval()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.runeval"
    },
    {
        "name": "pdb.set_trace()",
        "type": "Debugging & Profiling",
        "path": "library/pdb#pdb.set_trace"
    },
    {
        "name": "PendingDeprecationWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#PendingDeprecationWarning"
    },
    {
        "name": "PermissionError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#PermissionError"
    },
    {
        "name": "pickle",
        "type": "Data Persistence",
        "path": "library/pickle"
    },
    {
        "name": "pickle.dump()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.dump"
    },
    {
        "name": "pickle.dumps()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.dumps"
    },
    {
        "name": "pickle.load()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.load"
    },
    {
        "name": "pickle.loads()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.loads"
    },
    {
        "name": "pickle.PickleError",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.PickleError"
    },
    {
        "name": "pickle.Pickler",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Pickler"
    },
    {
        "name": "pickle.Pickler.dispatch_table",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Pickler.dispatch_table"
    },
    {
        "name": "pickle.Pickler.dump()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Pickler.dump"
    },
    {
        "name": "pickle.Pickler.fast",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Pickler.fast"
    },
    {
        "name": "pickle.Pickler.persistent_id()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Pickler.persistent_id"
    },
    {
        "name": "pickle.PicklingError",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.PicklingError"
    },
    {
        "name": "pickle.Unpickler",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Unpickler"
    },
    {
        "name": "pickle.Unpickler.find_class()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Unpickler.find_class"
    },
    {
        "name": "pickle.Unpickler.load()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Unpickler.load"
    },
    {
        "name": "pickle.Unpickler.persistent_load()",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.Unpickler.persistent_load"
    },
    {
        "name": "pickle.UnpicklingError",
        "type": "Data Persistence",
        "path": "library/pickle#pickle.UnpicklingError"
    },
    {
        "name": "pipes",
        "type": "Unix",
        "path": "library/pipes"
    },
    {
        "name": "pipes.Template",
        "type": "Unix",
        "path": "library/pipes#pipes.Template"
    },
    {
        "name": "pipes.Template.append()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.append"
    },
    {
        "name": "pipes.Template.clone()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.clone"
    },
    {
        "name": "pipes.Template.copy()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.copy"
    },
    {
        "name": "pipes.Template.debug()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.debug"
    },
    {
        "name": "pipes.Template.open()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.open"
    },
    {
        "name": "pipes.Template.prepend()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.prepend"
    },
    {
        "name": "pipes.Template.reset()",
        "type": "Unix",
        "path": "library/pipes#pipes.Template.reset"
    },
    {
        "name": "pkgutil",
        "type": "Importing",
        "path": "library/pkgutil"
    },
    {
        "name": "pkgutil.extend_path()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.extend_path"
    },
    {
        "name": "pkgutil.find_loader()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.find_loader"
    },
    {
        "name": "pkgutil.get_data()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.get_data"
    },
    {
        "name": "pkgutil.get_importer()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.get_importer"
    },
    {
        "name": "pkgutil.get_loader()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.get_loader"
    },
    {
        "name": "pkgutil.ImpImporter",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.ImpImporter"
    },
    {
        "name": "pkgutil.ImpLoader",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.ImpLoader"
    },
    {
        "name": "pkgutil.iter_importers()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.iter_importers"
    },
    {
        "name": "pkgutil.iter_modules()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.iter_modules"
    },
    {
        "name": "pkgutil.walk_packages()",
        "type": "Importing",
        "path": "library/pkgutil#pkgutil.walk_packages"
    },
    {
        "name": "platform",
        "type": "Operating System",
        "path": "library/platform"
    },
    {
        "name": "platform.architecture()",
        "type": "Operating System",
        "path": "library/platform#platform.architecture"
    },
    {
        "name": "platform.dist()",
        "type": "Operating System",
        "path": "library/platform#platform.dist"
    },
    {
        "name": "platform.java_ver()",
        "type": "Operating System",
        "path": "library/platform#platform.java_ver"
    },
    {
        "name": "platform.libc_ver()",
        "type": "Operating System",
        "path": "library/platform#platform.libc_ver"
    },
    {
        "name": "platform.linux_distribution()",
        "type": "Operating System",
        "path": "library/platform#platform.linux_distribution"
    },
    {
        "name": "platform.machine()",
        "type": "Operating System",
        "path": "library/platform#platform.machine"
    },
    {
        "name": "platform.mac_ver()",
        "type": "Operating System",
        "path": "library/platform#platform.mac_ver"
    },
    {
        "name": "platform.node()",
        "type": "Operating System",
        "path": "library/platform#platform.node"
    },
    {
        "name": "platform.platform()",
        "type": "Operating System",
        "path": "library/platform#platform.platform"
    },
    {
        "name": "platform.popen()",
        "type": "Operating System",
        "path": "library/platform#platform.popen"
    },
    {
        "name": "platform.processor()",
        "type": "Operating System",
        "path": "library/platform#platform.processor"
    },
    {
        "name": "platform.python_branch()",
        "type": "Operating System",
        "path": "library/platform#platform.python_branch"
    },
    {
        "name": "platform.python_build()",
        "type": "Operating System",
        "path": "library/platform#platform.python_build"
    },
    {
        "name": "platform.python_compiler()",
        "type": "Operating System",
        "path": "library/platform#platform.python_compiler"
    },
    {
        "name": "platform.python_implementation()",
        "type": "Operating System",
        "path": "library/platform#platform.python_implementation"
    },
    {
        "name": "platform.python_revision()",
        "type": "Operating System",
        "path": "library/platform#platform.python_revision"
    },
    {
        "name": "platform.python_version()",
        "type": "Operating System",
        "path": "library/platform#platform.python_version"
    },
    {
        "name": "platform.python_version_tuple()",
        "type": "Operating System",
        "path": "library/platform#platform.python_version_tuple"
    },
    {
        "name": "platform.release()",
        "type": "Operating System",
        "path": "library/platform#platform.release"
    },
    {
        "name": "platform.system()",
        "type": "Operating System",
        "path": "library/platform#platform.system"
    },
    {
        "name": "platform.system_alias()",
        "type": "Operating System",
        "path": "library/platform#platform.system_alias"
    },
    {
        "name": "platform.uname()",
        "type": "Operating System",
        "path": "library/platform#platform.uname"
    },
    {
        "name": "platform.version()",
        "type": "Operating System",
        "path": "library/platform#platform.version"
    },
    {
        "name": "platform.win32_ver()",
        "type": "Operating System",
        "path": "library/platform#platform.win32_ver"
    },
    {
        "name": "plistlib",
        "type": "File Formats",
        "path": "library/plistlib"
    },
    {
        "name": "plistlib.Data",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.Data"
    },
    {
        "name": "plistlib.dump()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.dump"
    },
    {
        "name": "plistlib.dumps()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.dumps"
    },
    {
        "name": "plistlib.load()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.load"
    },
    {
        "name": "plistlib.loads()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.loads"
    },
    {
        "name": "plistlib.readPlist()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.readPlist"
    },
    {
        "name": "plistlib.readPlistFromBytes()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.readPlistFromBytes"
    },
    {
        "name": "plistlib.writePlist()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.writePlist"
    },
    {
        "name": "plistlib.writePlistToBytes()",
        "type": "File Formats",
        "path": "library/plistlib#plistlib.writePlistToBytes"
    },
    {
        "name": "poplib",
        "type": "Internet",
        "path": "library/poplib"
    },
    {
        "name": "poplib.error_proto",
        "type": "Internet",
        "path": "library/poplib#poplib.error_proto"
    },
    {
        "name": "poplib.POP3",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3"
    },
    {
        "name": "poplib.POP3.apop()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.apop"
    },
    {
        "name": "poplib.POP3.capa()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.capa"
    },
    {
        "name": "poplib.POP3.dele()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.dele"
    },
    {
        "name": "poplib.POP3.getwelcome()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.getwelcome"
    },
    {
        "name": "poplib.POP3.list()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.list"
    },
    {
        "name": "poplib.POP3.noop()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.noop"
    },
    {
        "name": "poplib.POP3.pass_()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.pass_"
    },
    {
        "name": "poplib.POP3.quit()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.quit"
    },
    {
        "name": "poplib.POP3.retr()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.retr"
    },
    {
        "name": "poplib.POP3.rpop()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.rpop"
    },
    {
        "name": "poplib.POP3.rset()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.rset"
    },
    {
        "name": "poplib.POP3.set_debuglevel()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.set_debuglevel"
    },
    {
        "name": "poplib.POP3.stat()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.stat"
    },
    {
        "name": "poplib.POP3.stls()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.stls"
    },
    {
        "name": "poplib.POP3.top()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.top"
    },
    {
        "name": "poplib.POP3.uidl()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.uidl"
    },
    {
        "name": "poplib.POP3.user()",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3.user"
    },
    {
        "name": "poplib.POP3_SSL",
        "type": "Internet",
        "path": "library/poplib#poplib.POP3_SSL"
    },
    {
        "name": "posix",
        "type": "Unix",
        "path": "library/posix"
    },
    {
        "name": "posix.environ",
        "type": "Unix",
        "path": "library/posix#posix.environ"
    },
    {
        "name": "pow()",
        "type": "Built-in Functions",
        "path": "library/functions#pow"
    },
    {
        "name": "pprint",
        "type": "Data Types",
        "path": "library/pprint"
    },
    {
        "name": "pprint.isreadable()",
        "type": "Data Types",
        "path": "library/pprint#pprint.isreadable"
    },
    {
        "name": "pprint.isrecursive()",
        "type": "Data Types",
        "path": "library/pprint#pprint.isrecursive"
    },
    {
        "name": "pprint.pformat()",
        "type": "Data Types",
        "path": "library/pprint#pprint.pformat"
    },
    {
        "name": "pprint.pprint()",
        "type": "Data Types",
        "path": "library/pprint#pprint.pprint"
    },
    {
        "name": "pprint.PrettyPrinter",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter"
    },
    {
        "name": "pprint.PrettyPrinter.format()",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter.format"
    },
    {
        "name": "pprint.PrettyPrinter.isreadable()",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter.isreadable"
    },
    {
        "name": "pprint.PrettyPrinter.isrecursive()",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter.isrecursive"
    },
    {
        "name": "pprint.PrettyPrinter.pformat()",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter.pformat"
    },
    {
        "name": "pprint.PrettyPrinter.pprint()",
        "type": "Data Types",
        "path": "library/pprint#pprint.PrettyPrinter.pprint"
    },
    {
        "name": "pprint.saferepr()",
        "type": "Data Types",
        "path": "library/pprint#pprint.saferepr"
    },
    {
        "name": "print()",
        "type": "Built-in Functions",
        "path": "library/functions#print"
    },
    {
        "name": "ProcessLookupError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ProcessLookupError"
    },
    {
        "name": "profile.Profile",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile"
    },
    {
        "name": "profile.Profile.create_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.create_stats"
    },
    {
        "name": "profile.Profile.disable()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.disable"
    },
    {
        "name": "profile.Profile.dump_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.dump_stats"
    },
    {
        "name": "profile.Profile.enable()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.enable"
    },
    {
        "name": "profile.Profile.print_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.print_stats"
    },
    {
        "name": "profile.Profile.run()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.run"
    },
    {
        "name": "profile.Profile.runcall()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.runcall"
    },
    {
        "name": "profile.Profile.runctx()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.Profile.runctx"
    },
    {
        "name": "profile.run()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.run"
    },
    {
        "name": "profile.runctx()",
        "type": "Debugging & Profiling",
        "path": "library/profile#profile.runctx"
    },
    {
        "name": "property",
        "type": "Built-in Functions",
        "path": "library/functions#property"
    },
    {
        "name": "pstats.Stats",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats"
    },
    {
        "name": "pstats.Stats.add()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.add"
    },
    {
        "name": "pstats.Stats.dump_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.dump_stats"
    },
    {
        "name": "pstats.Stats.print_callees()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.print_callees"
    },
    {
        "name": "pstats.Stats.print_callers()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.print_callers"
    },
    {
        "name": "pstats.Stats.print_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.print_stats"
    },
    {
        "name": "pstats.Stats.reverse_order()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.reverse_order"
    },
    {
        "name": "pstats.Stats.sort_stats()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.sort_stats"
    },
    {
        "name": "pstats.Stats.strip_dirs()",
        "type": "Debugging & Profiling",
        "path": "library/profile#pstats.Stats.strip_dirs"
    },
    {
        "name": "pty",
        "type": "Unix",
        "path": "library/pty"
    },
    {
        "name": "pty.fork()",
        "type": "Unix",
        "path": "library/pty#pty.fork"
    },
    {
        "name": "pty.openpty()",
        "type": "Unix",
        "path": "library/pty#pty.openpty"
    },
    {
        "name": "pty.spawn()",
        "type": "Unix",
        "path": "library/pty#pty.spawn"
    },
    {
        "name": "pwd",
        "type": "Unix",
        "path": "library/pwd"
    },
    {
        "name": "pwd.getpwall()",
        "type": "Unix",
        "path": "library/pwd#pwd.getpwall"
    },
    {
        "name": "pwd.getpwnam()",
        "type": "Unix",
        "path": "library/pwd#pwd.getpwnam"
    },
    {
        "name": "pwd.getpwuid()",
        "type": "Unix",
        "path": "library/pwd#pwd.getpwuid"
    },
    {
        "name": "pydoc",
        "type": "Development Tools",
        "path": "library/pydoc"
    },
    {
        "name": "queue",
        "type": "Concurrent Execution",
        "path": "library/queue"
    },
    {
        "name": "queue.Empty",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Empty"
    },
    {
        "name": "queue.Full",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Full"
    },
    {
        "name": "queue.LifoQueue",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.LifoQueue"
    },
    {
        "name": "queue.PriorityQueue",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.PriorityQueue"
    },
    {
        "name": "queue.Queue",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue"
    },
    {
        "name": "queue.Queue.empty()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.empty"
    },
    {
        "name": "queue.Queue.full()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.full"
    },
    {
        "name": "queue.Queue.get()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.get"
    },
    {
        "name": "queue.Queue.get_nowait()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.get_nowait"
    },
    {
        "name": "queue.Queue.join()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.join"
    },
    {
        "name": "queue.Queue.put()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.put"
    },
    {
        "name": "queue.Queue.put_nowait()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.put_nowait"
    },
    {
        "name": "queue.Queue.qsize()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.qsize"
    },
    {
        "name": "queue.Queue.task_done()",
        "type": "Concurrent Execution",
        "path": "library/queue#queue.Queue.task_done"
    },
    {
        "name": "Queues",
        "type": "Input/ouput",
        "path": "library/asyncio-queue"
    },
    {
        "name": "quit",
        "type": "Built-in Constants",
        "path": "library/constants#quit"
    },
    {
        "name": "quopri",
        "type": "Internet Data",
        "path": "library/quopri"
    },
    {
        "name": "quopri.decode()",
        "type": "Internet Data",
        "path": "library/quopri#quopri.decode"
    },
    {
        "name": "quopri.decodestring()",
        "type": "Internet Data",
        "path": "library/quopri#quopri.decodestring"
    },
    {
        "name": "quopri.encode()",
        "type": "Internet Data",
        "path": "library/quopri#quopri.encode"
    },
    {
        "name": "quopri.encodestring()",
        "type": "Internet Data",
        "path": "library/quopri#quopri.encodestring"
    },
    {
        "name": "random",
        "type": "Numeric & Mathematical",
        "path": "library/random"
    },
    {
        "name": "random.betavariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.betavariate"
    },
    {
        "name": "random.choice()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.choice"
    },
    {
        "name": "random.expovariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.expovariate"
    },
    {
        "name": "random.gammavariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.gammavariate"
    },
    {
        "name": "random.gauss()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.gauss"
    },
    {
        "name": "random.getrandbits()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.getrandbits"
    },
    {
        "name": "random.getstate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.getstate"
    },
    {
        "name": "random.lognormvariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.lognormvariate"
    },
    {
        "name": "random.normalvariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.normalvariate"
    },
    {
        "name": "random.paretovariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.paretovariate"
    },
    {
        "name": "random.randint()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.randint"
    },
    {
        "name": "random.random()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.random"
    },
    {
        "name": "random.randrange()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.randrange"
    },
    {
        "name": "random.sample()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.sample"
    },
    {
        "name": "random.seed()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.seed"
    },
    {
        "name": "random.setstate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.setstate"
    },
    {
        "name": "random.shuffle()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.shuffle"
    },
    {
        "name": "random.SystemRandom",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.SystemRandom"
    },
    {
        "name": "random.triangular()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.triangular"
    },
    {
        "name": "random.uniform()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.uniform"
    },
    {
        "name": "random.vonmisesvariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.vonmisesvariate"
    },
    {
        "name": "random.weibullvariate()",
        "type": "Numeric & Mathematical",
        "path": "library/random#random.weibullvariate"
    },
    {
        "name": "range",
        "type": "Built-in Types",
        "path": "library/stdtypes#range"
    },
    {
        "name": "range()",
        "type": "Built-in Functions",
        "path": "library/functions#range"
    },
    {
        "name": "re",
        "type": "Text Processing",
        "path": "library/re"
    },
    {
        "name": "re.compile()",
        "type": "Text Processing",
        "path": "library/re#re.compile"
    },
    {
        "name": "re.error",
        "type": "Text Processing",
        "path": "library/re#re.error"
    },
    {
        "name": "re.escape()",
        "type": "Text Processing",
        "path": "library/re#re.escape"
    },
    {
        "name": "re.findall()",
        "type": "Text Processing",
        "path": "library/re#re.findall"
    },
    {
        "name": "re.finditer()",
        "type": "Text Processing",
        "path": "library/re#re.finditer"
    },
    {
        "name": "re.fullmatch()",
        "type": "Text Processing",
        "path": "library/re#re.fullmatch"
    },
    {
        "name": "re.match()",
        "type": "Text Processing",
        "path": "library/re#re.match"
    },
    {
        "name": "re.match.end()",
        "type": "Text Processing",
        "path": "library/re#re.match.end"
    },
    {
        "name": "re.match.endpos",
        "type": "Text Processing",
        "path": "library/re#re.match.endpos"
    },
    {
        "name": "re.match.expand()",
        "type": "Text Processing",
        "path": "library/re#re.match.expand"
    },
    {
        "name": "re.match.group()",
        "type": "Text Processing",
        "path": "library/re#re.match.group"
    },
    {
        "name": "re.match.groupdict()",
        "type": "Text Processing",
        "path": "library/re#re.match.groupdict"
    },
    {
        "name": "re.match.groups()",
        "type": "Text Processing",
        "path": "library/re#re.match.groups"
    },
    {
        "name": "re.match.lastgroup",
        "type": "Text Processing",
        "path": "library/re#re.match.lastgroup"
    },
    {
        "name": "re.match.lastindex",
        "type": "Text Processing",
        "path": "library/re#re.match.lastindex"
    },
    {
        "name": "re.match.pos",
        "type": "Text Processing",
        "path": "library/re#re.match.pos"
    },
    {
        "name": "re.match.re",
        "type": "Text Processing",
        "path": "library/re#re.match.re"
    },
    {
        "name": "re.match.span()",
        "type": "Text Processing",
        "path": "library/re#re.match.span"
    },
    {
        "name": "re.match.start()",
        "type": "Text Processing",
        "path": "library/re#re.match.start"
    },
    {
        "name": "re.match.string",
        "type": "Text Processing",
        "path": "library/re#re.match.string"
    },
    {
        "name": "re.purge()",
        "type": "Text Processing",
        "path": "library/re#re.purge"
    },
    {
        "name": "re.regex.findall()",
        "type": "Text Processing",
        "path": "library/re#re.regex.findall"
    },
    {
        "name": "re.regex.finditer()",
        "type": "Text Processing",
        "path": "library/re#re.regex.finditer"
    },
    {
        "name": "re.regex.flags",
        "type": "Text Processing",
        "path": "library/re#re.regex.flags"
    },
    {
        "name": "re.regex.fullmatch()",
        "type": "Text Processing",
        "path": "library/re#re.regex.fullmatch"
    },
    {
        "name": "re.regex.groupindex",
        "type": "Text Processing",
        "path": "library/re#re.regex.groupindex"
    },
    {
        "name": "re.regex.groups",
        "type": "Text Processing",
        "path": "library/re#re.regex.groups"
    },
    {
        "name": "re.regex.match()",
        "type": "Text Processing",
        "path": "library/re#re.regex.match"
    },
    {
        "name": "re.regex.pattern",
        "type": "Text Processing",
        "path": "library/re#re.regex.pattern"
    },
    {
        "name": "re.regex.search()",
        "type": "Text Processing",
        "path": "library/re#re.regex.search"
    },
    {
        "name": "re.regex.split()",
        "type": "Text Processing",
        "path": "library/re#re.regex.split"
    },
    {
        "name": "re.regex.sub()",
        "type": "Text Processing",
        "path": "library/re#re.regex.sub"
    },
    {
        "name": "re.regex.subn()",
        "type": "Text Processing",
        "path": "library/re#re.regex.subn"
    },
    {
        "name": "re.search()",
        "type": "Text Processing",
        "path": "library/re#re.search"
    },
    {
        "name": "re.split()",
        "type": "Text Processing",
        "path": "library/re#re.split"
    },
    {
        "name": "re.sub()",
        "type": "Text Processing",
        "path": "library/re#re.sub"
    },
    {
        "name": "re.subn()",
        "type": "Text Processing",
        "path": "library/re#re.subn"
    },
    {
        "name": "readline",
        "type": "Text Processing",
        "path": "library/readline"
    },
    {
        "name": "readline.add_history()",
        "type": "Text Processing",
        "path": "library/readline#readline.add_history"
    },
    {
        "name": "readline.clear_history()",
        "type": "Text Processing",
        "path": "library/readline#readline.clear_history"
    },
    {
        "name": "readline.get_begidx()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_begidx"
    },
    {
        "name": "readline.get_completer()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_completer"
    },
    {
        "name": "readline.get_completer_delims()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_completer_delims"
    },
    {
        "name": "readline.get_completion_type()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_completion_type"
    },
    {
        "name": "readline.get_current_history_length()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_current_history_length"
    },
    {
        "name": "readline.get_endidx()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_endidx"
    },
    {
        "name": "readline.get_history_item()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_history_item"
    },
    {
        "name": "readline.get_history_length()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_history_length"
    },
    {
        "name": "readline.get_line_buffer()",
        "type": "Text Processing",
        "path": "library/readline#readline.get_line_buffer"
    },
    {
        "name": "readline.insert_text()",
        "type": "Text Processing",
        "path": "library/readline#readline.insert_text"
    },
    {
        "name": "readline.parse_and_bind()",
        "type": "Text Processing",
        "path": "library/readline#readline.parse_and_bind"
    },
    {
        "name": "readline.read_history_file()",
        "type": "Text Processing",
        "path": "library/readline#readline.read_history_file"
    },
    {
        "name": "readline.read_init_file()",
        "type": "Text Processing",
        "path": "library/readline#readline.read_init_file"
    },
    {
        "name": "readline.redisplay()",
        "type": "Text Processing",
        "path": "library/readline#readline.redisplay"
    },
    {
        "name": "readline.remove_history_item()",
        "type": "Text Processing",
        "path": "library/readline#readline.remove_history_item"
    },
    {
        "name": "readline.replace_history_item()",
        "type": "Text Processing",
        "path": "library/readline#readline.replace_history_item"
    },
    {
        "name": "readline.set_completer()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_completer"
    },
    {
        "name": "readline.set_completer_delims()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_completer_delims"
    },
    {
        "name": "readline.set_completion_display_matches_hook()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_completion_display_matches_hook"
    },
    {
        "name": "readline.set_history_length()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_history_length"
    },
    {
        "name": "readline.set_pre_input_hook()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_pre_input_hook"
    },
    {
        "name": "readline.set_startup_hook()",
        "type": "Text Processing",
        "path": "library/readline#readline.set_startup_hook"
    },
    {
        "name": "readline.write_history_file()",
        "type": "Text Processing",
        "path": "library/readline#readline.write_history_file"
    },
    {
        "name": "ReferenceError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ReferenceError"
    },
    {
        "name": "repr()",
        "type": "Built-in Functions",
        "path": "library/functions#repr"
    },
    {
        "name": "reprlib",
        "type": "Data Types",
        "path": "library/reprlib"
    },
    {
        "name": "reprlib.aRepr",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.aRepr"
    },
    {
        "name": "reprlib.recursive_repr()",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.recursive_repr"
    },
    {
        "name": "reprlib.Repr",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr"
    },
    {
        "name": "reprlib.repr()",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.repr"
    },
    {
        "name": "reprlib.Repr.maxarray",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxarray"
    },
    {
        "name": "reprlib.Repr.maxdeque",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxdeque"
    },
    {
        "name": "reprlib.Repr.maxdict",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxdict"
    },
    {
        "name": "reprlib.Repr.maxfrozenset",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxfrozenset"
    },
    {
        "name": "reprlib.Repr.maxlevel",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxlevel"
    },
    {
        "name": "reprlib.Repr.maxlist",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxlist"
    },
    {
        "name": "reprlib.Repr.maxlong",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxlong"
    },
    {
        "name": "reprlib.Repr.maxother",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxother"
    },
    {
        "name": "reprlib.Repr.maxset",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxset"
    },
    {
        "name": "reprlib.Repr.maxstring",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxstring"
    },
    {
        "name": "reprlib.Repr.maxtuple",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.maxtuple"
    },
    {
        "name": "reprlib.Repr.repr()",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.repr"
    },
    {
        "name": "reprlib.Repr.repr1()",
        "type": "Data Types",
        "path": "library/reprlib#reprlib.Repr.repr1"
    },
    {
        "name": "resource",
        "type": "Unix",
        "path": "library/resource"
    },
    {
        "name": "resource.error",
        "type": "Unix",
        "path": "library/resource#resource.error"
    },
    {
        "name": "resource.getpagesize()",
        "type": "Unix",
        "path": "library/resource#resource.getpagesize"
    },
    {
        "name": "resource.getrlimit()",
        "type": "Unix",
        "path": "library/resource#resource.getrlimit"
    },
    {
        "name": "resource.getrusage()",
        "type": "Unix",
        "path": "library/resource#resource.getrusage"
    },
    {
        "name": "resource.prlimit()",
        "type": "Unix",
        "path": "library/resource#resource.prlimit"
    },
    {
        "name": "resource.setrlimit()",
        "type": "Unix",
        "path": "library/resource#resource.setrlimit"
    },
    {
        "name": "ResourceWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ResourceWarning"
    },
    {
        "name": "reversed()",
        "type": "Built-in Functions",
        "path": "library/functions#reversed"
    },
    {
        "name": "rlcompleter",
        "type": "Text Processing",
        "path": "library/rlcompleter"
    },
    {
        "name": "rlcompleter.Completer.complete()",
        "type": "Text Processing",
        "path": "library/rlcompleter#rlcompleter.Completer.complete"
    },
    {
        "name": "round()",
        "type": "Built-in Functions",
        "path": "library/functions#round"
    },
    {
        "name": "runpy",
        "type": "Importing",
        "path": "library/runpy"
    },
    {
        "name": "runpy.run_module()",
        "type": "Importing",
        "path": "library/runpy#runpy.run_module"
    },
    {
        "name": "runpy.run_path()",
        "type": "Importing",
        "path": "library/runpy#runpy.run_path"
    },
    {
        "name": "RuntimeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#RuntimeError"
    },
    {
        "name": "RuntimeWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#RuntimeWarning"
    },
    {
        "name": "sched",
        "type": "Concurrent Execution",
        "path": "library/sched"
    },
    {
        "name": "sched.scheduler",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler"
    },
    {
        "name": "sched.scheduler.cancel()",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.cancel"
    },
    {
        "name": "sched.scheduler.empty()",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.empty"
    },
    {
        "name": "sched.scheduler.enter()",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.enter"
    },
    {
        "name": "sched.scheduler.enterabs()",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.enterabs"
    },
    {
        "name": "sched.scheduler.queue",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.queue"
    },
    {
        "name": "sched.scheduler.run()",
        "type": "Concurrent Execution",
        "path": "library/sched#sched.scheduler.run"
    },
    {
        "name": "select",
        "type": "Input/ouput",
        "path": "library/select"
    },
    {
        "name": "select.devpoll()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll"
    },
    {
        "name": "select.devpoll.close()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.close"
    },
    {
        "name": "select.devpoll.closed",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.closed"
    },
    {
        "name": "select.devpoll.fileno()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.fileno"
    },
    {
        "name": "select.devpoll.modify()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.modify"
    },
    {
        "name": "select.devpoll.poll()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.poll"
    },
    {
        "name": "select.devpoll.register()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.register"
    },
    {
        "name": "select.devpoll.unregister()",
        "type": "Input/ouput",
        "path": "library/select#select.devpoll.unregister"
    },
    {
        "name": "select.epoll()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll"
    },
    {
        "name": "select.epoll.close()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.close"
    },
    {
        "name": "select.epoll.closed",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.closed"
    },
    {
        "name": "select.epoll.fileno()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.fileno"
    },
    {
        "name": "select.epoll.fromfd()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.fromfd"
    },
    {
        "name": "select.epoll.modify()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.modify"
    },
    {
        "name": "select.epoll.poll()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.poll"
    },
    {
        "name": "select.epoll.register()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.register"
    },
    {
        "name": "select.epoll.unregister()",
        "type": "Input/ouput",
        "path": "library/select#select.epoll.unregister"
    },
    {
        "name": "select.error",
        "type": "Input/ouput",
        "path": "library/select#select.error"
    },
    {
        "name": "select.kevent()",
        "type": "Input/ouput",
        "path": "library/select#select.kevent"
    },
    {
        "name": "select.kevent.data",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.data"
    },
    {
        "name": "select.kevent.fflags",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.fflags"
    },
    {
        "name": "select.kevent.filter",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.filter"
    },
    {
        "name": "select.kevent.flags",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.flags"
    },
    {
        "name": "select.kevent.ident",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.ident"
    },
    {
        "name": "select.kevent.udata",
        "type": "Input/ouput",
        "path": "library/select#select.kevent.udata"
    },
    {
        "name": "select.kqueue()",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue"
    },
    {
        "name": "select.kqueue.close()",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue.close"
    },
    {
        "name": "select.kqueue.closed",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue.closed"
    },
    {
        "name": "select.kqueue.control()",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue.control"
    },
    {
        "name": "select.kqueue.fileno()",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue.fileno"
    },
    {
        "name": "select.kqueue.fromfd()",
        "type": "Input/ouput",
        "path": "library/select#select.kqueue.fromfd"
    },
    {
        "name": "select.PIPE_BUF",
        "type": "Input/ouput",
        "path": "library/select#select.PIPE_BUF"
    },
    {
        "name": "select.poll()",
        "type": "Input/ouput",
        "path": "library/select#select.poll"
    },
    {
        "name": "select.poll.modify()",
        "type": "Input/ouput",
        "path": "library/select#select.poll.modify"
    },
    {
        "name": "select.poll.poll()",
        "type": "Input/ouput",
        "path": "library/select#select.poll.poll"
    },
    {
        "name": "select.poll.register()",
        "type": "Input/ouput",
        "path": "library/select#select.poll.register"
    },
    {
        "name": "select.poll.unregister()",
        "type": "Input/ouput",
        "path": "library/select#select.poll.unregister"
    },
    {
        "name": "select.select()",
        "type": "Input/ouput",
        "path": "library/select#select.select"
    },
    {
        "name": "selectors",
        "type": "Input/ouput",
        "path": "library/selectors"
    },
    {
        "name": "selectors.BaseSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector"
    },
    {
        "name": "selectors.BaseSelector.close()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.close"
    },
    {
        "name": "selectors.BaseSelector.get_key()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.get_key"
    },
    {
        "name": "selectors.BaseSelector.get_map()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.get_map"
    },
    {
        "name": "selectors.BaseSelector.modify()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.modify"
    },
    {
        "name": "selectors.BaseSelector.register()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.register"
    },
    {
        "name": "selectors.BaseSelector.select()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.select"
    },
    {
        "name": "selectors.BaseSelector.unregister()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.BaseSelector.unregister"
    },
    {
        "name": "selectors.DefaultSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.DefaultSelector"
    },
    {
        "name": "selectors.EpollSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.EpollSelector"
    },
    {
        "name": "selectors.EpollSelector.fileno()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.EpollSelector.fileno"
    },
    {
        "name": "selectors.KqueueSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.KqueueSelector"
    },
    {
        "name": "selectors.KqueueSelector.fileno()",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.KqueueSelector.fileno"
    },
    {
        "name": "selectors.PollSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.PollSelector"
    },
    {
        "name": "selectors.SelectorKey",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectorKey"
    },
    {
        "name": "selectors.SelectorKey.data",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectorKey.data"
    },
    {
        "name": "selectors.SelectorKey.events",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectorKey.events"
    },
    {
        "name": "selectors.SelectorKey.fd",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectorKey.fd"
    },
    {
        "name": "selectors.SelectorKey.fileobj",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectorKey.fileobj"
    },
    {
        "name": "selectors.SelectSelector",
        "type": "Input/ouput",
        "path": "library/selectors#selectors.SelectSelector"
    },
    {
        "name": "set",
        "type": "Built-in Functions",
        "path": "library/functions#set"
    },
    {
        "name": "set",
        "type": "Built-in Types",
        "path": "library/stdtypes#set"
    },
    {
        "name": "set.add()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.add"
    },
    {
        "name": "set.clear()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.clear"
    },
    {
        "name": "set.copy()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.copy"
    },
    {
        "name": "set.difference()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.difference"
    },
    {
        "name": "set.difference_update()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.difference_update"
    },
    {
        "name": "set.discard()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.discard"
    },
    {
        "name": "set.intersection()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.intersection"
    },
    {
        "name": "set.intersection_update()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.intersection_update"
    },
    {
        "name": "set.isdisjoint()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.isdisjoint"
    },
    {
        "name": "set.issubset()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.issubset"
    },
    {
        "name": "set.issuperset()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.issuperset"
    },
    {
        "name": "set.pop()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.pop"
    },
    {
        "name": "set.remove()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.remove"
    },
    {
        "name": "set.symmetric_difference()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.symmetric_difference"
    },
    {
        "name": "set.symmetric_difference_update()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.symmetric_difference_update"
    },
    {
        "name": "set.union()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.union"
    },
    {
        "name": "set.update()",
        "type": "Built-in Types",
        "path": "library/stdtypes#set.update"
    },
    {
        "name": "setattr()",
        "type": "Built-in Functions",
        "path": "library/functions#setattr"
    },
    {
        "name": "shelve",
        "type": "Data Persistence",
        "path": "library/shelve"
    },
    {
        "name": "shelve.BsdDbShelf",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.BsdDbShelf"
    },
    {
        "name": "shelve.DbfilenameShelf",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.DbfilenameShelf"
    },
    {
        "name": "shelve.open()",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.open"
    },
    {
        "name": "shelve.Shelf",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.Shelf"
    },
    {
        "name": "shelve.Shelf.close()",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.Shelf.close"
    },
    {
        "name": "shelve.Shelf.sync()",
        "type": "Data Persistence",
        "path": "library/shelve#shelve.Shelf.sync"
    },
    {
        "name": "shlex",
        "type": "Frameworks",
        "path": "library/shlex"
    },
    {
        "name": "shlex.quote()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.quote"
    },
    {
        "name": "shlex.shlex",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex"
    },
    {
        "name": "shlex.shlex.commenters",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.commenters"
    },
    {
        "name": "shlex.shlex.debug",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.debug"
    },
    {
        "name": "shlex.shlex.eof",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.eof"
    },
    {
        "name": "shlex.shlex.error_leader()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.error_leader"
    },
    {
        "name": "shlex.shlex.escape",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.escape"
    },
    {
        "name": "shlex.shlex.escapedquotes",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.escapedquotes"
    },
    {
        "name": "shlex.shlex.get_token()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.get_token"
    },
    {
        "name": "shlex.shlex.infile",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.infile"
    },
    {
        "name": "shlex.shlex.instream",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.instream"
    },
    {
        "name": "shlex.shlex.lineno",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.lineno"
    },
    {
        "name": "shlex.shlex.pop_source()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.pop_source"
    },
    {
        "name": "shlex.shlex.push_source()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.push_source"
    },
    {
        "name": "shlex.shlex.push_token()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.push_token"
    },
    {
        "name": "shlex.shlex.quotes",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.quotes"
    },
    {
        "name": "shlex.shlex.read_token()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.read_token"
    },
    {
        "name": "shlex.shlex.source",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.source"
    },
    {
        "name": "shlex.shlex.sourcehook()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.sourcehook"
    },
    {
        "name": "shlex.shlex.token",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.token"
    },
    {
        "name": "shlex.shlex.whitespace",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.whitespace"
    },
    {
        "name": "shlex.shlex.whitespace_split",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.whitespace_split"
    },
    {
        "name": "shlex.shlex.wordchars",
        "type": "Frameworks",
        "path": "library/shlex#shlex.shlex.wordchars"
    },
    {
        "name": "shlex.split()",
        "type": "Frameworks",
        "path": "library/shlex#shlex.split"
    },
    {
        "name": "shutil",
        "type": "File & Directory Access",
        "path": "library/shutil"
    },
    {
        "name": "shutil.chown()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.chown"
    },
    {
        "name": "shutil.copy()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copy"
    },
    {
        "name": "shutil.copy2()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copy2"
    },
    {
        "name": "shutil.copyfile()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copyfile"
    },
    {
        "name": "shutil.copyfileobj()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copyfileobj"
    },
    {
        "name": "shutil.copymode()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copymode"
    },
    {
        "name": "shutil.copystat()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copystat"
    },
    {
        "name": "shutil.copytree()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.copytree"
    },
    {
        "name": "shutil.disk_usage()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.disk_usage"
    },
    {
        "name": "shutil.Error",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.Error"
    },
    {
        "name": "shutil.get_archive_formats()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.get_archive_formats"
    },
    {
        "name": "shutil.get_terminal_size()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.get_terminal_size"
    },
    {
        "name": "shutil.get_unpack_formats()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.get_unpack_formats"
    },
    {
        "name": "shutil.ignore_patterns()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.ignore_patterns"
    },
    {
        "name": "shutil.make_archive()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.make_archive"
    },
    {
        "name": "shutil.move()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.move"
    },
    {
        "name": "shutil.register_archive_format()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.register_archive_format"
    },
    {
        "name": "shutil.register_unpack_format()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.register_unpack_format"
    },
    {
        "name": "shutil.rmtree()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.rmtree"
    },
    {
        "name": "shutil.rmtree.avoids_symlink_attacks",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.rmtree.avoids_symlink_attacks"
    },
    {
        "name": "shutil.SameFileError",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.SameFileError"
    },
    {
        "name": "shutil.unpack_archive()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.unpack_archive"
    },
    {
        "name": "shutil.unregister_archive_format()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.unregister_archive_format"
    },
    {
        "name": "shutil.unregister_unpack_format()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.unregister_unpack_format"
    },
    {
        "name": "shutil.which()",
        "type": "File & Directory Access",
        "path": "library/shutil#shutil.which"
    },
    {
        "name": "signal",
        "type": "Networking",
        "path": "library/signal"
    },
    {
        "name": "signal.alarm()",
        "type": "Networking",
        "path": "library/signal#signal.alarm"
    },
    {
        "name": "signal.getitimer()",
        "type": "Networking",
        "path": "library/signal#signal.getitimer"
    },
    {
        "name": "signal.getsignal()",
        "type": "Networking",
        "path": "library/signal#signal.getsignal"
    },
    {
        "name": "signal.ItimerError",
        "type": "Networking",
        "path": "library/signal#signal.ItimerError"
    },
    {
        "name": "signal.pause()",
        "type": "Networking",
        "path": "library/signal#signal.pause"
    },
    {
        "name": "signal.pthread_kill()",
        "type": "Networking",
        "path": "library/signal#signal.pthread_kill"
    },
    {
        "name": "signal.pthread_sigmask()",
        "type": "Networking",
        "path": "library/signal#signal.pthread_sigmask"
    },
    {
        "name": "signal.setitimer()",
        "type": "Networking",
        "path": "library/signal#signal.setitimer"
    },
    {
        "name": "signal.set_wakeup_fd()",
        "type": "Networking",
        "path": "library/signal#signal.set_wakeup_fd"
    },
    {
        "name": "signal.siginterrupt()",
        "type": "Networking",
        "path": "library/signal#signal.siginterrupt"
    },
    {
        "name": "signal.signal()",
        "type": "Networking",
        "path": "library/signal#signal.signal"
    },
    {
        "name": "signal.sigpending()",
        "type": "Networking",
        "path": "library/signal#signal.sigpending"
    },
    {
        "name": "signal.sigtimedwait()",
        "type": "Networking",
        "path": "library/signal#signal.sigtimedwait"
    },
    {
        "name": "signal.sigwait()",
        "type": "Networking",
        "path": "library/signal#signal.sigwait"
    },
    {
        "name": "signal.sigwaitinfo()",
        "type": "Networking",
        "path": "library/signal#signal.sigwaitinfo"
    },
    {
        "name": "site",
        "type": "Runtime",
        "path": "library/site"
    },
    {
        "name": "site.addsitedir()",
        "type": "Runtime",
        "path": "library/site#site.addsitedir"
    },
    {
        "name": "site.getsitepackages()",
        "type": "Runtime",
        "path": "library/site#site.getsitepackages"
    },
    {
        "name": "site.getuserbase()",
        "type": "Runtime",
        "path": "library/site#site.getuserbase"
    },
    {
        "name": "site.getusersitepackages()",
        "type": "Runtime",
        "path": "library/site#site.getusersitepackages"
    },
    {
        "name": "site.main()",
        "type": "Runtime",
        "path": "library/site#site.main"
    },
    {
        "name": "slice",
        "type": "Built-in Functions",
        "path": "library/functions#slice"
    },
    {
        "name": "smtpd",
        "type": "Internet",
        "path": "library/smtpd"
    },
    {
        "name": "smtpd.DebuggingServer",
        "type": "Internet",
        "path": "library/smtpd#smtpd.DebuggingServer"
    },
    {
        "name": "smtpd.MailmanProxy",
        "type": "Internet",
        "path": "library/smtpd#smtpd.MailmanProxy"
    },
    {
        "name": "smtpd.PureProxy",
        "type": "Internet",
        "path": "library/smtpd#smtpd.PureProxy"
    },
    {
        "name": "smtpd.SMTPChannel",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel"
    },
    {
        "name": "smtpd.SMTPChannel.addr",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.addr"
    },
    {
        "name": "smtpd.SMTPChannel.conn",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.conn"
    },
    {
        "name": "smtpd.SMTPChannel.fqdn",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.fqdn"
    },
    {
        "name": "smtpd.SMTPChannel.mailfrom",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.mailfrom"
    },
    {
        "name": "smtpd.SMTPChannel.peer",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.peer"
    },
    {
        "name": "smtpd.SMTPChannel.rcpttos",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.rcpttos"
    },
    {
        "name": "smtpd.SMTPChannel.received_data",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.received_data"
    },
    {
        "name": "smtpd.SMTPChannel.received_lines",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.received_lines"
    },
    {
        "name": "smtpd.SMTPChannel.seen_greeting",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.seen_greeting"
    },
    {
        "name": "smtpd.SMTPChannel.smtp_server",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.smtp_server"
    },
    {
        "name": "smtpd.SMTPChannel.smtp_state",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPChannel.smtp_state"
    },
    {
        "name": "smtpd.SMTPServer",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPServer"
    },
    {
        "name": "smtpd.SMTPServer.channel_class",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPServer.channel_class"
    },
    {
        "name": "smtpd.SMTPServer.process_message()",
        "type": "Internet",
        "path": "library/smtpd#smtpd.SMTPServer.process_message"
    },
    {
        "name": "smtplib",
        "type": "Internet",
        "path": "library/smtplib"
    },
    {
        "name": "smtplib.LMTP",
        "type": "Internet",
        "path": "library/smtplib#smtplib.LMTP"
    },
    {
        "name": "smtplib.SMTP",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP"
    },
    {
        "name": "smtplib.SMTP.connect()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.connect"
    },
    {
        "name": "smtplib.SMTP.docmd()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.docmd"
    },
    {
        "name": "smtplib.SMTP.ehlo()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.ehlo"
    },
    {
        "name": "smtplib.SMTP.ehlo_or_helo_if_needed()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.ehlo_or_helo_if_needed"
    },
    {
        "name": "smtplib.SMTP.has_extn()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.has_extn"
    },
    {
        "name": "smtplib.SMTP.helo()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.helo"
    },
    {
        "name": "smtplib.SMTP.login()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.login"
    },
    {
        "name": "smtplib.SMTP.quit()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.quit"
    },
    {
        "name": "smtplib.SMTP.sendmail()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.sendmail"
    },
    {
        "name": "smtplib.SMTP.send_message()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.send_message"
    },
    {
        "name": "smtplib.SMTP.set_debuglevel()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.set_debuglevel"
    },
    {
        "name": "smtplib.SMTP.starttls()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.starttls"
    },
    {
        "name": "smtplib.SMTP.verify()",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP.verify"
    },
    {
        "name": "smtplib.SMTPAuthenticationError",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPAuthenticationError"
    },
    {
        "name": "smtplib.SMTPConnectError",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPConnectError"
    },
    {
        "name": "smtplib.SMTPDataError",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPDataError"
    },
    {
        "name": "smtplib.SMTPException",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPException"
    },
    {
        "name": "smtplib.SMTPHeloError",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPHeloError"
    },
    {
        "name": "smtplib.SMTPRecipientsRefused",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPRecipientsRefused"
    },
    {
        "name": "smtplib.SMTPResponseException",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPResponseException"
    },
    {
        "name": "smtplib.SMTPSenderRefused",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPSenderRefused"
    },
    {
        "name": "smtplib.SMTPServerDisconnected",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTPServerDisconnected"
    },
    {
        "name": "smtplib.SMTP_SSL",
        "type": "Internet",
        "path": "library/smtplib#smtplib.SMTP_SSL"
    },
    {
        "name": "sndhdr",
        "type": "Multimedia",
        "path": "library/sndhdr"
    },
    {
        "name": "sndhdr.what()",
        "type": "Multimedia",
        "path": "library/sndhdr#sndhdr.what"
    },
    {
        "name": "sndhdr.whathdr()",
        "type": "Multimedia",
        "path": "library/sndhdr#sndhdr.whathdr"
    },
    {
        "name": "socket",
        "type": "Networking",
        "path": "library/socket"
    },
    {
        "name": "socket.CMSG_LEN()",
        "type": "Networking",
        "path": "library/socket#socket.CMSG_LEN"
    },
    {
        "name": "socket.CMSG_SPACE()",
        "type": "Networking",
        "path": "library/socket#socket.CMSG_SPACE"
    },
    {
        "name": "socket.create_connection()",
        "type": "Networking",
        "path": "library/socket#socket.create_connection"
    },
    {
        "name": "socket.error",
        "type": "Networking",
        "path": "library/socket#socket.error"
    },
    {
        "name": "socket.fromfd()",
        "type": "Networking",
        "path": "library/socket#socket.fromfd"
    },
    {
        "name": "socket.fromshare()",
        "type": "Networking",
        "path": "library/socket#socket.fromshare"
    },
    {
        "name": "socket.gaierror",
        "type": "Networking",
        "path": "library/socket#socket.gaierror"
    },
    {
        "name": "socket.getaddrinfo()",
        "type": "Networking",
        "path": "library/socket#socket.getaddrinfo"
    },
    {
        "name": "socket.getdefaulttimeout()",
        "type": "Networking",
        "path": "library/socket#socket.getdefaulttimeout"
    },
    {
        "name": "socket.getfqdn()",
        "type": "Networking",
        "path": "library/socket#socket.getfqdn"
    },
    {
        "name": "socket.gethostbyaddr()",
        "type": "Networking",
        "path": "library/socket#socket.gethostbyaddr"
    },
    {
        "name": "socket.gethostbyname()",
        "type": "Networking",
        "path": "library/socket#socket.gethostbyname"
    },
    {
        "name": "socket.gethostbyname_ex()",
        "type": "Networking",
        "path": "library/socket#socket.gethostbyname_ex"
    },
    {
        "name": "socket.gethostname()",
        "type": "Networking",
        "path": "library/socket#socket.gethostname"
    },
    {
        "name": "socket.getnameinfo()",
        "type": "Networking",
        "path": "library/socket#socket.getnameinfo"
    },
    {
        "name": "socket.getprotobyname()",
        "type": "Networking",
        "path": "library/socket#socket.getprotobyname"
    },
    {
        "name": "socket.getservbyname()",
        "type": "Networking",
        "path": "library/socket#socket.getservbyname"
    },
    {
        "name": "socket.getservbyport()",
        "type": "Networking",
        "path": "library/socket#socket.getservbyport"
    },
    {
        "name": "socket.has_ipv6",
        "type": "Networking",
        "path": "library/socket#socket.has_ipv6"
    },
    {
        "name": "socket.herror",
        "type": "Networking",
        "path": "library/socket#socket.herror"
    },
    {
        "name": "socket.htonl()",
        "type": "Networking",
        "path": "library/socket#socket.htonl"
    },
    {
        "name": "socket.htons()",
        "type": "Networking",
        "path": "library/socket#socket.htons"
    },
    {
        "name": "socket.if_indextoname()",
        "type": "Networking",
        "path": "library/socket#socket.if_indextoname"
    },
    {
        "name": "socket.if_nameindex()",
        "type": "Networking",
        "path": "library/socket#socket.if_nameindex"
    },
    {
        "name": "socket.if_nametoindex()",
        "type": "Networking",
        "path": "library/socket#socket.if_nametoindex"
    },
    {
        "name": "socket.inet_aton()",
        "type": "Networking",
        "path": "library/socket#socket.inet_aton"
    },
    {
        "name": "socket.inet_ntoa()",
        "type": "Networking",
        "path": "library/socket#socket.inet_ntoa"
    },
    {
        "name": "socket.inet_ntop()",
        "type": "Networking",
        "path": "library/socket#socket.inet_ntop"
    },
    {
        "name": "socket.inet_pton()",
        "type": "Networking",
        "path": "library/socket#socket.inet_pton"
    },
    {
        "name": "socket.ntohl()",
        "type": "Networking",
        "path": "library/socket#socket.ntohl"
    },
    {
        "name": "socket.ntohs()",
        "type": "Networking",
        "path": "library/socket#socket.ntohs"
    },
    {
        "name": "socket.setdefaulttimeout()",
        "type": "Networking",
        "path": "library/socket#socket.setdefaulttimeout"
    },
    {
        "name": "socket.sethostname()",
        "type": "Networking",
        "path": "library/socket#socket.sethostname"
    },
    {
        "name": "socket.socket()",
        "type": "Networking",
        "path": "library/socket#socket.socket"
    },
    {
        "name": "socket.socket.accept()",
        "type": "Networking",
        "path": "library/socket#socket.socket.accept"
    },
    {
        "name": "socket.socket.bind()",
        "type": "Networking",
        "path": "library/socket#socket.socket.bind"
    },
    {
        "name": "socket.socket.close()",
        "type": "Networking",
        "path": "library/socket#socket.socket.close"
    },
    {
        "name": "socket.socket.connect()",
        "type": "Networking",
        "path": "library/socket#socket.socket.connect"
    },
    {
        "name": "socket.socket.connect_ex()",
        "type": "Networking",
        "path": "library/socket#socket.socket.connect_ex"
    },
    {
        "name": "socket.socket.detach()",
        "type": "Networking",
        "path": "library/socket#socket.socket.detach"
    },
    {
        "name": "socket.socket.dup()",
        "type": "Networking",
        "path": "library/socket#socket.socket.dup"
    },
    {
        "name": "socket.socket.family",
        "type": "Networking",
        "path": "library/socket#socket.socket.family"
    },
    {
        "name": "socket.socket.fileno()",
        "type": "Networking",
        "path": "library/socket#socket.socket.fileno"
    },
    {
        "name": "socket.socket.getpeername()",
        "type": "Networking",
        "path": "library/socket#socket.socket.getpeername"
    },
    {
        "name": "socket.socket.getsockname()",
        "type": "Networking",
        "path": "library/socket#socket.socket.getsockname"
    },
    {
        "name": "socket.socket.getsockopt()",
        "type": "Networking",
        "path": "library/socket#socket.socket.getsockopt"
    },
    {
        "name": "socket.socket.gettimeout()",
        "type": "Networking",
        "path": "library/socket#socket.socket.gettimeout"
    },
    {
        "name": "socket.socket.get_inheritable()",
        "type": "Networking",
        "path": "library/socket#socket.socket.get_inheritable"
    },
    {
        "name": "socket.socket.ioctl()",
        "type": "Networking",
        "path": "library/socket#socket.socket.ioctl"
    },
    {
        "name": "socket.socket.listen()",
        "type": "Networking",
        "path": "library/socket#socket.socket.listen"
    },
    {
        "name": "socket.socket.makefile()",
        "type": "Networking",
        "path": "library/socket#socket.socket.makefile"
    },
    {
        "name": "socket.socket.proto",
        "type": "Networking",
        "path": "library/socket#socket.socket.proto"
    },
    {
        "name": "socket.socket.recv()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recv"
    },
    {
        "name": "socket.socket.recvfrom()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recvfrom"
    },
    {
        "name": "socket.socket.recvfrom_into()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recvfrom_into"
    },
    {
        "name": "socket.socket.recvmsg()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recvmsg"
    },
    {
        "name": "socket.socket.recvmsg_into()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recvmsg_into"
    },
    {
        "name": "socket.socket.recv_into()",
        "type": "Networking",
        "path": "library/socket#socket.socket.recv_into"
    },
    {
        "name": "socket.socket.send()",
        "type": "Networking",
        "path": "library/socket#socket.socket.send"
    },
    {
        "name": "socket.socket.sendall()",
        "type": "Networking",
        "path": "library/socket#socket.socket.sendall"
    },
    {
        "name": "socket.socket.sendmsg()",
        "type": "Networking",
        "path": "library/socket#socket.socket.sendmsg"
    },
    {
        "name": "socket.socket.sendto()",
        "type": "Networking",
        "path": "library/socket#socket.socket.sendto"
    },
    {
        "name": "socket.socket.setblocking()",
        "type": "Networking",
        "path": "library/socket#socket.socket.setblocking"
    },
    {
        "name": "socket.socket.setsockopt()",
        "type": "Networking",
        "path": "library/socket#socket.socket.setsockopt"
    },
    {
        "name": "socket.socket.settimeout()",
        "type": "Networking",
        "path": "library/socket#socket.socket.settimeout"
    },
    {
        "name": "socket.socket.set_inheritable()",
        "type": "Networking",
        "path": "library/socket#socket.socket.set_inheritable"
    },
    {
        "name": "socket.socket.share()",
        "type": "Networking",
        "path": "library/socket#socket.socket.share"
    },
    {
        "name": "socket.socket.shutdown()",
        "type": "Networking",
        "path": "library/socket#socket.socket.shutdown"
    },
    {
        "name": "socket.socket.type",
        "type": "Networking",
        "path": "library/socket#socket.socket.type"
    },
    {
        "name": "socket.socketpair()",
        "type": "Networking",
        "path": "library/socket#socket.socketpair"
    },
    {
        "name": "socket.SocketType",
        "type": "Networking",
        "path": "library/socket#socket.SocketType"
    },
    {
        "name": "socket.timeout",
        "type": "Networking",
        "path": "library/socket#socket.timeout"
    },
    {
        "name": "socketserver",
        "type": "Internet",
        "path": "library/socketserver"
    },
    {
        "name": "socketserver.BaseServer",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer"
    },
    {
        "name": "socketserver.BaseServer.address_family",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.address_family"
    },
    {
        "name": "socketserver.BaseServer.allow_reuse_address",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.allow_reuse_address"
    },
    {
        "name": "socketserver.BaseServer.fileno()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.fileno"
    },
    {
        "name": "socketserver.BaseServer.finish_request()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.finish_request"
    },
    {
        "name": "socketserver.BaseServer.get_request()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.get_request"
    },
    {
        "name": "socketserver.BaseServer.handle_error()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.handle_error"
    },
    {
        "name": "socketserver.BaseServer.handle_request()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.handle_request"
    },
    {
        "name": "socketserver.BaseServer.handle_timeout()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.handle_timeout"
    },
    {
        "name": "socketserver.BaseServer.process_request()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.process_request"
    },
    {
        "name": "socketserver.BaseServer.RequestHandlerClass",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.RequestHandlerClass"
    },
    {
        "name": "socketserver.BaseServer.request_queue_size",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.request_queue_size"
    },
    {
        "name": "socketserver.BaseServer.server_activate()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.server_activate"
    },
    {
        "name": "socketserver.BaseServer.server_address",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.server_address"
    },
    {
        "name": "socketserver.BaseServer.server_bind()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.server_bind"
    },
    {
        "name": "socketserver.BaseServer.serve_forever()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.serve_forever"
    },
    {
        "name": "socketserver.BaseServer.service_actions()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.service_actions"
    },
    {
        "name": "socketserver.BaseServer.shutdown()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.shutdown"
    },
    {
        "name": "socketserver.BaseServer.socket",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.socket"
    },
    {
        "name": "socketserver.BaseServer.socket_type",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.socket_type"
    },
    {
        "name": "socketserver.BaseServer.timeout",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.timeout"
    },
    {
        "name": "socketserver.BaseServer.verify_request()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.BaseServer.verify_request"
    },
    {
        "name": "socketserver.RequestHandler.finish()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.RequestHandler.finish"
    },
    {
        "name": "socketserver.RequestHandler.handle()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.RequestHandler.handle"
    },
    {
        "name": "socketserver.RequestHandler.setup()",
        "type": "Internet",
        "path": "library/socketserver#socketserver.RequestHandler.setup"
    },
    {
        "name": "sorted()",
        "type": "Built-in Functions",
        "path": "library/functions#sorted"
    },
    {
        "name": "spwd",
        "type": "Unix",
        "path": "library/spwd"
    },
    {
        "name": "spwd.getspall()",
        "type": "Unix",
        "path": "library/spwd#spwd.getspall"
    },
    {
        "name": "spwd.getspnam()",
        "type": "Unix",
        "path": "library/spwd#spwd.getspnam"
    },
    {
        "name": "sqlite3",
        "type": "Data Persistence",
        "path": "library/sqlite3"
    },
    {
        "name": "sqlite3.complete_statement()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.complete_statement"
    },
    {
        "name": "sqlite3.connect()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.connect"
    },
    {
        "name": "sqlite3.Connection",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection"
    },
    {
        "name": "sqlite3.Connection.close()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.close"
    },
    {
        "name": "sqlite3.Connection.commit()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.commit"
    },
    {
        "name": "sqlite3.Connection.create_aggregate()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.create_aggregate"
    },
    {
        "name": "sqlite3.Connection.create_collation()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.create_collation"
    },
    {
        "name": "sqlite3.Connection.create_function()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.create_function"
    },
    {
        "name": "sqlite3.Connection.cursor()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.cursor"
    },
    {
        "name": "sqlite3.Connection.enable_load_extension()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.enable_load_extension"
    },
    {
        "name": "sqlite3.Connection.execute()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.execute"
    },
    {
        "name": "sqlite3.Connection.executemany()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.executemany"
    },
    {
        "name": "sqlite3.Connection.executescript()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.executescript"
    },
    {
        "name": "sqlite3.Connection.interrupt()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.interrupt"
    },
    {
        "name": "sqlite3.Connection.in_transaction",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.in_transaction"
    },
    {
        "name": "sqlite3.Connection.isolation_level",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.isolation_level"
    },
    {
        "name": "sqlite3.Connection.iterdump",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.iterdump"
    },
    {
        "name": "sqlite3.Connection.load_extension()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.load_extension"
    },
    {
        "name": "sqlite3.Connection.rollback()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.rollback"
    },
    {
        "name": "sqlite3.Connection.row_factory",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.row_factory"
    },
    {
        "name": "sqlite3.Connection.set_authorizer()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.set_authorizer"
    },
    {
        "name": "sqlite3.Connection.set_progress_handler()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.set_progress_handler"
    },
    {
        "name": "sqlite3.Connection.set_trace_callback()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.set_trace_callback"
    },
    {
        "name": "sqlite3.Connection.text_factory",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.text_factory"
    },
    {
        "name": "sqlite3.Connection.total_changes",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Connection.total_changes"
    },
    {
        "name": "sqlite3.Cursor",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor"
    },
    {
        "name": "sqlite3.Cursor.description",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.description"
    },
    {
        "name": "sqlite3.Cursor.execute()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.execute"
    },
    {
        "name": "sqlite3.Cursor.executemany()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.executemany"
    },
    {
        "name": "sqlite3.Cursor.executescript()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.executescript"
    },
    {
        "name": "sqlite3.Cursor.fetchall()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.fetchall"
    },
    {
        "name": "sqlite3.Cursor.fetchmany()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.fetchmany"
    },
    {
        "name": "sqlite3.Cursor.fetchone()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.fetchone"
    },
    {
        "name": "sqlite3.Cursor.lastrowid",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.lastrowid"
    },
    {
        "name": "sqlite3.Cursor.rowcount",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Cursor.rowcount"
    },
    {
        "name": "sqlite3.enable_callback_tracebacks()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.enable_callback_tracebacks"
    },
    {
        "name": "sqlite3.register_adapter()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.register_adapter"
    },
    {
        "name": "sqlite3.register_converter()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.register_converter"
    },
    {
        "name": "sqlite3.Row",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Row"
    },
    {
        "name": "sqlite3.Row.keys()",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.Row.keys"
    },
    {
        "name": "sqlite3.sqlite_version",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.sqlite_version"
    },
    {
        "name": "sqlite3.sqlite_version_info",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.sqlite_version_info"
    },
    {
        "name": "sqlite3.version",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.version"
    },
    {
        "name": "sqlite3.version_info",
        "type": "Data Persistence",
        "path": "library/sqlite3#sqlite3.version_info"
    },
    {
        "name": "ssl",
        "type": "Networking",
        "path": "library/ssl"
    },
    {
        "name": "ssl.CertificateError",
        "type": "Networking",
        "path": "library/ssl#ssl.CertificateError"
    },
    {
        "name": "ssl.cert_time_to_seconds()",
        "type": "Networking",
        "path": "library/ssl#ssl.cert_time_to_seconds"
    },
    {
        "name": "ssl.create_default_context()",
        "type": "Networking",
        "path": "library/ssl#ssl.create_default_context"
    },
    {
        "name": "ssl.DER_cert_to_PEM_cert()",
        "type": "Networking",
        "path": "library/ssl#ssl.DER_cert_to_PEM_cert"
    },
    {
        "name": "ssl.enum_certificates()",
        "type": "Networking",
        "path": "library/ssl#ssl.enum_certificates"
    },
    {
        "name": "ssl.enum_crls()",
        "type": "Networking",
        "path": "library/ssl#ssl.enum_crls"
    },
    {
        "name": "ssl.get_default_verify_paths()",
        "type": "Networking",
        "path": "library/ssl#ssl.get_default_verify_paths"
    },
    {
        "name": "ssl.get_server_certificate()",
        "type": "Networking",
        "path": "library/ssl#ssl.get_server_certificate"
    },
    {
        "name": "ssl.match_hostname()",
        "type": "Networking",
        "path": "library/ssl#ssl.match_hostname"
    },
    {
        "name": "ssl.OP_NO_SSLv2",
        "type": "Networking",
        "path": "library/ssl#ssl.OP_NO_SSLv2"
    },
    {
        "name": "ssl.OP_NO_SSLv3",
        "type": "Networking",
        "path": "library/ssl#ssl.OP_NO_SSLv3"
    },
    {
        "name": "ssl.OP_NO_TLSv1",
        "type": "Networking",
        "path": "library/ssl#ssl.OP_NO_TLSv1"
    },
    {
        "name": "ssl.OP_NO_TLSv1_1",
        "type": "Networking",
        "path": "library/ssl#ssl.OP_NO_TLSv1_1"
    },
    {
        "name": "ssl.OP_NO_TLSv1_2",
        "type": "Networking",
        "path": "library/ssl#ssl.OP_NO_TLSv1_2"
    },
    {
        "name": "ssl.PEM_cert_to_DER_cert()",
        "type": "Networking",
        "path": "library/ssl#ssl.PEM_cert_to_DER_cert"
    },
    {
        "name": "ssl.PROTOCOL_SSLv2",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_SSLv2"
    },
    {
        "name": "ssl.PROTOCOL_SSLv23",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_SSLv23"
    },
    {
        "name": "ssl.PROTOCOL_SSLv3",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_SSLv3"
    },
    {
        "name": "ssl.PROTOCOL_TLSv1",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_TLSv1"
    },
    {
        "name": "ssl.PROTOCOL_TLSv1_1",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_TLSv1_1"
    },
    {
        "name": "ssl.PROTOCOL_TLSv1_2",
        "type": "Networking",
        "path": "library/ssl#ssl.PROTOCOL_TLSv1_2"
    },
    {
        "name": "ssl.RAND_add()",
        "type": "Networking",
        "path": "library/ssl#ssl.RAND_add"
    },
    {
        "name": "ssl.RAND_bytes()",
        "type": "Networking",
        "path": "library/ssl#ssl.RAND_bytes"
    },
    {
        "name": "ssl.RAND_egd()",
        "type": "Networking",
        "path": "library/ssl#ssl.RAND_egd"
    },
    {
        "name": "ssl.RAND_pseudo_bytes()",
        "type": "Networking",
        "path": "library/ssl#ssl.RAND_pseudo_bytes"
    },
    {
        "name": "ssl.RAND_status()",
        "type": "Networking",
        "path": "library/ssl#ssl.RAND_status"
    },
    {
        "name": "ssl.SSLContext",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext"
    },
    {
        "name": "ssl.SSLContext.cert_store_stats()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.cert_store_stats"
    },
    {
        "name": "ssl.SSLContext.check_hostname",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.check_hostname"
    },
    {
        "name": "ssl.SSLContext.get_ca_certs()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.get_ca_certs"
    },
    {
        "name": "ssl.SSLContext.load_cert_chain()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.load_cert_chain"
    },
    {
        "name": "ssl.SSLContext.load_default_certs()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.load_default_certs"
    },
    {
        "name": "ssl.SSLContext.load_dh_params()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.load_dh_params"
    },
    {
        "name": "ssl.SSLContext.load_verify_locations()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.load_verify_locations"
    },
    {
        "name": "ssl.SSLContext.options",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.options"
    },
    {
        "name": "ssl.SSLContext.protocol",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.protocol"
    },
    {
        "name": "ssl.SSLContext.session_stats()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.session_stats"
    },
    {
        "name": "ssl.SSLContext.set_ciphers()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.set_ciphers"
    },
    {
        "name": "ssl.SSLContext.set_default_verify_paths()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.set_default_verify_paths"
    },
    {
        "name": "ssl.SSLContext.set_ecdh_curve()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.set_ecdh_curve"
    },
    {
        "name": "ssl.SSLContext.set_npn_protocols()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.set_npn_protocols"
    },
    {
        "name": "ssl.SSLContext.set_servername_callback()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.set_servername_callback"
    },
    {
        "name": "ssl.SSLContext.verify_flags",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.verify_flags"
    },
    {
        "name": "ssl.SSLContext.verify_mode",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.verify_mode"
    },
    {
        "name": "ssl.SSLContext.wrap_socket()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLContext.wrap_socket"
    },
    {
        "name": "ssl.SSLEOFError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLEOFError"
    },
    {
        "name": "ssl.SSLError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLError"
    },
    {
        "name": "ssl.SSLError.library",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLError.library"
    },
    {
        "name": "ssl.SSLError.reason",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLError.reason"
    },
    {
        "name": "ssl.SSLSocket",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket"
    },
    {
        "name": "ssl.SSLSocket.cipher()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.cipher"
    },
    {
        "name": "ssl.SSLSocket.compression()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.compression"
    },
    {
        "name": "ssl.SSLSocket.context",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.context"
    },
    {
        "name": "ssl.SSLSocket.do_handshake()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.do_handshake"
    },
    {
        "name": "ssl.SSLSocket.getpeercert()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.getpeercert"
    },
    {
        "name": "ssl.SSLSocket.get_channel_binding()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.get_channel_binding"
    },
    {
        "name": "ssl.SSLSocket.pending()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.pending"
    },
    {
        "name": "ssl.SSLSocket.read()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.read"
    },
    {
        "name": "ssl.SSLSocket.selected_npn_protocol()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.selected_npn_protocol"
    },
    {
        "name": "ssl.SSLSocket.server_hostname",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.server_hostname"
    },
    {
        "name": "ssl.SSLSocket.server_side",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.server_side"
    },
    {
        "name": "ssl.SSLSocket.unwrap()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.unwrap"
    },
    {
        "name": "ssl.SSLSocket.write()",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSocket.write"
    },
    {
        "name": "ssl.SSLSyscallError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLSyscallError"
    },
    {
        "name": "ssl.SSLWantReadError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLWantReadError"
    },
    {
        "name": "ssl.SSLWantWriteError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLWantWriteError"
    },
    {
        "name": "ssl.SSLZeroReturnError",
        "type": "Networking",
        "path": "library/ssl#ssl.SSLZeroReturnError"
    },
    {
        "name": "ssl.wrap_socket()",
        "type": "Networking",
        "path": "library/ssl#ssl.wrap_socket"
    },
    {
        "name": "stat",
        "type": "File & Directory Access",
        "path": "library/stat"
    },
    {
        "name": "stat.filemode()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.filemode"
    },
    {
        "name": "stat.S_IFMT()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_IFMT"
    },
    {
        "name": "stat.S_IMODE()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_IMODE"
    },
    {
        "name": "stat.S_ISBLK()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISBLK"
    },
    {
        "name": "stat.S_ISCHR()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISCHR"
    },
    {
        "name": "stat.S_ISDIR()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISDIR"
    },
    {
        "name": "stat.S_ISDOOR()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISDOOR"
    },
    {
        "name": "stat.S_ISFIFO()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISFIFO"
    },
    {
        "name": "stat.S_ISLNK()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISLNK"
    },
    {
        "name": "stat.S_ISPORT()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISPORT"
    },
    {
        "name": "stat.S_ISREG()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISREG"
    },
    {
        "name": "stat.S_ISSOCK()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISSOCK"
    },
    {
        "name": "stat.S_ISWHT()",
        "type": "File & Directory Access",
        "path": "library/stat#stat.S_ISWHT"
    },
    {
        "name": "staticmethod()",
        "type": "Built-in Functions",
        "path": "library/functions#staticmethod"
    },
    {
        "name": "statistics",
        "type": "Numeric & Mathematical",
        "path": "library/statistics"
    },
    {
        "name": "statistics.mean()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.mean"
    },
    {
        "name": "statistics.median()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.median"
    },
    {
        "name": "statistics.median_grouped()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.median_grouped"
    },
    {
        "name": "statistics.median_high()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.median_high"
    },
    {
        "name": "statistics.median_low()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.median_low"
    },
    {
        "name": "statistics.mode()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.mode"
    },
    {
        "name": "statistics.pstdev()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.pstdev"
    },
    {
        "name": "statistics.pvariance()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.pvariance"
    },
    {
        "name": "statistics.StatisticsError",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.StatisticsError"
    },
    {
        "name": "statistics.stdev()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.stdev"
    },
    {
        "name": "statistics.variance()",
        "type": "Numeric & Mathematical",
        "path": "library/statistics#statistics.variance"
    },
    {
        "name": "StopIteration",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#StopIteration"
    },
    {
        "name": "str",
        "type": "Built-in Functions",
        "path": "library/functions#str"
    },
    {
        "name": "str",
        "type": "Built-in Types",
        "path": "library/stdtypes#str"
    },
    {
        "name": "str.capitalize()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.capitalize"
    },
    {
        "name": "str.casefold()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.casefold"
    },
    {
        "name": "str.center()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.center"
    },
    {
        "name": "str.count()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.count"
    },
    {
        "name": "str.encode()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.encode"
    },
    {
        "name": "str.endswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.endswith"
    },
    {
        "name": "str.expandtabs()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.expandtabs"
    },
    {
        "name": "str.find()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.find"
    },
    {
        "name": "str.format()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.format"
    },
    {
        "name": "str.format_map()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.format_map"
    },
    {
        "name": "str.index()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.index"
    },
    {
        "name": "str.isalnum()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isalnum"
    },
    {
        "name": "str.isalpha()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isalpha"
    },
    {
        "name": "str.isdecimal()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isdecimal"
    },
    {
        "name": "str.isdigit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isdigit"
    },
    {
        "name": "str.isidentifier()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isidentifier"
    },
    {
        "name": "str.islower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.islower"
    },
    {
        "name": "str.isnumeric()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isnumeric"
    },
    {
        "name": "str.isprintable()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isprintable"
    },
    {
        "name": "str.isspace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isspace"
    },
    {
        "name": "str.istitle()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.istitle"
    },
    {
        "name": "str.isupper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.isupper"
    },
    {
        "name": "str.join()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.join"
    },
    {
        "name": "str.ljust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.ljust"
    },
    {
        "name": "str.lower()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.lower"
    },
    {
        "name": "str.lstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.lstrip"
    },
    {
        "name": "str.partition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.partition"
    },
    {
        "name": "str.replace()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.replace"
    },
    {
        "name": "str.rfind()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rfind"
    },
    {
        "name": "str.rindex()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rindex"
    },
    {
        "name": "str.rjust()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rjust"
    },
    {
        "name": "str.rpartition()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rpartition"
    },
    {
        "name": "str.rsplit()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rsplit"
    },
    {
        "name": "str.rstrip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.rstrip"
    },
    {
        "name": "str.split()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.split"
    },
    {
        "name": "str.splitlines()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.splitlines"
    },
    {
        "name": "str.startswith()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.startswith"
    },
    {
        "name": "str.strip()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.strip"
    },
    {
        "name": "str.swapcase()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.swapcase"
    },
    {
        "name": "str.title()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.title"
    },
    {
        "name": "str.translate()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.translate"
    },
    {
        "name": "str.upper()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.upper"
    },
    {
        "name": "str.zfill()",
        "type": "Built-in Types",
        "path": "library/stdtypes#str.zfill"
    },
    {
        "name": "Streams (high-level API)",
        "type": "Input/ouput",
        "path": "library/asyncio-stream"
    },
    {
        "name": "string",
        "type": "Text Processing",
        "path": "library/string"
    },
    {
        "name": "string.ascii_letters",
        "type": "Text Processing",
        "path": "library/string#string.ascii_letters"
    },
    {
        "name": "string.ascii_lowercase",
        "type": "Text Processing",
        "path": "library/string#string.ascii_lowercase"
    },
    {
        "name": "string.ascii_uppercase",
        "type": "Text Processing",
        "path": "library/string#string.ascii_uppercase"
    },
    {
        "name": "string.capwords()",
        "type": "Text Processing",
        "path": "library/string#string.capwords"
    },
    {
        "name": "string.digits",
        "type": "Text Processing",
        "path": "library/string#string.digits"
    },
    {
        "name": "string.Formatter",
        "type": "Text Processing",
        "path": "library/string#string.Formatter"
    },
    {
        "name": "string.Formatter.check_unused_args()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.check_unused_args"
    },
    {
        "name": "string.Formatter.convert_field()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.convert_field"
    },
    {
        "name": "string.Formatter.format()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.format"
    },
    {
        "name": "string.Formatter.format_field()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.format_field"
    },
    {
        "name": "string.Formatter.get_field()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.get_field"
    },
    {
        "name": "string.Formatter.get_value()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.get_value"
    },
    {
        "name": "string.Formatter.parse()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.parse"
    },
    {
        "name": "string.Formatter.vformat()",
        "type": "Text Processing",
        "path": "library/string#string.Formatter.vformat"
    },
    {
        "name": "string.hexdigits",
        "type": "Text Processing",
        "path": "library/string#string.hexdigits"
    },
    {
        "name": "string.octdigits",
        "type": "Text Processing",
        "path": "library/string#string.octdigits"
    },
    {
        "name": "string.printable",
        "type": "Text Processing",
        "path": "library/string#string.printable"
    },
    {
        "name": "string.punctuation",
        "type": "Text Processing",
        "path": "library/string#string.punctuation"
    },
    {
        "name": "string.Template",
        "type": "Text Processing",
        "path": "library/string#string.Template"
    },
    {
        "name": "string.Template.safe_substitute()",
        "type": "Text Processing",
        "path": "library/string#string.Template.safe_substitute"
    },
    {
        "name": "string.Template.substitute()",
        "type": "Text Processing",
        "path": "library/string#string.Template.substitute"
    },
    {
        "name": "string.Template.template",
        "type": "Text Processing",
        "path": "library/string#string.Template.template"
    },
    {
        "name": "string.whitespace",
        "type": "Text Processing",
        "path": "library/string#string.whitespace"
    },
    {
        "name": "stringprep",
        "type": "Text Processing",
        "path": "library/stringprep"
    },
    {
        "name": "stringprep.in_table_a1()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_a1"
    },
    {
        "name": "stringprep.in_table_b1()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_b1"
    },
    {
        "name": "stringprep.in_table_c11()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c11"
    },
    {
        "name": "stringprep.in_table_c11_c12()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c11_c12"
    },
    {
        "name": "stringprep.in_table_c12()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c12"
    },
    {
        "name": "stringprep.in_table_c21()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c21"
    },
    {
        "name": "stringprep.in_table_c21_c22()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c21_c22"
    },
    {
        "name": "stringprep.in_table_c22()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c22"
    },
    {
        "name": "stringprep.in_table_c3()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c3"
    },
    {
        "name": "stringprep.in_table_c4()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c4"
    },
    {
        "name": "stringprep.in_table_c5()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c5"
    },
    {
        "name": "stringprep.in_table_c6()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c6"
    },
    {
        "name": "stringprep.in_table_c7()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c7"
    },
    {
        "name": "stringprep.in_table_c8()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c8"
    },
    {
        "name": "stringprep.in_table_c9()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_c9"
    },
    {
        "name": "stringprep.in_table_d1()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_d1"
    },
    {
        "name": "stringprep.in_table_d2()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.in_table_d2"
    },
    {
        "name": "stringprep.map_table_b2()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.map_table_b2"
    },
    {
        "name": "stringprep.map_table_b3()",
        "type": "Text Processing",
        "path": "library/stringprep#stringprep.map_table_b3"
    },
    {
        "name": "struct",
        "type": "Binary Data",
        "path": "library/struct"
    },
    {
        "name": "struct.calcsize()",
        "type": "Binary Data",
        "path": "library/struct#struct.calcsize"
    },
    {
        "name": "struct.error",
        "type": "Binary Data",
        "path": "library/struct#struct.error"
    },
    {
        "name": "struct.iter_unpack()",
        "type": "Binary Data",
        "path": "library/struct#struct.iter_unpack"
    },
    {
        "name": "struct.pack()",
        "type": "Binary Data",
        "path": "library/struct#struct.pack"
    },
    {
        "name": "struct.pack_into()",
        "type": "Binary Data",
        "path": "library/struct#struct.pack_into"
    },
    {
        "name": "struct.Struct",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct"
    },
    {
        "name": "struct.Struct.format",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.format"
    },
    {
        "name": "struct.Struct.iter_unpack()",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.iter_unpack"
    },
    {
        "name": "struct.Struct.pack()",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.pack"
    },
    {
        "name": "struct.Struct.pack_into()",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.pack_into"
    },
    {
        "name": "struct.Struct.size",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.size"
    },
    {
        "name": "struct.Struct.unpack()",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.unpack"
    },
    {
        "name": "struct.Struct.unpack_from()",
        "type": "Binary Data",
        "path": "library/struct#struct.Struct.unpack_from"
    },
    {
        "name": "struct.unpack()",
        "type": "Binary Data",
        "path": "library/struct#struct.unpack"
    },
    {
        "name": "struct.unpack_from()",
        "type": "Binary Data",
        "path": "library/struct#struct.unpack_from"
    },
    {
        "name": "subprocess",
        "type": "Concurrent Execution",
        "path": "library/subprocess"
    },
    {
        "name": "Subprocess",
        "type": "Input/ouput",
        "path": "library/asyncio-subprocess"
    },
    {
        "name": "subprocess.call()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.call"
    },
    {
        "name": "subprocess.CalledProcessError",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.CalledProcessError"
    },
    {
        "name": "subprocess.CalledProcessError.cmd",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.CalledProcessError.cmd"
    },
    {
        "name": "subprocess.CalledProcessError.output",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.CalledProcessError.output"
    },
    {
        "name": "subprocess.CalledProcessError.returncode",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.CalledProcessError.returncode"
    },
    {
        "name": "subprocess.check_call()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.check_call"
    },
    {
        "name": "subprocess.check_output()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.check_output"
    },
    {
        "name": "subprocess.getoutput()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.getoutput"
    },
    {
        "name": "subprocess.getstatusoutput()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.getstatusoutput"
    },
    {
        "name": "subprocess.Popen",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen"
    },
    {
        "name": "subprocess.Popen.args",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.args"
    },
    {
        "name": "subprocess.Popen.communicate()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.communicate"
    },
    {
        "name": "subprocess.Popen.kill()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.kill"
    },
    {
        "name": "subprocess.Popen.pid",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.pid"
    },
    {
        "name": "subprocess.Popen.poll()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.poll"
    },
    {
        "name": "subprocess.Popen.returncode",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.returncode"
    },
    {
        "name": "subprocess.Popen.send_signal()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.send_signal"
    },
    {
        "name": "subprocess.Popen.stderr",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.stderr"
    },
    {
        "name": "subprocess.Popen.stdin",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.stdin"
    },
    {
        "name": "subprocess.Popen.stdout",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.stdout"
    },
    {
        "name": "subprocess.Popen.terminate()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.terminate"
    },
    {
        "name": "subprocess.Popen.wait()",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.Popen.wait"
    },
    {
        "name": "subprocess.STARTUPINFO",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO"
    },
    {
        "name": "subprocess.STARTUPINFO.dwFlags",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO.dwFlags"
    },
    {
        "name": "subprocess.STARTUPINFO.hStdError",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO.hStdError"
    },
    {
        "name": "subprocess.STARTUPINFO.hStdInput",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO.hStdInput"
    },
    {
        "name": "subprocess.STARTUPINFO.hStdOutput",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO.hStdOutput"
    },
    {
        "name": "subprocess.STARTUPINFO.wShowWindow",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.STARTUPINFO.wShowWindow"
    },
    {
        "name": "subprocess.SubprocessError",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.SubprocessError"
    },
    {
        "name": "subprocess.TimeoutExpired",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.TimeoutExpired"
    },
    {
        "name": "subprocess.TimeoutExpired.cmd",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.TimeoutExpired.cmd"
    },
    {
        "name": "subprocess.TimeoutExpired.output",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.TimeoutExpired.output"
    },
    {
        "name": "subprocess.TimeoutExpired.timeout",
        "type": "Concurrent Execution",
        "path": "library/subprocess#subprocess.TimeoutExpired.timeout"
    },
    {
        "name": "sum()",
        "type": "Built-in Functions",
        "path": "library/functions#sum"
    },
    {
        "name": "super()",
        "type": "Built-in Functions",
        "path": "library/functions#super"
    },
    {
        "name": "Synchronization primitives",
        "type": "Input/ouput",
        "path": "library/asyncio-sync"
    },
    {
        "name": "SyntaxError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#SyntaxError"
    },
    {
        "name": "SyntaxWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#SyntaxWarning"
    },
    {
        "name": "sys",
        "type": "Runtime",
        "path": "library/sys"
    },
    {
        "name": "sys.abiflags",
        "type": "Runtime",
        "path": "library/sys#sys.abiflags"
    },
    {
        "name": "sys.api_version",
        "type": "Runtime",
        "path": "library/sys#sys.api_version"
    },
    {
        "name": "sys.argv",
        "type": "Runtime",
        "path": "library/sys#sys.argv"
    },
    {
        "name": "sys.base_exec_prefix",
        "type": "Runtime",
        "path": "library/sys#sys.base_exec_prefix"
    },
    {
        "name": "sys.base_prefix",
        "type": "Runtime",
        "path": "library/sys#sys.base_prefix"
    },
    {
        "name": "sys.builtin_module_names",
        "type": "Runtime",
        "path": "library/sys#sys.builtin_module_names"
    },
    {
        "name": "sys.byteorder",
        "type": "Runtime",
        "path": "library/sys#sys.byteorder"
    },
    {
        "name": "sys.call_tracing()",
        "type": "Runtime",
        "path": "library/sys#sys.call_tracing"
    },
    {
        "name": "sys.copyright",
        "type": "Runtime",
        "path": "library/sys#sys.copyright"
    },
    {
        "name": "sys.displayhook()",
        "type": "Runtime",
        "path": "library/sys#sys.displayhook"
    },
    {
        "name": "sys.dllhandle",
        "type": "Runtime",
        "path": "library/sys#sys.dllhandle"
    },
    {
        "name": "sys.dont_write_bytecode",
        "type": "Runtime",
        "path": "library/sys#sys.dont_write_bytecode"
    },
    {
        "name": "sys.excepthook()",
        "type": "Runtime",
        "path": "library/sys#sys.excepthook"
    },
    {
        "name": "sys.exc_info()",
        "type": "Runtime",
        "path": "library/sys#sys.exc_info"
    },
    {
        "name": "sys.executable",
        "type": "Runtime",
        "path": "library/sys#sys.executable"
    },
    {
        "name": "sys.exec_prefix",
        "type": "Runtime",
        "path": "library/sys#sys.exec_prefix"
    },
    {
        "name": "sys.exit()",
        "type": "Runtime",
        "path": "library/sys#sys.exit"
    },
    {
        "name": "sys.flags",
        "type": "Runtime",
        "path": "library/sys#sys.flags"
    },
    {
        "name": "sys.float_info",
        "type": "Runtime",
        "path": "library/sys#sys.float_info"
    },
    {
        "name": "sys.float_repr_style",
        "type": "Runtime",
        "path": "library/sys#sys.float_repr_style"
    },
    {
        "name": "sys.getallocatedblocks()",
        "type": "Runtime",
        "path": "library/sys#sys.getallocatedblocks"
    },
    {
        "name": "sys.getcheckinterval()",
        "type": "Runtime",
        "path": "library/sys#sys.getcheckinterval"
    },
    {
        "name": "sys.getdefaultencoding()",
        "type": "Runtime",
        "path": "library/sys#sys.getdefaultencoding"
    },
    {
        "name": "sys.getdlopenflags()",
        "type": "Runtime",
        "path": "library/sys#sys.getdlopenflags"
    },
    {
        "name": "sys.getfilesystemencoding()",
        "type": "Runtime",
        "path": "library/sys#sys.getfilesystemencoding"
    },
    {
        "name": "sys.getprofile()",
        "type": "Runtime",
        "path": "library/sys#sys.getprofile"
    },
    {
        "name": "sys.getrecursionlimit()",
        "type": "Runtime",
        "path": "library/sys#sys.getrecursionlimit"
    },
    {
        "name": "sys.getrefcount()",
        "type": "Runtime",
        "path": "library/sys#sys.getrefcount"
    },
    {
        "name": "sys.getsizeof()",
        "type": "Runtime",
        "path": "library/sys#sys.getsizeof"
    },
    {
        "name": "sys.getswitchinterval()",
        "type": "Runtime",
        "path": "library/sys#sys.getswitchinterval"
    },
    {
        "name": "sys.gettrace()",
        "type": "Runtime",
        "path": "library/sys#sys.gettrace"
    },
    {
        "name": "sys.getwindowsversion()",
        "type": "Runtime",
        "path": "library/sys#sys.getwindowsversion"
    },
    {
        "name": "sys.hash_info",
        "type": "Runtime",
        "path": "library/sys#sys.hash_info"
    },
    {
        "name": "sys.hexversion",
        "type": "Runtime",
        "path": "library/sys#sys.hexversion"
    },
    {
        "name": "sys.implementation",
        "type": "Runtime",
        "path": "library/sys#sys.implementation"
    },
    {
        "name": "sys.intern()",
        "type": "Runtime",
        "path": "library/sys#sys.intern"
    },
    {
        "name": "sys.int_info",
        "type": "Runtime",
        "path": "library/sys#sys.int_info"
    },
    {
        "name": "sys.last_traceback",
        "type": "Runtime",
        "path": "library/sys#sys.last_traceback"
    },
    {
        "name": "sys.last_type",
        "type": "Runtime",
        "path": "library/sys#sys.last_type"
    },
    {
        "name": "sys.last_value",
        "type": "Runtime",
        "path": "library/sys#sys.last_value"
    },
    {
        "name": "sys.maxsize",
        "type": "Runtime",
        "path": "library/sys#sys.maxsize"
    },
    {
        "name": "sys.maxunicode",
        "type": "Runtime",
        "path": "library/sys#sys.maxunicode"
    },
    {
        "name": "sys.meta_path",
        "type": "Runtime",
        "path": "library/sys#sys.meta_path"
    },
    {
        "name": "sys.modules",
        "type": "Runtime",
        "path": "library/sys#sys.modules"
    },
    {
        "name": "sys.path",
        "type": "Runtime",
        "path": "library/sys#sys.path"
    },
    {
        "name": "sys.path_hooks",
        "type": "Runtime",
        "path": "library/sys#sys.path_hooks"
    },
    {
        "name": "sys.path_importer_cache",
        "type": "Runtime",
        "path": "library/sys#sys.path_importer_cache"
    },
    {
        "name": "sys.platform",
        "type": "Runtime",
        "path": "library/sys#sys.platform"
    },
    {
        "name": "sys.prefix",
        "type": "Runtime",
        "path": "library/sys#sys.prefix"
    },
    {
        "name": "sys.ps1",
        "type": "Runtime",
        "path": "library/sys#sys.ps1"
    },
    {
        "name": "sys.ps2",
        "type": "Runtime",
        "path": "library/sys#sys.ps2"
    },
    {
        "name": "sys.setcheckinterval()",
        "type": "Runtime",
        "path": "library/sys#sys.setcheckinterval"
    },
    {
        "name": "sys.setdlopenflags()",
        "type": "Runtime",
        "path": "library/sys#sys.setdlopenflags"
    },
    {
        "name": "sys.setprofile()",
        "type": "Runtime",
        "path": "library/sys#sys.setprofile"
    },
    {
        "name": "sys.setrecursionlimit()",
        "type": "Runtime",
        "path": "library/sys#sys.setrecursionlimit"
    },
    {
        "name": "sys.setswitchinterval()",
        "type": "Runtime",
        "path": "library/sys#sys.setswitchinterval"
    },
    {
        "name": "sys.settrace()",
        "type": "Runtime",
        "path": "library/sys#sys.settrace"
    },
    {
        "name": "sys.settscdump()",
        "type": "Runtime",
        "path": "library/sys#sys.settscdump"
    },
    {
        "name": "sys.stderr",
        "type": "Runtime",
        "path": "library/sys#sys.stderr"
    },
    {
        "name": "sys.stdin",
        "type": "Runtime",
        "path": "library/sys#sys.stdin"
    },
    {
        "name": "sys.stdout",
        "type": "Runtime",
        "path": "library/sys#sys.stdout"
    },
    {
        "name": "sys.thread_info",
        "type": "Runtime",
        "path": "library/sys#sys.thread_info"
    },
    {
        "name": "sys.tracebacklimit",
        "type": "Runtime",
        "path": "library/sys#sys.tracebacklimit"
    },
    {
        "name": "sys.version",
        "type": "Runtime",
        "path": "library/sys#sys.version"
    },
    {
        "name": "sys.version_info",
        "type": "Runtime",
        "path": "library/sys#sys.version_info"
    },
    {
        "name": "sys.warnoptions",
        "type": "Runtime",
        "path": "library/sys#sys.warnoptions"
    },
    {
        "name": "sys.winver",
        "type": "Runtime",
        "path": "library/sys#sys.winver"
    },
    {
        "name": "sys._clear_type_cache()",
        "type": "Runtime",
        "path": "library/sys#sys._clear_type_cache"
    },
    {
        "name": "sys._current_frames()",
        "type": "Runtime",
        "path": "library/sys#sys._current_frames"
    },
    {
        "name": "sys._debugmallocstats()",
        "type": "Runtime",
        "path": "library/sys#sys._debugmallocstats"
    },
    {
        "name": "sys._getframe()",
        "type": "Runtime",
        "path": "library/sys#sys._getframe"
    },
    {
        "name": "sys._xoptions",
        "type": "Runtime",
        "path": "library/sys#sys._xoptions"
    },
    {
        "name": "sys.__displayhook__",
        "type": "Runtime",
        "path": "library/sys#sys.__displayhook__"
    },
    {
        "name": "sys.__excepthook__",
        "type": "Runtime",
        "path": "library/sys#sys.__excepthook__"
    },
    {
        "name": "sys.__interactivehook__",
        "type": "Runtime",
        "path": "library/sys#sys.__interactivehook__"
    },
    {
        "name": "sys.__stderr__",
        "type": "Runtime",
        "path": "library/sys#sys.__stderr__"
    },
    {
        "name": "sys.__stdin__",
        "type": "Runtime",
        "path": "library/sys#sys.__stdin__"
    },
    {
        "name": "sys.__stdout__",
        "type": "Runtime",
        "path": "library/sys#sys.__stdout__"
    },
    {
        "name": "sysconfig",
        "type": "Runtime",
        "path": "library/sysconfig"
    },
    {
        "name": "sysconfig.get_config_h_filename()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_config_h_filename"
    },
    {
        "name": "sysconfig.get_config_var()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_config_var"
    },
    {
        "name": "sysconfig.get_config_vars()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_config_vars"
    },
    {
        "name": "sysconfig.get_makefile_filename()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_makefile_filename"
    },
    {
        "name": "sysconfig.get_path()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_path"
    },
    {
        "name": "sysconfig.get_paths()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_paths"
    },
    {
        "name": "sysconfig.get_path_names()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_path_names"
    },
    {
        "name": "sysconfig.get_platform()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_platform"
    },
    {
        "name": "sysconfig.get_python_version()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_python_version"
    },
    {
        "name": "sysconfig.get_scheme_names()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.get_scheme_names"
    },
    {
        "name": "sysconfig.is_python_build()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.is_python_build"
    },
    {
        "name": "sysconfig.parse_config_h()",
        "type": "Runtime",
        "path": "library/sysconfig#sysconfig.parse_config_h"
    },
    {
        "name": "syslog",
        "type": "Unix",
        "path": "library/syslog"
    },
    {
        "name": "syslog.closelog()",
        "type": "Unix",
        "path": "library/syslog#syslog.closelog"
    },
    {
        "name": "syslog.openlog()",
        "type": "Unix",
        "path": "library/syslog#syslog.openlog"
    },
    {
        "name": "syslog.setlogmask()",
        "type": "Unix",
        "path": "library/syslog#syslog.setlogmask"
    },
    {
        "name": "syslog.syslog()",
        "type": "Unix",
        "path": "library/syslog#syslog.syslog"
    },
    {
        "name": "SystemError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#SystemError"
    },
    {
        "name": "SystemExit",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#SystemExit"
    },
    {
        "name": "SystemExit.code",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#SystemExit.code"
    },
    {
        "name": "TabError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#TabError"
    },
    {
        "name": "tarfile",
        "type": "Data Compression",
        "path": "library/tarfile"
    },
    {
        "name": "tarfile.CompressionError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.CompressionError"
    },
    {
        "name": "tarfile.ExtractError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.ExtractError"
    },
    {
        "name": "tarfile.HeaderError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.HeaderError"
    },
    {
        "name": "tarfile.is_tarfile()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.is_tarfile"
    },
    {
        "name": "tarfile.open()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.open"
    },
    {
        "name": "tarfile.ReadError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.ReadError"
    },
    {
        "name": "tarfile.StreamError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.StreamError"
    },
    {
        "name": "tarfile.TarError",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarError"
    },
    {
        "name": "tarfile.TarFile",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile"
    },
    {
        "name": "tarfile.TarFile.add()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.add"
    },
    {
        "name": "tarfile.TarFile.addfile()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.addfile"
    },
    {
        "name": "tarfile.TarFile.close()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.close"
    },
    {
        "name": "tarfile.TarFile.extract()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.extract"
    },
    {
        "name": "tarfile.TarFile.extractall()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.extractall"
    },
    {
        "name": "tarfile.TarFile.extractfile()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.extractfile"
    },
    {
        "name": "tarfile.TarFile.getmember()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.getmember"
    },
    {
        "name": "tarfile.TarFile.getmembers()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.getmembers"
    },
    {
        "name": "tarfile.TarFile.getnames()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.getnames"
    },
    {
        "name": "tarfile.TarFile.gettarinfo()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.gettarinfo"
    },
    {
        "name": "tarfile.TarFile.list()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.list"
    },
    {
        "name": "tarfile.TarFile.next()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.next"
    },
    {
        "name": "tarfile.TarFile.open()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.open"
    },
    {
        "name": "tarfile.TarFile.pax_headers",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarFile.pax_headers"
    },
    {
        "name": "tarfile.TarInfo",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo"
    },
    {
        "name": "tarfile.TarInfo.frombuf()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.frombuf"
    },
    {
        "name": "tarfile.TarInfo.fromtarfile()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.fromtarfile"
    },
    {
        "name": "tarfile.TarInfo.gid",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.gid"
    },
    {
        "name": "tarfile.TarInfo.gname",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.gname"
    },
    {
        "name": "tarfile.TarInfo.isblk()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isblk"
    },
    {
        "name": "tarfile.TarInfo.ischr()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.ischr"
    },
    {
        "name": "tarfile.TarInfo.isdev()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isdev"
    },
    {
        "name": "tarfile.TarInfo.isdir()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isdir"
    },
    {
        "name": "tarfile.TarInfo.isfifo()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isfifo"
    },
    {
        "name": "tarfile.TarInfo.isfile()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isfile"
    },
    {
        "name": "tarfile.TarInfo.islnk()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.islnk"
    },
    {
        "name": "tarfile.TarInfo.isreg()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.isreg"
    },
    {
        "name": "tarfile.TarInfo.issym()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.issym"
    },
    {
        "name": "tarfile.TarInfo.linkname",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.linkname"
    },
    {
        "name": "tarfile.TarInfo.mode",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.mode"
    },
    {
        "name": "tarfile.TarInfo.mtime",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.mtime"
    },
    {
        "name": "tarfile.TarInfo.name",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.name"
    },
    {
        "name": "tarfile.TarInfo.pax_headers",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.pax_headers"
    },
    {
        "name": "tarfile.TarInfo.size",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.size"
    },
    {
        "name": "tarfile.TarInfo.tobuf()",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.tobuf"
    },
    {
        "name": "tarfile.TarInfo.type",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.type"
    },
    {
        "name": "tarfile.TarInfo.uid",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.uid"
    },
    {
        "name": "tarfile.TarInfo.uname",
        "type": "Data Compression",
        "path": "library/tarfile#tarfile.TarInfo.uname"
    },
    {
        "name": "Tasks and coroutines",
        "type": "Input/ouput",
        "path": "library/asyncio-task"
    },
    {
        "name": "telnetlib",
        "type": "Internet",
        "path": "library/telnetlib"
    },
    {
        "name": "telnetlib.Telnet",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet"
    },
    {
        "name": "telnetlib.Telnet.close()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.close"
    },
    {
        "name": "telnetlib.Telnet.expect()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.expect"
    },
    {
        "name": "telnetlib.Telnet.fileno()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.fileno"
    },
    {
        "name": "telnetlib.Telnet.get_socket()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.get_socket"
    },
    {
        "name": "telnetlib.Telnet.interact()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.interact"
    },
    {
        "name": "telnetlib.Telnet.msg()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.msg"
    },
    {
        "name": "telnetlib.Telnet.mt_interact()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.mt_interact"
    },
    {
        "name": "telnetlib.Telnet.open()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.open"
    },
    {
        "name": "telnetlib.Telnet.read_all()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_all"
    },
    {
        "name": "telnetlib.Telnet.read_eager()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_eager"
    },
    {
        "name": "telnetlib.Telnet.read_lazy()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_lazy"
    },
    {
        "name": "telnetlib.Telnet.read_sb_data()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_sb_data"
    },
    {
        "name": "telnetlib.Telnet.read_some()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_some"
    },
    {
        "name": "telnetlib.Telnet.read_until()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_until"
    },
    {
        "name": "telnetlib.Telnet.read_very_eager()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_very_eager"
    },
    {
        "name": "telnetlib.Telnet.read_very_lazy()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.read_very_lazy"
    },
    {
        "name": "telnetlib.Telnet.set_debuglevel()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.set_debuglevel"
    },
    {
        "name": "telnetlib.Telnet.set_option_negotiation_callback()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.set_option_negotiation_callback"
    },
    {
        "name": "telnetlib.Telnet.write()",
        "type": "Internet",
        "path": "library/telnetlib#telnetlib.Telnet.write"
    },
    {
        "name": "tempfile",
        "type": "File & Directory Access",
        "path": "library/tempfile"
    },
    {
        "name": "tempfile.gettempdir()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.gettempdir"
    },
    {
        "name": "tempfile.gettempprefix()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.gettempprefix"
    },
    {
        "name": "tempfile.mkdtemp()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.mkdtemp"
    },
    {
        "name": "tempfile.mkstemp()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.mkstemp"
    },
    {
        "name": "tempfile.mktemp()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.mktemp"
    },
    {
        "name": "tempfile.NamedTemporaryFile()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.NamedTemporaryFile"
    },
    {
        "name": "tempfile.SpooledTemporaryFile()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.SpooledTemporaryFile"
    },
    {
        "name": "tempfile.tempdir",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.tempdir"
    },
    {
        "name": "tempfile.TemporaryDirectory()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.TemporaryDirectory"
    },
    {
        "name": "tempfile.TemporaryFile()",
        "type": "File & Directory Access",
        "path": "library/tempfile#tempfile.TemporaryFile"
    },
    {
        "name": "termios",
        "type": "Unix",
        "path": "library/termios"
    },
    {
        "name": "termios.tcdrain()",
        "type": "Unix",
        "path": "library/termios#termios.tcdrain"
    },
    {
        "name": "termios.tcflow()",
        "type": "Unix",
        "path": "library/termios#termios.tcflow"
    },
    {
        "name": "termios.tcflush()",
        "type": "Unix",
        "path": "library/termios#termios.tcflush"
    },
    {
        "name": "termios.tcgetattr()",
        "type": "Unix",
        "path": "library/termios#termios.tcgetattr"
    },
    {
        "name": "termios.tcsendbreak()",
        "type": "Unix",
        "path": "library/termios#termios.tcsendbreak"
    },
    {
        "name": "termios.tcsetattr()",
        "type": "Unix",
        "path": "library/termios#termios.tcsetattr"
    },
    {
        "name": "test",
        "type": "Development Tools",
        "path": "library/test"
    },
    {
        "name": "test.support.anticipate_failure()",
        "type": "Development Tools",
        "path": "library/test#test.support.anticipate_failure"
    },
    {
        "name": "test.support.bind_port()",
        "type": "Development Tools",
        "path": "library/test#test.support.bind_port"
    },
    {
        "name": "test.support.can_symlink()",
        "type": "Development Tools",
        "path": "library/test#test.support.can_symlink"
    },
    {
        "name": "test.support.captured_stderr()",
        "type": "Development Tools",
        "path": "library/test#test.support.captured_stderr"
    },
    {
        "name": "test.support.captured_stdin()",
        "type": "Development Tools",
        "path": "library/test#test.support.captured_stdin"
    },
    {
        "name": "test.support.captured_stdout()",
        "type": "Development Tools",
        "path": "library/test#test.support.captured_stdout"
    },
    {
        "name": "test.support.change_cwd()",
        "type": "Development Tools",
        "path": "library/test#test.support.change_cwd"
    },
    {
        "name": "test.support.check_warnings()",
        "type": "Development Tools",
        "path": "library/test#test.support.check_warnings"
    },
    {
        "name": "test.support.EnvironmentVarGuard",
        "type": "Development Tools",
        "path": "library/test#test.support.EnvironmentVarGuard"
    },
    {
        "name": "test.support.EnvironmentVarGuard.set()",
        "type": "Development Tools",
        "path": "library/test#test.support.EnvironmentVarGuard.set"
    },
    {
        "name": "test.support.EnvironmentVarGuard.unset()",
        "type": "Development Tools",
        "path": "library/test#test.support.EnvironmentVarGuard.unset"
    },
    {
        "name": "test.support.findfile()",
        "type": "Development Tools",
        "path": "library/test#test.support.findfile"
    },
    {
        "name": "test.support.find_unused_port()",
        "type": "Development Tools",
        "path": "library/test#test.support.find_unused_port"
    },
    {
        "name": "test.support.forget()",
        "type": "Development Tools",
        "path": "library/test#test.support.forget"
    },
    {
        "name": "test.support.import_fresh_module()",
        "type": "Development Tools",
        "path": "library/test#test.support.import_fresh_module"
    },
    {
        "name": "test.support.import_module()",
        "type": "Development Tools",
        "path": "library/test#test.support.import_module"
    },
    {
        "name": "test.support.is_jython",
        "type": "Development Tools",
        "path": "library/test#test.support.is_jython"
    },
    {
        "name": "test.support.is_resource_enabled()",
        "type": "Development Tools",
        "path": "library/test#test.support.is_resource_enabled"
    },
    {
        "name": "test.support.load_package_tests()",
        "type": "Development Tools",
        "path": "library/test#test.support.load_package_tests"
    },
    {
        "name": "test.support.make_bad_fd()",
        "type": "Development Tools",
        "path": "library/test#test.support.make_bad_fd"
    },
    {
        "name": "test.support.requires()",
        "type": "Development Tools",
        "path": "library/test#test.support.requires"
    },
    {
        "name": "test.support.ResourceDenied",
        "type": "Development Tools",
        "path": "library/test#test.support.ResourceDenied"
    },
    {
        "name": "test.support.run_doctest()",
        "type": "Development Tools",
        "path": "library/test#test.support.run_doctest"
    },
    {
        "name": "test.support.run_unittest()",
        "type": "Development Tools",
        "path": "library/test#test.support.run_unittest"
    },
    {
        "name": "test.support.run_with_locale()",
        "type": "Development Tools",
        "path": "library/test#test.support.run_with_locale"
    },
    {
        "name": "test.support.skip_unless_symlink()",
        "type": "Development Tools",
        "path": "library/test#test.support.skip_unless_symlink"
    },
    {
        "name": "test.support.SuppressCrashReport",
        "type": "Development Tools",
        "path": "library/test#test.support.SuppressCrashReport"
    },
    {
        "name": "test.support.temp_cwd()",
        "type": "Development Tools",
        "path": "library/test#test.support.temp_cwd"
    },
    {
        "name": "test.support.temp_dir()",
        "type": "Development Tools",
        "path": "library/test#test.support.temp_dir"
    },
    {
        "name": "test.support.temp_umask()",
        "type": "Development Tools",
        "path": "library/test#test.support.temp_umask"
    },
    {
        "name": "test.support.TestFailed",
        "type": "Development Tools",
        "path": "library/test#test.support.TestFailed"
    },
    {
        "name": "test.support.TransientResource",
        "type": "Development Tools",
        "path": "library/test#test.support.TransientResource"
    },
    {
        "name": "test.support.verbose",
        "type": "Development Tools",
        "path": "library/test#test.support.verbose"
    },
    {
        "name": "test.support.WarningsRecorder",
        "type": "Development Tools",
        "path": "library/test#test.support.WarningsRecorder"
    },
    {
        "name": "textwrap",
        "type": "Text Processing",
        "path": "library/textwrap"
    },
    {
        "name": "textwrap.dedent()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.dedent"
    },
    {
        "name": "textwrap.fill()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.fill"
    },
    {
        "name": "textwrap.indent()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.indent"
    },
    {
        "name": "textwrap.shorten()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.shorten"
    },
    {
        "name": "textwrap.TextWrapper",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper"
    },
    {
        "name": "textwrap.TextWrapper.break_long_words",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.break_long_words"
    },
    {
        "name": "textwrap.TextWrapper.break_on_hyphens",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.break_on_hyphens"
    },
    {
        "name": "textwrap.TextWrapper.drop_whitespace",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.drop_whitespace"
    },
    {
        "name": "textwrap.TextWrapper.expand_tabs",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.expand_tabs"
    },
    {
        "name": "textwrap.TextWrapper.fill()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.fill"
    },
    {
        "name": "textwrap.TextWrapper.fix_sentence_endings",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.fix_sentence_endings"
    },
    {
        "name": "textwrap.TextWrapper.initial_indent",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.initial_indent"
    },
    {
        "name": "textwrap.TextWrapper.max_lines",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.max_lines"
    },
    {
        "name": "textwrap.TextWrapper.placeholder",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.placeholder"
    },
    {
        "name": "textwrap.TextWrapper.replace_whitespace",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.replace_whitespace"
    },
    {
        "name": "textwrap.TextWrapper.subsequent_indent",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.subsequent_indent"
    },
    {
        "name": "textwrap.TextWrapper.tabsize",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.tabsize"
    },
    {
        "name": "textwrap.TextWrapper.width",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.width"
    },
    {
        "name": "textwrap.TextWrapper.wrap()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.TextWrapper.wrap"
    },
    {
        "name": "textwrap.wrap()",
        "type": "Text Processing",
        "path": "library/textwrap#textwrap.wrap"
    },
    {
        "name": "The concurrent package",
        "type": "Concurrent Execution",
        "path": "library/concurrent"
    },
    {
        "name": "The Python Profilers",
        "type": "Debugging & Profiling",
        "path": "library/profile"
    },
    {
        "name": "threading",
        "type": "Concurrent Execution",
        "path": "library/threading"
    },
    {
        "name": "threading.active_count()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.active_count"
    },
    {
        "name": "threading.Barrier",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier"
    },
    {
        "name": "threading.Barrier.abort()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.abort"
    },
    {
        "name": "threading.Barrier.broken",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.broken"
    },
    {
        "name": "threading.Barrier.n_waiting",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.n_waiting"
    },
    {
        "name": "threading.Barrier.parties",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.parties"
    },
    {
        "name": "threading.Barrier.reset()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.reset"
    },
    {
        "name": "threading.Barrier.wait()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Barrier.wait"
    },
    {
        "name": "threading.BoundedSemaphore",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.BoundedSemaphore"
    },
    {
        "name": "threading.BrokenBarrierError",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.BrokenBarrierError"
    },
    {
        "name": "threading.Condition",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition"
    },
    {
        "name": "threading.Condition.acquire()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.acquire"
    },
    {
        "name": "threading.Condition.notify()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.notify"
    },
    {
        "name": "threading.Condition.notify_all()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.notify_all"
    },
    {
        "name": "threading.Condition.release()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.release"
    },
    {
        "name": "threading.Condition.wait()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.wait"
    },
    {
        "name": "threading.Condition.wait_for()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Condition.wait_for"
    },
    {
        "name": "threading.current_thread()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.current_thread"
    },
    {
        "name": "threading.enumerate()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.enumerate"
    },
    {
        "name": "threading.Event",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Event"
    },
    {
        "name": "threading.Event.clear()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Event.clear"
    },
    {
        "name": "threading.Event.is_set()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Event.is_set"
    },
    {
        "name": "threading.Event.set()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Event.set"
    },
    {
        "name": "threading.Event.wait()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Event.wait"
    },
    {
        "name": "threading.get_ident()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.get_ident"
    },
    {
        "name": "threading.local",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.local"
    },
    {
        "name": "threading.Lock",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Lock"
    },
    {
        "name": "threading.Lock.acquire()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Lock.acquire"
    },
    {
        "name": "threading.Lock.release()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Lock.release"
    },
    {
        "name": "threading.main_thread()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.main_thread"
    },
    {
        "name": "threading.RLock",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.RLock"
    },
    {
        "name": "threading.RLock.acquire()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.RLock.acquire"
    },
    {
        "name": "threading.RLock.release()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.RLock.release"
    },
    {
        "name": "threading.Semaphore",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Semaphore"
    },
    {
        "name": "threading.Semaphore.acquire()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Semaphore.acquire"
    },
    {
        "name": "threading.Semaphore.release()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Semaphore.release"
    },
    {
        "name": "threading.setprofile()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.setprofile"
    },
    {
        "name": "threading.settrace()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.settrace"
    },
    {
        "name": "threading.stack_size()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.stack_size"
    },
    {
        "name": "threading.Thread",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread"
    },
    {
        "name": "threading.Thread.daemon",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.daemon"
    },
    {
        "name": "threading.Thread.getName()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.getName"
    },
    {
        "name": "threading.Thread.ident",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.ident"
    },
    {
        "name": "threading.Thread.isDaemon()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.isDaemon"
    },
    {
        "name": "threading.Thread.is_alive()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.is_alive"
    },
    {
        "name": "threading.Thread.join()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.join"
    },
    {
        "name": "threading.Thread.name",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.name"
    },
    {
        "name": "threading.Thread.run()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.run"
    },
    {
        "name": "threading.Thread.setDaemon()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.setDaemon"
    },
    {
        "name": "threading.Thread.setName()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.setName"
    },
    {
        "name": "threading.Thread.start()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Thread.start"
    },
    {
        "name": "threading.Timer",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Timer"
    },
    {
        "name": "threading.Timer.cancel()",
        "type": "Concurrent Execution",
        "path": "library/threading#threading.Timer.cancel"
    },
    {
        "name": "time",
        "type": "Operating System",
        "path": "library/time"
    },
    {
        "name": "time.altzone",
        "type": "Operating System",
        "path": "library/time#time.altzone"
    },
    {
        "name": "time.asctime()",
        "type": "Operating System",
        "path": "library/time#time.asctime"
    },
    {
        "name": "time.clock()",
        "type": "Operating System",
        "path": "library/time#time.clock"
    },
    {
        "name": "time.clock_getres()",
        "type": "Operating System",
        "path": "library/time#time.clock_getres"
    },
    {
        "name": "time.clock_gettime()",
        "type": "Operating System",
        "path": "library/time#time.clock_gettime"
    },
    {
        "name": "time.clock_settime()",
        "type": "Operating System",
        "path": "library/time#time.clock_settime"
    },
    {
        "name": "time.ctime()",
        "type": "Operating System",
        "path": "library/time#time.ctime"
    },
    {
        "name": "time.daylight",
        "type": "Operating System",
        "path": "library/time#time.daylight"
    },
    {
        "name": "time.get_clock_info()",
        "type": "Operating System",
        "path": "library/time#time.get_clock_info"
    },
    {
        "name": "time.gmtime()",
        "type": "Operating System",
        "path": "library/time#time.gmtime"
    },
    {
        "name": "time.localtime()",
        "type": "Operating System",
        "path": "library/time#time.localtime"
    },
    {
        "name": "time.mktime()",
        "type": "Operating System",
        "path": "library/time#time.mktime"
    },
    {
        "name": "time.monotonic()",
        "type": "Operating System",
        "path": "library/time#time.monotonic"
    },
    {
        "name": "time.perf_counter()",
        "type": "Operating System",
        "path": "library/time#time.perf_counter"
    },
    {
        "name": "time.process_time()",
        "type": "Operating System",
        "path": "library/time#time.process_time"
    },
    {
        "name": "time.sleep()",
        "type": "Operating System",
        "path": "library/time#time.sleep"
    },
    {
        "name": "time.strftime()",
        "type": "Operating System",
        "path": "library/time#time.strftime"
    },
    {
        "name": "time.strptime()",
        "type": "Operating System",
        "path": "library/time#time.strptime"
    },
    {
        "name": "time.struct_time",
        "type": "Operating System",
        "path": "library/time#time.struct_time"
    },
    {
        "name": "time.time()",
        "type": "Operating System",
        "path": "library/time#time.time"
    },
    {
        "name": "time.timezone",
        "type": "Operating System",
        "path": "library/time#time.timezone"
    },
    {
        "name": "time.tzname",
        "type": "Operating System",
        "path": "library/time#time.tzname"
    },
    {
        "name": "time.tzset()",
        "type": "Operating System",
        "path": "library/time#time.tzset"
    },
    {
        "name": "timeit",
        "type": "Debugging & Profiling",
        "path": "library/timeit"
    },
    {
        "name": "timeit.default_timer()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.default_timer"
    },
    {
        "name": "timeit.repeat()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.repeat"
    },
    {
        "name": "timeit.timeit()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.timeit"
    },
    {
        "name": "timeit.Timer",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.Timer"
    },
    {
        "name": "timeit.Timer.print_exc()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.Timer.print_exc"
    },
    {
        "name": "timeit.Timer.repeat()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.Timer.repeat"
    },
    {
        "name": "timeit.Timer.timeit()",
        "type": "Debugging & Profiling",
        "path": "library/timeit#timeit.Timer.timeit"
    },
    {
        "name": "TimeoutError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#TimeoutError"
    },
    {
        "name": "tkinter",
        "type": "Tk",
        "path": "library/tkinter"
    },
    {
        "name": "tkinter.scrolledtext",
        "type": "Tk",
        "path": "library/tkinter.scrolledtext"
    },
    {
        "name": "tkinter.scrolledtext.ScrolledText.frame",
        "type": "Tk",
        "path": "library/tkinter.scrolledtext#tkinter.scrolledtext.ScrolledText.frame"
    },
    {
        "name": "tkinter.scrolledtext.ScrolledText.vbar",
        "type": "Tk",
        "path": "library/tkinter.scrolledtext#tkinter.scrolledtext.ScrolledText.vbar"
    },
    {
        "name": "tkinter.Tcl()",
        "type": "Tk",
        "path": "library/tkinter#tkinter.Tcl"
    },
    {
        "name": "tkinter.tix",
        "type": "Tk",
        "path": "library/tkinter.tix"
    },
    {
        "name": "tkinter.tix.Balloon",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Balloon"
    },
    {
        "name": "tkinter.tix.ButtonBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.ButtonBox"
    },
    {
        "name": "tkinter.tix.CheckList",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.CheckList"
    },
    {
        "name": "tkinter.tix.ComboBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.ComboBox"
    },
    {
        "name": "tkinter.tix.Control",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Control"
    },
    {
        "name": "tkinter.tix.DirList",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.DirList"
    },
    {
        "name": "tkinter.tix.DirSelectBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.DirSelectBox"
    },
    {
        "name": "tkinter.tix.DirSelectDialog",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.DirSelectDialog"
    },
    {
        "name": "tkinter.tix.DirTree",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.DirTree"
    },
    {
        "name": "tkinter.tix.ExFileSelectBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.ExFileSelectBox"
    },
    {
        "name": "tkinter.tix.FileEntry",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.FileEntry"
    },
    {
        "name": "tkinter.tix.FileSelectBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.FileSelectBox"
    },
    {
        "name": "tkinter.tix.Form",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Form"
    },
    {
        "name": "tkinter.tix.HList",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.HList"
    },
    {
        "name": "tkinter.tix.InputOnly",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.InputOnly"
    },
    {
        "name": "tkinter.tix.LabelEntry",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.LabelEntry"
    },
    {
        "name": "tkinter.tix.LabelFrame",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.LabelFrame"
    },
    {
        "name": "tkinter.tix.ListNoteBook",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.ListNoteBook"
    },
    {
        "name": "tkinter.tix.Meter",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Meter"
    },
    {
        "name": "tkinter.tix.NoteBook",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.NoteBook"
    },
    {
        "name": "tkinter.tix.OptionMenu",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.OptionMenu"
    },
    {
        "name": "tkinter.tix.PanedWindow",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.PanedWindow"
    },
    {
        "name": "tkinter.tix.PopupMenu",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.PopupMenu"
    },
    {
        "name": "tkinter.tix.Select",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Select"
    },
    {
        "name": "tkinter.tix.StdButtonBox",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.StdButtonBox"
    },
    {
        "name": "tkinter.tix.tixCommand",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_addbitmapdir()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_addbitmapdir"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_cget()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_cget"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_configure()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_configure"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_filedialog()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_filedialog"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_getbitmap()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_getbitmap"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_getimage()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_getimage"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_option_get()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_option_get"
    },
    {
        "name": "tkinter.tix.tixCommand.tix_resetoptions()",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.tixCommand.tix_resetoptions"
    },
    {
        "name": "tkinter.tix.Tk",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Tk"
    },
    {
        "name": "tkinter.tix.TList",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.TList"
    },
    {
        "name": "tkinter.tix.Tree",
        "type": "Tk",
        "path": "library/tkinter.tix#tkinter.tix.Tree"
    },
    {
        "name": "tkinter.Tk",
        "type": "Tk",
        "path": "library/tkinter#tkinter.Tk"
    },
    {
        "name": "tkinter.ttk",
        "type": "Tk",
        "path": "library/tkinter.ttk"
    },
    {
        "name": "tkinter.ttk.Combobox",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Combobox"
    },
    {
        "name": "tkinter.ttk.Combobox.current()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Combobox.current"
    },
    {
        "name": "tkinter.ttk.Combobox.get()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Combobox.get"
    },
    {
        "name": "tkinter.ttk.Combobox.set()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Combobox.set"
    },
    {
        "name": "tkinter.ttk.Notebook",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook"
    },
    {
        "name": "tkinter.ttk.Notebook.add()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.add"
    },
    {
        "name": "tkinter.ttk.Notebook.enable_traversal()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.enable_traversal"
    },
    {
        "name": "tkinter.ttk.Notebook.forget()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.forget"
    },
    {
        "name": "tkinter.ttk.Notebook.hide()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.hide"
    },
    {
        "name": "tkinter.ttk.Notebook.identify()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.identify"
    },
    {
        "name": "tkinter.ttk.Notebook.index()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.index"
    },
    {
        "name": "tkinter.ttk.Notebook.insert()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.insert"
    },
    {
        "name": "tkinter.ttk.Notebook.select()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.select"
    },
    {
        "name": "tkinter.ttk.Notebook.tab()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.tab"
    },
    {
        "name": "tkinter.ttk.Notebook.tabs()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Notebook.tabs"
    },
    {
        "name": "tkinter.ttk.Progressbar",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Progressbar"
    },
    {
        "name": "tkinter.ttk.Progressbar.start()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Progressbar.start"
    },
    {
        "name": "tkinter.ttk.Progressbar.step()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Progressbar.step"
    },
    {
        "name": "tkinter.ttk.Progressbar.stop()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Progressbar.stop"
    },
    {
        "name": "tkinter.ttk.Style",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style"
    },
    {
        "name": "tkinter.ttk.Style.configure()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.configure"
    },
    {
        "name": "tkinter.ttk.Style.element_create()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.element_create"
    },
    {
        "name": "tkinter.ttk.Style.element_names()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.element_names"
    },
    {
        "name": "tkinter.ttk.Style.element_options()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.element_options"
    },
    {
        "name": "tkinter.ttk.Style.layout()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.layout"
    },
    {
        "name": "tkinter.ttk.Style.lookup()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.lookup"
    },
    {
        "name": "tkinter.ttk.Style.map()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.map"
    },
    {
        "name": "tkinter.ttk.Style.theme_create()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.theme_create"
    },
    {
        "name": "tkinter.ttk.Style.theme_names()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.theme_names"
    },
    {
        "name": "tkinter.ttk.Style.theme_settings()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.theme_settings"
    },
    {
        "name": "tkinter.ttk.Style.theme_use()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Style.theme_use"
    },
    {
        "name": "tkinter.ttk.Treeview",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview"
    },
    {
        "name": "tkinter.ttk.Treeview.bbox()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.bbox"
    },
    {
        "name": "tkinter.ttk.Treeview.column()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.column"
    },
    {
        "name": "tkinter.ttk.Treeview.delete()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.delete"
    },
    {
        "name": "tkinter.ttk.Treeview.detach()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.detach"
    },
    {
        "name": "tkinter.ttk.Treeview.exists()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.exists"
    },
    {
        "name": "tkinter.ttk.Treeview.focus()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.focus"
    },
    {
        "name": "tkinter.ttk.Treeview.get_children()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.get_children"
    },
    {
        "name": "tkinter.ttk.Treeview.heading()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.heading"
    },
    {
        "name": "tkinter.ttk.Treeview.identify()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.identify"
    },
    {
        "name": "tkinter.ttk.Treeview.identify_column()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.identify_column"
    },
    {
        "name": "tkinter.ttk.Treeview.identify_element()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.identify_element"
    },
    {
        "name": "tkinter.ttk.Treeview.identify_region()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.identify_region"
    },
    {
        "name": "tkinter.ttk.Treeview.identify_row()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.identify_row"
    },
    {
        "name": "tkinter.ttk.Treeview.index()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.index"
    },
    {
        "name": "tkinter.ttk.Treeview.insert()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.insert"
    },
    {
        "name": "tkinter.ttk.Treeview.item()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.item"
    },
    {
        "name": "tkinter.ttk.Treeview.move()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.move"
    },
    {
        "name": "tkinter.ttk.Treeview.next()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.next"
    },
    {
        "name": "tkinter.ttk.Treeview.parent()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.parent"
    },
    {
        "name": "tkinter.ttk.Treeview.prev()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.prev"
    },
    {
        "name": "tkinter.ttk.Treeview.reattach()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.reattach"
    },
    {
        "name": "tkinter.ttk.Treeview.see()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.see"
    },
    {
        "name": "tkinter.ttk.Treeview.selection()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.selection"
    },
    {
        "name": "tkinter.ttk.Treeview.selection_add()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.selection_add"
    },
    {
        "name": "tkinter.ttk.Treeview.selection_remove()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.selection_remove"
    },
    {
        "name": "tkinter.ttk.Treeview.selection_set()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.selection_set"
    },
    {
        "name": "tkinter.ttk.Treeview.selection_toggle()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.selection_toggle"
    },
    {
        "name": "tkinter.ttk.Treeview.set()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.set"
    },
    {
        "name": "tkinter.ttk.Treeview.set_children()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.set_children"
    },
    {
        "name": "tkinter.ttk.Treeview.tag_bind()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.tag_bind"
    },
    {
        "name": "tkinter.ttk.Treeview.tag_configure()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.tag_configure"
    },
    {
        "name": "tkinter.ttk.Treeview.tag_has()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.tag_has"
    },
    {
        "name": "tkinter.ttk.Treeview.xview()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.xview"
    },
    {
        "name": "tkinter.ttk.Treeview.yview()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Treeview.yview"
    },
    {
        "name": "tkinter.ttk.Widget",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Widget"
    },
    {
        "name": "tkinter.ttk.Widget.identify()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Widget.identify"
    },
    {
        "name": "tkinter.ttk.Widget.instate()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Widget.instate"
    },
    {
        "name": "tkinter.ttk.Widget.state()",
        "type": "Tk",
        "path": "library/tkinter.ttk#tkinter.ttk.Widget.state"
    },
    {
        "name": "trace",
        "type": "Debugging & Profiling",
        "path": "library/trace"
    },
    {
        "name": "trace.CoverageResults",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.CoverageResults"
    },
    {
        "name": "trace.CoverageResults.update()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.CoverageResults.update"
    },
    {
        "name": "trace.CoverageResults.write_results()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.CoverageResults.write_results"
    },
    {
        "name": "trace.Trace",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.Trace"
    },
    {
        "name": "trace.Trace.results()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.Trace.results"
    },
    {
        "name": "trace.Trace.run()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.Trace.run"
    },
    {
        "name": "trace.Trace.runctx()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.Trace.runctx"
    },
    {
        "name": "trace.Trace.runfunc()",
        "type": "Debugging & Profiling",
        "path": "library/trace#trace.Trace.runfunc"
    },
    {
        "name": "traceback",
        "type": "Runtime",
        "path": "library/traceback"
    },
    {
        "name": "traceback.clear_frames()",
        "type": "Runtime",
        "path": "library/traceback#traceback.clear_frames"
    },
    {
        "name": "traceback.extract_stack()",
        "type": "Runtime",
        "path": "library/traceback#traceback.extract_stack"
    },
    {
        "name": "traceback.extract_tb()",
        "type": "Runtime",
        "path": "library/traceback#traceback.extract_tb"
    },
    {
        "name": "traceback.format_exc()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_exc"
    },
    {
        "name": "traceback.format_exception()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_exception"
    },
    {
        "name": "traceback.format_exception_only()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_exception_only"
    },
    {
        "name": "traceback.format_list()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_list"
    },
    {
        "name": "traceback.format_stack()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_stack"
    },
    {
        "name": "traceback.format_tb()",
        "type": "Runtime",
        "path": "library/traceback#traceback.format_tb"
    },
    {
        "name": "traceback.print_exc()",
        "type": "Runtime",
        "path": "library/traceback#traceback.print_exc"
    },
    {
        "name": "traceback.print_exception()",
        "type": "Runtime",
        "path": "library/traceback#traceback.print_exception"
    },
    {
        "name": "traceback.print_last()",
        "type": "Runtime",
        "path": "library/traceback#traceback.print_last"
    },
    {
        "name": "traceback.print_stack()",
        "type": "Runtime",
        "path": "library/traceback#traceback.print_stack"
    },
    {
        "name": "traceback.print_tb()",
        "type": "Runtime",
        "path": "library/traceback#traceback.print_tb"
    },
    {
        "name": "tracemalloc",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc"
    },
    {
        "name": "tracemalloc.clear_traces()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.clear_traces"
    },
    {
        "name": "tracemalloc.Filter",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Filter"
    },
    {
        "name": "tracemalloc.Filter.all_frames",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Filter.all_frames"
    },
    {
        "name": "tracemalloc.Filter.filename_pattern",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Filter.filename_pattern"
    },
    {
        "name": "tracemalloc.Filter.inclusive",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Filter.inclusive"
    },
    {
        "name": "tracemalloc.Filter.lineno",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Filter.lineno"
    },
    {
        "name": "tracemalloc.Frame",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Frame"
    },
    {
        "name": "tracemalloc.Frame.filename",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Frame.filename"
    },
    {
        "name": "tracemalloc.Frame.lineno",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Frame.lineno"
    },
    {
        "name": "tracemalloc.get_object_traceback()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.get_object_traceback"
    },
    {
        "name": "tracemalloc.get_traceback_limit()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.get_traceback_limit"
    },
    {
        "name": "tracemalloc.get_traced_memory()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.get_traced_memory"
    },
    {
        "name": "tracemalloc.get_tracemalloc_memory()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.get_tracemalloc_memory"
    },
    {
        "name": "tracemalloc.is_tracing()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.is_tracing"
    },
    {
        "name": "tracemalloc.Snapshot",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot"
    },
    {
        "name": "tracemalloc.Snapshot.compare_to()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.compare_to"
    },
    {
        "name": "tracemalloc.Snapshot.dump()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.dump"
    },
    {
        "name": "tracemalloc.Snapshot.filter_traces()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.filter_traces"
    },
    {
        "name": "tracemalloc.Snapshot.load()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.load"
    },
    {
        "name": "tracemalloc.Snapshot.statistics()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.statistics"
    },
    {
        "name": "tracemalloc.Snapshot.traceback_limit",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.traceback_limit"
    },
    {
        "name": "tracemalloc.Snapshot.traces",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Snapshot.traces"
    },
    {
        "name": "tracemalloc.start()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.start"
    },
    {
        "name": "tracemalloc.Statistic",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Statistic"
    },
    {
        "name": "tracemalloc.Statistic.count",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Statistic.count"
    },
    {
        "name": "tracemalloc.Statistic.size",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Statistic.size"
    },
    {
        "name": "tracemalloc.Statistic.traceback",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Statistic.traceback"
    },
    {
        "name": "tracemalloc.StatisticDiff",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff"
    },
    {
        "name": "tracemalloc.StatisticDiff.count",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff.count"
    },
    {
        "name": "tracemalloc.StatisticDiff.count_diff",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff.count_diff"
    },
    {
        "name": "tracemalloc.StatisticDiff.size",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff.size"
    },
    {
        "name": "tracemalloc.StatisticDiff.size_diff",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff.size_diff"
    },
    {
        "name": "tracemalloc.StatisticDiff.traceback",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.StatisticDiff.traceback"
    },
    {
        "name": "tracemalloc.stop()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.stop"
    },
    {
        "name": "tracemalloc.take_snapshot()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.take_snapshot"
    },
    {
        "name": "tracemalloc.Trace",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Trace"
    },
    {
        "name": "tracemalloc.Trace.size",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Trace.size"
    },
    {
        "name": "tracemalloc.Trace.traceback",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Trace.traceback"
    },
    {
        "name": "tracemalloc.Traceback",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Traceback"
    },
    {
        "name": "tracemalloc.Traceback.format()",
        "type": "Debugging & Profiling",
        "path": "library/tracemalloc#tracemalloc.Traceback.format"
    },
    {
        "name": "Transports and protocols (low-level API)",
        "type": "Input/ouput",
        "path": "library/asyncio-protocol"
    },
    {
        "name": "True",
        "type": "Built-in Constants",
        "path": "library/constants#True"
    },
    {
        "name": "tty",
        "type": "Unix",
        "path": "library/tty"
    },
    {
        "name": "tty.setcbreak()",
        "type": "Unix",
        "path": "library/tty#tty.setcbreak"
    },
    {
        "name": "tty.setraw()",
        "type": "Unix",
        "path": "library/tty#tty.setraw"
    },
    {
        "name": "tuple",
        "type": "Built-in Types",
        "path": "library/stdtypes#tuple"
    },
    {
        "name": "tuple()",
        "type": "Built-in Functions",
        "path": "library/functions#tuple"
    },
    {
        "name": "turtle",
        "type": "Frameworks",
        "path": "library/turtle"
    },
    {
        "name": "turtle.addshape()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.addshape"
    },
    {
        "name": "turtle.back()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.back"
    },
    {
        "name": "turtle.backward()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.backward"
    },
    {
        "name": "turtle.begin_fill()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.begin_fill"
    },
    {
        "name": "turtle.begin_poly()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.begin_poly"
    },
    {
        "name": "turtle.bgcolor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.bgcolor"
    },
    {
        "name": "turtle.bgpic()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.bgpic"
    },
    {
        "name": "turtle.bk()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.bk"
    },
    {
        "name": "turtle.bye()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.bye"
    },
    {
        "name": "turtle.circle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.circle"
    },
    {
        "name": "turtle.clear()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.clear"
    },
    {
        "name": "turtle.clearscreen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.clearscreen"
    },
    {
        "name": "turtle.clearstamp()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.clearstamp"
    },
    {
        "name": "turtle.clearstamps()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.clearstamps"
    },
    {
        "name": "turtle.clone()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.clone"
    },
    {
        "name": "turtle.color()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.color"
    },
    {
        "name": "turtle.colormode()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.colormode"
    },
    {
        "name": "turtle.degrees()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.degrees"
    },
    {
        "name": "turtle.delay()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.delay"
    },
    {
        "name": "turtle.distance()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.distance"
    },
    {
        "name": "turtle.done()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.done"
    },
    {
        "name": "turtle.dot()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.dot"
    },
    {
        "name": "turtle.down()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.down"
    },
    {
        "name": "turtle.end_fill()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.end_fill"
    },
    {
        "name": "turtle.end_poly()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.end_poly"
    },
    {
        "name": "turtle.exitonclick()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.exitonclick"
    },
    {
        "name": "turtle.fd()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.fd"
    },
    {
        "name": "turtle.fillcolor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.fillcolor"
    },
    {
        "name": "turtle.filling()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.filling"
    },
    {
        "name": "turtle.forward()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.forward"
    },
    {
        "name": "turtle.getcanvas()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.getcanvas"
    },
    {
        "name": "turtle.getpen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.getpen"
    },
    {
        "name": "turtle.getscreen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.getscreen"
    },
    {
        "name": "turtle.getshapes()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.getshapes"
    },
    {
        "name": "turtle.getturtle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.getturtle"
    },
    {
        "name": "turtle.get_poly()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.get_poly"
    },
    {
        "name": "turtle.get_shapepoly()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.get_shapepoly"
    },
    {
        "name": "turtle.goto()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.goto"
    },
    {
        "name": "turtle.heading()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.heading"
    },
    {
        "name": "turtle.hideturtle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.hideturtle"
    },
    {
        "name": "turtle.home()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.home"
    },
    {
        "name": "turtle.ht()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.ht"
    },
    {
        "name": "turtle.isdown()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.isdown"
    },
    {
        "name": "turtle.isvisible()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.isvisible"
    },
    {
        "name": "turtle.left()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.left"
    },
    {
        "name": "turtle.listen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.listen"
    },
    {
        "name": "turtle.lt()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.lt"
    },
    {
        "name": "turtle.mainloop()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.mainloop"
    },
    {
        "name": "turtle.mode()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.mode"
    },
    {
        "name": "turtle.numinput()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.numinput"
    },
    {
        "name": "turtle.onclick()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onclick"
    },
    {
        "name": "turtle.ondrag()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.ondrag"
    },
    {
        "name": "turtle.onkey()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onkey"
    },
    {
        "name": "turtle.onkeypress()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onkeypress"
    },
    {
        "name": "turtle.onkeyrelease()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onkeyrelease"
    },
    {
        "name": "turtle.onrelease()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onrelease"
    },
    {
        "name": "turtle.onscreenclick()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.onscreenclick"
    },
    {
        "name": "turtle.ontimer()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.ontimer"
    },
    {
        "name": "turtle.pd()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pd"
    },
    {
        "name": "turtle.pen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pen"
    },
    {
        "name": "turtle.pencolor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pencolor"
    },
    {
        "name": "turtle.pendown()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pendown"
    },
    {
        "name": "turtle.pensize()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pensize"
    },
    {
        "name": "turtle.penup()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.penup"
    },
    {
        "name": "turtle.pos()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pos"
    },
    {
        "name": "turtle.position()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.position"
    },
    {
        "name": "turtle.pu()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.pu"
    },
    {
        "name": "turtle.radians()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.radians"
    },
    {
        "name": "turtle.RawPen",
        "type": "Frameworks",
        "path": "library/turtle#turtle.RawPen"
    },
    {
        "name": "turtle.RawTurtle",
        "type": "Frameworks",
        "path": "library/turtle#turtle.RawTurtle"
    },
    {
        "name": "turtle.register_shape()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.register_shape"
    },
    {
        "name": "turtle.reset()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.reset"
    },
    {
        "name": "turtle.resetscreen()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.resetscreen"
    },
    {
        "name": "turtle.resizemode()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.resizemode"
    },
    {
        "name": "turtle.right()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.right"
    },
    {
        "name": "turtle.rt()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.rt"
    },
    {
        "name": "turtle.Screen",
        "type": "Frameworks",
        "path": "library/turtle#turtle.Screen"
    },
    {
        "name": "turtle.screensize()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.screensize"
    },
    {
        "name": "turtle.ScrolledCanvas",
        "type": "Frameworks",
        "path": "library/turtle#turtle.ScrolledCanvas"
    },
    {
        "name": "turtle.seth()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.seth"
    },
    {
        "name": "turtle.setheading()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setheading"
    },
    {
        "name": "turtle.setpos()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setpos"
    },
    {
        "name": "turtle.setposition()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setposition"
    },
    {
        "name": "turtle.settiltangle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.settiltangle"
    },
    {
        "name": "turtle.setundobuffer()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setundobuffer"
    },
    {
        "name": "turtle.setup()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setup"
    },
    {
        "name": "turtle.setworldcoordinates()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setworldcoordinates"
    },
    {
        "name": "turtle.setx()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.setx"
    },
    {
        "name": "turtle.sety()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.sety"
    },
    {
        "name": "turtle.Shape",
        "type": "Frameworks",
        "path": "library/turtle#turtle.Shape"
    },
    {
        "name": "turtle.shape()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.shape"
    },
    {
        "name": "turtle.Shape.addcomponent()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.Shape.addcomponent"
    },
    {
        "name": "turtle.shapesize()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.shapesize"
    },
    {
        "name": "turtle.shapetransform()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.shapetransform"
    },
    {
        "name": "turtle.shearfactor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.shearfactor"
    },
    {
        "name": "turtle.showturtle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.showturtle"
    },
    {
        "name": "turtle.speed()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.speed"
    },
    {
        "name": "turtle.st()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.st"
    },
    {
        "name": "turtle.stamp()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.stamp"
    },
    {
        "name": "turtle.textinput()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.textinput"
    },
    {
        "name": "turtle.tilt()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.tilt"
    },
    {
        "name": "turtle.tiltangle()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.tiltangle"
    },
    {
        "name": "turtle.title()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.title"
    },
    {
        "name": "turtle.towards()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.towards"
    },
    {
        "name": "turtle.tracer()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.tracer"
    },
    {
        "name": "turtle.Turtle",
        "type": "Frameworks",
        "path": "library/turtle#turtle.Turtle"
    },
    {
        "name": "turtle.turtles()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.turtles"
    },
    {
        "name": "turtle.TurtleScreen",
        "type": "Frameworks",
        "path": "library/turtle#turtle.TurtleScreen"
    },
    {
        "name": "turtle.turtlesize()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.turtlesize"
    },
    {
        "name": "turtle.undo()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.undo"
    },
    {
        "name": "turtle.undobufferentries()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.undobufferentries"
    },
    {
        "name": "turtle.up()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.up"
    },
    {
        "name": "turtle.update()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.update"
    },
    {
        "name": "turtle.Vec2D",
        "type": "Frameworks",
        "path": "library/turtle#turtle.Vec2D"
    },
    {
        "name": "turtle.width()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.width"
    },
    {
        "name": "turtle.window_height()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.window_height"
    },
    {
        "name": "turtle.window_width()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.window_width"
    },
    {
        "name": "turtle.write()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.write"
    },
    {
        "name": "turtle.write_docstringdict()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.write_docstringdict"
    },
    {
        "name": "turtle.xcor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.xcor"
    },
    {
        "name": "turtle.ycor()",
        "type": "Frameworks",
        "path": "library/turtle#turtle.ycor"
    },
    {
        "name": "type",
        "type": "Built-in Functions",
        "path": "library/functions#type"
    },
    {
        "name": "TypeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#TypeError"
    },
    {
        "name": "Types",
        "type": "Built-in Types",
        "path": "library/stdtypes"
    },
    {
        "name": "types",
        "type": "Data Types",
        "path": "library/types"
    },
    {
        "name": "types.BuiltinFunctionType",
        "type": "Data Types",
        "path": "library/types#types.BuiltinFunctionType"
    },
    {
        "name": "types.BuiltinMethodType",
        "type": "Data Types",
        "path": "library/types#types.BuiltinMethodType"
    },
    {
        "name": "types.CodeType",
        "type": "Data Types",
        "path": "library/types#types.CodeType"
    },
    {
        "name": "types.DynamicClassAttribute()",
        "type": "Data Types",
        "path": "library/types#types.DynamicClassAttribute"
    },
    {
        "name": "types.FrameType",
        "type": "Data Types",
        "path": "library/types#types.FrameType"
    },
    {
        "name": "types.FunctionType",
        "type": "Data Types",
        "path": "library/types#types.FunctionType"
    },
    {
        "name": "types.GeneratorType",
        "type": "Data Types",
        "path": "library/types#types.GeneratorType"
    },
    {
        "name": "types.GetSetDescriptorType",
        "type": "Data Types",
        "path": "library/types#types.GetSetDescriptorType"
    },
    {
        "name": "types.LambdaType",
        "type": "Data Types",
        "path": "library/types#types.LambdaType"
    },
    {
        "name": "types.MappingProxyType",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType"
    },
    {
        "name": "types.MappingProxyType.copy()",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType.copy"
    },
    {
        "name": "types.MappingProxyType.get()",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType.get"
    },
    {
        "name": "types.MappingProxyType.items()",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType.items"
    },
    {
        "name": "types.MappingProxyType.keys()",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType.keys"
    },
    {
        "name": "types.MappingProxyType.values()",
        "type": "Data Types",
        "path": "library/types#types.MappingProxyType.values"
    },
    {
        "name": "types.MemberDescriptorType",
        "type": "Data Types",
        "path": "library/types#types.MemberDescriptorType"
    },
    {
        "name": "types.MethodType",
        "type": "Data Types",
        "path": "library/types#types.MethodType"
    },
    {
        "name": "types.ModuleType",
        "type": "Data Types",
        "path": "library/types#types.ModuleType"
    },
    {
        "name": "types.ModuleType.__doc__",
        "type": "Data Types",
        "path": "library/types#types.ModuleType.__doc__"
    },
    {
        "name": "types.ModuleType.__loader__",
        "type": "Data Types",
        "path": "library/types#types.ModuleType.__loader__"
    },
    {
        "name": "types.ModuleType.__name__",
        "type": "Data Types",
        "path": "library/types#types.ModuleType.__name__"
    },
    {
        "name": "types.ModuleType.__package__",
        "type": "Data Types",
        "path": "library/types#types.ModuleType.__package__"
    },
    {
        "name": "types.new_class()",
        "type": "Data Types",
        "path": "library/types#types.new_class"
    },
    {
        "name": "types.prepare_class()",
        "type": "Data Types",
        "path": "library/types#types.prepare_class"
    },
    {
        "name": "types.SimpleNamespace",
        "type": "Data Types",
        "path": "library/types#types.SimpleNamespace"
    },
    {
        "name": "types.TracebackType",
        "type": "Data Types",
        "path": "library/types#types.TracebackType"
    },
    {
        "name": "UnboundLocalError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnboundLocalError"
    },
    {
        "name": "unicodedata",
        "type": "Text Processing",
        "path": "library/unicodedata"
    },
    {
        "name": "unicodedata.bidirectional()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.bidirectional"
    },
    {
        "name": "unicodedata.category()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.category"
    },
    {
        "name": "unicodedata.combining()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.combining"
    },
    {
        "name": "unicodedata.decimal()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.decimal"
    },
    {
        "name": "unicodedata.decomposition()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.decomposition"
    },
    {
        "name": "unicodedata.digit()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.digit"
    },
    {
        "name": "unicodedata.east_asian_width()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.east_asian_width"
    },
    {
        "name": "unicodedata.lookup()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.lookup"
    },
    {
        "name": "unicodedata.mirrored()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.mirrored"
    },
    {
        "name": "unicodedata.name()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.name"
    },
    {
        "name": "unicodedata.normalize()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.normalize"
    },
    {
        "name": "unicodedata.numeric()",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.numeric"
    },
    {
        "name": "unicodedata.ucd_3_2_0",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.ucd_3_2_0"
    },
    {
        "name": "unicodedata.unidata_version",
        "type": "Text Processing",
        "path": "library/unicodedata#unicodedata.unidata_version"
    },
    {
        "name": "UnicodeDecodeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeDecodeError"
    },
    {
        "name": "UnicodeEncodeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeEncodeError"
    },
    {
        "name": "UnicodeError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError"
    },
    {
        "name": "UnicodeError.encoding",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError.encoding"
    },
    {
        "name": "UnicodeError.end",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError.end"
    },
    {
        "name": "UnicodeError.object",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError.object"
    },
    {
        "name": "UnicodeError.reason",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError.reason"
    },
    {
        "name": "UnicodeError.start",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeError.start"
    },
    {
        "name": "UnicodeTranslateError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeTranslateError"
    },
    {
        "name": "UnicodeWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UnicodeWarning"
    },
    {
        "name": "unittest",
        "type": "Development Tools",
        "path": "library/unittest"
    },
    {
        "name": "unittest.defaultTestLoader",
        "type": "Development Tools",
        "path": "library/unittest#unittest.defaultTestLoader"
    },
    {
        "name": "unittest.expectedFailure()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.expectedFailure"
    },
    {
        "name": "unittest.FunctionTestCase",
        "type": "Development Tools",
        "path": "library/unittest#unittest.FunctionTestCase"
    },
    {
        "name": "unittest.installHandler()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.installHandler"
    },
    {
        "name": "unittest.main()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.main"
    },
    {
        "name": "unittest.mock",
        "type": "Development Tools",
        "path": "library/unittest.mock"
    },
    {
        "name": "unittest.mock.call()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.call"
    },
    {
        "name": "unittest.mock.call.call_list()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.call.call_list"
    },
    {
        "name": "unittest.mock.create_autospec()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.create_autospec"
    },
    {
        "name": "unittest.mock.MagicMock",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.MagicMock"
    },
    {
        "name": "unittest.mock.Mock",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock"
    },
    {
        "name": "unittest.mock.Mock.assert_any_call()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.assert_any_call"
    },
    {
        "name": "unittest.mock.Mock.assert_called_once_with()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.assert_called_once_with"
    },
    {
        "name": "unittest.mock.Mock.assert_called_with()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.assert_called_with"
    },
    {
        "name": "unittest.mock.Mock.assert_has_calls()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.assert_has_calls"
    },
    {
        "name": "unittest.mock.Mock.attach_mock()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.attach_mock"
    },
    {
        "name": "unittest.mock.Mock.called",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.called"
    },
    {
        "name": "unittest.mock.Mock.call_args",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.call_args"
    },
    {
        "name": "unittest.mock.Mock.call_args_list",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.call_args_list"
    },
    {
        "name": "unittest.mock.Mock.call_count",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.call_count"
    },
    {
        "name": "unittest.mock.Mock.configure_mock()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.configure_mock"
    },
    {
        "name": "unittest.mock.Mock.method_calls",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.method_calls"
    },
    {
        "name": "unittest.mock.Mock.mock_add_spec()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.mock_add_spec"
    },
    {
        "name": "unittest.mock.Mock.mock_calls",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.mock_calls"
    },
    {
        "name": "unittest.mock.Mock.reset_mock()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.reset_mock"
    },
    {
        "name": "unittest.mock.Mock.return_value",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.return_value"
    },
    {
        "name": "unittest.mock.Mock.side_effect",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.side_effect"
    },
    {
        "name": "unittest.mock.Mock._get_child_mock()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock._get_child_mock"
    },
    {
        "name": "unittest.mock.Mock.__class__",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.__class__"
    },
    {
        "name": "unittest.mock.Mock.__dir__()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.Mock.__dir__"
    },
    {
        "name": "unittest.mock.mock_open()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.mock_open"
    },
    {
        "name": "unittest.mock.NonCallableMagicMock",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.NonCallableMagicMock"
    },
    {
        "name": "unittest.mock.NonCallableMock",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.NonCallableMock"
    },
    {
        "name": "unittest.mock.patch()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.patch"
    },
    {
        "name": "unittest.mock.patch.dict()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.patch.dict"
    },
    {
        "name": "unittest.mock.patch.multiple()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.patch.multiple"
    },
    {
        "name": "unittest.mock.patch.object()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.patch.object"
    },
    {
        "name": "unittest.mock.patch.stopall()",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.patch.stopall"
    },
    {
        "name": "unittest.mock.PropertyMock",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.PropertyMock"
    },
    {
        "name": "unittest.mock.sentinel",
        "type": "Development Tools",
        "path": "library/unittest.mock#unittest.mock.sentinel"
    },
    {
        "name": "unittest.registerResult()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.registerResult"
    },
    {
        "name": "unittest.removeHandler()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.removeHandler"
    },
    {
        "name": "unittest.removeResult()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.removeResult"
    },
    {
        "name": "unittest.skip()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.skip"
    },
    {
        "name": "unittest.skipIf()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.skipIf"
    },
    {
        "name": "unittest.SkipTest",
        "type": "Development Tools",
        "path": "library/unittest#unittest.SkipTest"
    },
    {
        "name": "unittest.skipUnless()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.skipUnless"
    },
    {
        "name": "unittest.TestCase",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase"
    },
    {
        "name": "unittest.TestCase.addCleanup()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.addCleanup"
    },
    {
        "name": "unittest.TestCase.addTypeEqualityFunc()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.addTypeEqualityFunc"
    },
    {
        "name": "unittest.TestCase.assertAlmostEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertAlmostEqual"
    },
    {
        "name": "unittest.TestCase.assertCountEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertCountEqual"
    },
    {
        "name": "unittest.TestCase.assertDictEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertDictEqual"
    },
    {
        "name": "unittest.TestCase.assertEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertEqual"
    },
    {
        "name": "unittest.TestCase.assertFalse()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertFalse"
    },
    {
        "name": "unittest.TestCase.assertGreater()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertGreater"
    },
    {
        "name": "unittest.TestCase.assertGreaterEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertGreaterEqual"
    },
    {
        "name": "unittest.TestCase.assertIn()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIn"
    },
    {
        "name": "unittest.TestCase.assertIs()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIs"
    },
    {
        "name": "unittest.TestCase.assertIsInstance()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIsInstance"
    },
    {
        "name": "unittest.TestCase.assertIsNone()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIsNone"
    },
    {
        "name": "unittest.TestCase.assertIsNot()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIsNot"
    },
    {
        "name": "unittest.TestCase.assertIsNotNone()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertIsNotNone"
    },
    {
        "name": "unittest.TestCase.assertLess()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertLess"
    },
    {
        "name": "unittest.TestCase.assertLessEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertLessEqual"
    },
    {
        "name": "unittest.TestCase.assertListEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertListEqual"
    },
    {
        "name": "unittest.TestCase.assertLogs()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertLogs"
    },
    {
        "name": "unittest.TestCase.assertMultiLineEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertMultiLineEqual"
    },
    {
        "name": "unittest.TestCase.assertNotAlmostEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertNotAlmostEqual"
    },
    {
        "name": "unittest.TestCase.assertNotEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertNotEqual"
    },
    {
        "name": "unittest.TestCase.assertNotIn()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertNotIn"
    },
    {
        "name": "unittest.TestCase.assertNotIsInstance()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertNotIsInstance"
    },
    {
        "name": "unittest.TestCase.assertNotRegex()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertNotRegex"
    },
    {
        "name": "unittest.TestCase.assertRaises()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertRaises"
    },
    {
        "name": "unittest.TestCase.assertRaisesRegex()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertRaisesRegex"
    },
    {
        "name": "unittest.TestCase.assertRegex()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertRegex"
    },
    {
        "name": "unittest.TestCase.assertSequenceEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertSequenceEqual"
    },
    {
        "name": "unittest.TestCase.assertSetEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertSetEqual"
    },
    {
        "name": "unittest.TestCase.assertTrue()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertTrue"
    },
    {
        "name": "unittest.TestCase.assertTupleEqual()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertTupleEqual"
    },
    {
        "name": "unittest.TestCase.assertWarns()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertWarns"
    },
    {
        "name": "unittest.TestCase.assertWarnsRegex()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.assertWarnsRegex"
    },
    {
        "name": "unittest.TestCase.countTestCases()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.countTestCases"
    },
    {
        "name": "unittest.TestCase.debug()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.debug"
    },
    {
        "name": "unittest.TestCase.defaultTestResult()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.defaultTestResult"
    },
    {
        "name": "unittest.TestCase.doCleanups()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.doCleanups"
    },
    {
        "name": "unittest.TestCase.fail()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.fail"
    },
    {
        "name": "unittest.TestCase.failureException",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.failureException"
    },
    {
        "name": "unittest.TestCase.id()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.id"
    },
    {
        "name": "unittest.TestCase.longMessage",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.longMessage"
    },
    {
        "name": "unittest.TestCase.maxDiff",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.maxDiff"
    },
    {
        "name": "unittest.TestCase.output",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.output"
    },
    {
        "name": "unittest.TestCase.records",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.records"
    },
    {
        "name": "unittest.TestCase.run()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.run"
    },
    {
        "name": "unittest.TestCase.setUp()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.setUp"
    },
    {
        "name": "unittest.TestCase.setUpClass()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.setUpClass"
    },
    {
        "name": "unittest.TestCase.shortDescription()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.shortDescription"
    },
    {
        "name": "unittest.TestCase.skipTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.skipTest"
    },
    {
        "name": "unittest.TestCase.subTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.subTest"
    },
    {
        "name": "unittest.TestCase.tearDown()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.tearDown"
    },
    {
        "name": "unittest.TestCase.tearDownClass()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestCase.tearDownClass"
    },
    {
        "name": "unittest.TestLoader",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader"
    },
    {
        "name": "unittest.TestLoader.discover()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.discover"
    },
    {
        "name": "unittest.TestLoader.getTestCaseNames()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.getTestCaseNames"
    },
    {
        "name": "unittest.TestLoader.loadTestsFromModule()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.loadTestsFromModule"
    },
    {
        "name": "unittest.TestLoader.loadTestsFromName()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.loadTestsFromName"
    },
    {
        "name": "unittest.TestLoader.loadTestsFromNames()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.loadTestsFromNames"
    },
    {
        "name": "unittest.TestLoader.loadTestsFromTestCase()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.loadTestsFromTestCase"
    },
    {
        "name": "unittest.TestLoader.sortTestMethodsUsing",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.sortTestMethodsUsing"
    },
    {
        "name": "unittest.TestLoader.suiteClass",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.suiteClass"
    },
    {
        "name": "unittest.TestLoader.testMethodPrefix",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestLoader.testMethodPrefix"
    },
    {
        "name": "unittest.TestResult",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult"
    },
    {
        "name": "unittest.TestResult.addError()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addError"
    },
    {
        "name": "unittest.TestResult.addExpectedFailure()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addExpectedFailure"
    },
    {
        "name": "unittest.TestResult.addFailure()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addFailure"
    },
    {
        "name": "unittest.TestResult.addSkip()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addSkip"
    },
    {
        "name": "unittest.TestResult.addSubTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addSubTest"
    },
    {
        "name": "unittest.TestResult.addSuccess()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addSuccess"
    },
    {
        "name": "unittest.TestResult.addUnexpectedSuccess()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.addUnexpectedSuccess"
    },
    {
        "name": "unittest.TestResult.buffer",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.buffer"
    },
    {
        "name": "unittest.TestResult.errors",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.errors"
    },
    {
        "name": "unittest.TestResult.expectedFailures",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.expectedFailures"
    },
    {
        "name": "unittest.TestResult.failfast",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.failfast"
    },
    {
        "name": "unittest.TestResult.failures",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.failures"
    },
    {
        "name": "unittest.TestResult.shouldStop",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.shouldStop"
    },
    {
        "name": "unittest.TestResult.skipped",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.skipped"
    },
    {
        "name": "unittest.TestResult.startTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.startTest"
    },
    {
        "name": "unittest.TestResult.startTestRun()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.startTestRun"
    },
    {
        "name": "unittest.TestResult.stop()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.stop"
    },
    {
        "name": "unittest.TestResult.stopTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.stopTest"
    },
    {
        "name": "unittest.TestResult.stopTestRun()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.stopTestRun"
    },
    {
        "name": "unittest.TestResult.testsRun",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.testsRun"
    },
    {
        "name": "unittest.TestResult.unexpectedSuccesses",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.unexpectedSuccesses"
    },
    {
        "name": "unittest.TestResult.wasSuccessful()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestResult.wasSuccessful"
    },
    {
        "name": "unittest.TestSuite",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite"
    },
    {
        "name": "unittest.TestSuite.addTest()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.addTest"
    },
    {
        "name": "unittest.TestSuite.addTests()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.addTests"
    },
    {
        "name": "unittest.TestSuite.countTestCases()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.countTestCases"
    },
    {
        "name": "unittest.TestSuite.debug()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.debug"
    },
    {
        "name": "unittest.TestSuite.run()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.run"
    },
    {
        "name": "unittest.TestSuite.__iter__()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TestSuite.__iter__"
    },
    {
        "name": "unittest.TextTestResult",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TextTestResult"
    },
    {
        "name": "unittest.TextTestRunner",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TextTestRunner"
    },
    {
        "name": "unittest.TextTestRunner.run()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TextTestRunner.run"
    },
    {
        "name": "unittest.TextTestRunner._makeResult()",
        "type": "Development Tools",
        "path": "library/unittest#unittest.TextTestRunner._makeResult"
    },
    {
        "name": "urllib",
        "type": "Internet",
        "path": "library/urllib"
    },
    {
        "name": "urllib.error",
        "type": "Internet",
        "path": "library/urllib.error"
    },
    {
        "name": "urllib.error.ContentTooShortError",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.ContentTooShortError"
    },
    {
        "name": "urllib.error.HTTPError",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.HTTPError"
    },
    {
        "name": "urllib.error.HTTPError.code",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.HTTPError.code"
    },
    {
        "name": "urllib.error.HTTPError.headers",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.HTTPError.headers"
    },
    {
        "name": "urllib.error.HTTPError.reason",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.HTTPError.reason"
    },
    {
        "name": "urllib.error.URLError",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.URLError"
    },
    {
        "name": "urllib.error.URLError.reason",
        "type": "Internet",
        "path": "library/urllib.error#urllib.error.URLError.reason"
    },
    {
        "name": "urllib.parse",
        "type": "Internet",
        "path": "library/urllib.parse"
    },
    {
        "name": "urllib.parse.DefragResult",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.DefragResult"
    },
    {
        "name": "urllib.parse.DefragResultBytes",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.DefragResultBytes"
    },
    {
        "name": "urllib.parse.ParseResult",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.ParseResult"
    },
    {
        "name": "urllib.parse.ParseResultBytes",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.ParseResultBytes"
    },
    {
        "name": "urllib.parse.parse_qs()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.parse_qs"
    },
    {
        "name": "urllib.parse.parse_qsl()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.parse_qsl"
    },
    {
        "name": "urllib.parse.quote()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.quote"
    },
    {
        "name": "urllib.parse.quote_from_bytes()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.quote_from_bytes"
    },
    {
        "name": "urllib.parse.quote_plus()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.quote_plus"
    },
    {
        "name": "urllib.parse.SplitResult",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.SplitResult"
    },
    {
        "name": "urllib.parse.SplitResultBytes",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.SplitResultBytes"
    },
    {
        "name": "urllib.parse.unquote()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.unquote"
    },
    {
        "name": "urllib.parse.unquote_plus()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.unquote_plus"
    },
    {
        "name": "urllib.parse.unquote_to_bytes()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.unquote_to_bytes"
    },
    {
        "name": "urllib.parse.urldefrag()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urldefrag"
    },
    {
        "name": "urllib.parse.urlencode()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urlencode"
    },
    {
        "name": "urllib.parse.urljoin()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urljoin"
    },
    {
        "name": "urllib.parse.urllib.parse.SplitResult.geturl()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urllib.parse.SplitResult.geturl"
    },
    {
        "name": "urllib.parse.urlparse()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urlparse"
    },
    {
        "name": "urllib.parse.urlsplit()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urlsplit"
    },
    {
        "name": "urllib.parse.urlunparse()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urlunparse"
    },
    {
        "name": "urllib.parse.urlunsplit()",
        "type": "Internet",
        "path": "library/urllib.parse#urllib.parse.urlunsplit"
    },
    {
        "name": "urllib.request",
        "type": "Internet",
        "path": "library/urllib.request"
    },
    {
        "name": "urllib.request.AbstractBasicAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.AbstractBasicAuthHandler"
    },
    {
        "name": "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"
    },
    {
        "name": "urllib.request.AbstractDigestAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.AbstractDigestAuthHandler"
    },
    {
        "name": "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"
    },
    {
        "name": "urllib.request.BaseHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler"
    },
    {
        "name": "urllib.request.BaseHandler.add_parent()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.add_parent"
    },
    {
        "name": "urllib.request.BaseHandler.close()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.close"
    },
    {
        "name": "urllib.request.BaseHandler.default_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.default_open"
    },
    {
        "name": "urllib.request.BaseHandler.http_error_default()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.http_error_default"
    },
    {
        "name": "urllib.request.BaseHandler.http_error_nnn()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.http_error_nnn"
    },
    {
        "name": "urllib.request.BaseHandler.parent",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.parent"
    },
    {
        "name": "urllib.request.BaseHandler.unknown_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.BaseHandler.unknown_open"
    },
    {
        "name": "urllib.request.build_opener()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.build_opener"
    },
    {
        "name": "urllib.request.CacheFTPHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.CacheFTPHandler"
    },
    {
        "name": "urllib.request.CacheFTPHandler.setMaxConns()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.CacheFTPHandler.setMaxConns"
    },
    {
        "name": "urllib.request.CacheFTPHandler.setTimeout()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.CacheFTPHandler.setTimeout"
    },
    {
        "name": "urllib.request.DataHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.DataHandler"
    },
    {
        "name": "urllib.request.DataHandler.data_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.DataHandler.data_open"
    },
    {
        "name": "urllib.request.FancyURLopener",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FancyURLopener"
    },
    {
        "name": "urllib.request.FancyURLopener.prompt_user_passwd()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FancyURLopener.prompt_user_passwd"
    },
    {
        "name": "urllib.request.FileHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FileHandler"
    },
    {
        "name": "urllib.request.FileHandler.file_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FileHandler.file_open"
    },
    {
        "name": "urllib.request.FTPHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FTPHandler"
    },
    {
        "name": "urllib.request.FTPHandler.ftp_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.FTPHandler.ftp_open"
    },
    {
        "name": "urllib.request.getproxies()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.getproxies"
    },
    {
        "name": "urllib.request.HTTPBasicAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPBasicAuthHandler"
    },
    {
        "name": "urllib.request.HTTPBasicAuthHandler.http_error_401()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPBasicAuthHandler.http_error_401"
    },
    {
        "name": "urllib.request.HTTPCookieProcessor",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPCookieProcessor"
    },
    {
        "name": "urllib.request.HTTPCookieProcessor.cookiejar",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPCookieProcessor.cookiejar"
    },
    {
        "name": "urllib.request.HTTPDefaultErrorHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPDefaultErrorHandler"
    },
    {
        "name": "urllib.request.HTTPDigestAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPDigestAuthHandler"
    },
    {
        "name": "urllib.request.HTTPDigestAuthHandler.http_error_401()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPDigestAuthHandler.http_error_401"
    },
    {
        "name": "urllib.request.HTTPErrorProcessor",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPErrorProcessor"
    },
    {
        "name": "urllib.request.HTTPErrorProcessor.https_response()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPErrorProcessor.https_response"
    },
    {
        "name": "urllib.request.HTTPErrorProcessor.http_response()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPErrorProcessor.http_response"
    },
    {
        "name": "urllib.request.HTTPHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPHandler"
    },
    {
        "name": "urllib.request.HTTPHandler.http_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPHandler.http_open"
    },
    {
        "name": "urllib.request.HTTPPasswordMgr",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPPasswordMgr"
    },
    {
        "name": "urllib.request.HTTPPasswordMgr.add_password()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPPasswordMgr.add_password"
    },
    {
        "name": "urllib.request.HTTPPasswordMgr.find_user_password()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPPasswordMgr.find_user_password"
    },
    {
        "name": "urllib.request.HTTPPasswordMgrWithDefaultRealm",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPPasswordMgrWithDefaultRealm"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler.http_error_301()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler.http_error_301"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler.http_error_302()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler.http_error_302"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler.http_error_303()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler.http_error_303"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler.http_error_307()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler.http_error_307"
    },
    {
        "name": "urllib.request.HTTPRedirectHandler.redirect_request()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPRedirectHandler.redirect_request"
    },
    {
        "name": "urllib.request.HTTPSHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPSHandler"
    },
    {
        "name": "urllib.request.HTTPSHandler.https_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.HTTPSHandler.https_open"
    },
    {
        "name": "urllib.request.install_opener()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.install_opener"
    },
    {
        "name": "urllib.request.OpenerDirector",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.OpenerDirector"
    },
    {
        "name": "urllib.request.OpenerDirector.add_handler()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.OpenerDirector.add_handler"
    },
    {
        "name": "urllib.request.OpenerDirector.error()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.OpenerDirector.error"
    },
    {
        "name": "urllib.request.OpenerDirector.open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.OpenerDirector.open"
    },
    {
        "name": "urllib.request.pathname2url()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.pathname2url"
    },
    {
        "name": "urllib.request.ProxyBasicAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.ProxyBasicAuthHandler"
    },
    {
        "name": "urllib.request.ProxyBasicAuthHandler.http_error_407()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.ProxyBasicAuthHandler.http_error_407"
    },
    {
        "name": "urllib.request.ProxyDigestAuthHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.ProxyDigestAuthHandler"
    },
    {
        "name": "urllib.request.ProxyDigestAuthHandler.http_error_407()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.ProxyDigestAuthHandler.http_error_407"
    },
    {
        "name": "urllib.request.ProxyHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.ProxyHandler"
    },
    {
        "name": "urllib.request.Request",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request"
    },
    {
        "name": "urllib.request.Request.add_header()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.add_header"
    },
    {
        "name": "urllib.request.Request.add_unredirected_header()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.add_unredirected_header"
    },
    {
        "name": "urllib.request.Request.data",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.data"
    },
    {
        "name": "urllib.request.Request.full_url",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.full_url"
    },
    {
        "name": "urllib.request.Request.get_full_url()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.get_full_url"
    },
    {
        "name": "urllib.request.Request.get_header()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.get_header"
    },
    {
        "name": "urllib.request.Request.get_method()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.get_method"
    },
    {
        "name": "urllib.request.Request.has_header()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.has_header"
    },
    {
        "name": "urllib.request.Request.header_items()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.header_items"
    },
    {
        "name": "urllib.request.Request.host",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.host"
    },
    {
        "name": "urllib.request.Request.method",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.method"
    },
    {
        "name": "urllib.request.Request.origin_req_host",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.origin_req_host"
    },
    {
        "name": "urllib.request.Request.remove_header()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.remove_header"
    },
    {
        "name": "urllib.request.Request.selector",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.selector"
    },
    {
        "name": "urllib.request.Request.set_proxy()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.set_proxy"
    },
    {
        "name": "urllib.request.Request.type",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.type"
    },
    {
        "name": "urllib.request.Request.unverifiable",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.Request.unverifiable"
    },
    {
        "name": "urllib.request.UnknownHandler",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.UnknownHandler"
    },
    {
        "name": "urllib.request.UnknownHandler.unknown_open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.UnknownHandler.unknown_open"
    },
    {
        "name": "urllib.request.url2pathname()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.url2pathname"
    },
    {
        "name": "urllib.request.urlcleanup()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.urlcleanup"
    },
    {
        "name": "urllib.request.urlopen()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.urlopen"
    },
    {
        "name": "urllib.request.URLopener",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.URLopener"
    },
    {
        "name": "urllib.request.URLopener.open()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.URLopener.open"
    },
    {
        "name": "urllib.request.URLopener.open_unknown()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.URLopener.open_unknown"
    },
    {
        "name": "urllib.request.URLopener.retrieve()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.URLopener.retrieve"
    },
    {
        "name": "urllib.request.URLopener.version",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.URLopener.version"
    },
    {
        "name": "urllib.request.urlretrieve()",
        "type": "Internet",
        "path": "library/urllib.request#urllib.request.urlretrieve"
    },
    {
        "name": "urllib.robotparser",
        "type": "Internet",
        "path": "library/urllib.robotparser"
    },
    {
        "name": "urllib.robotparser.RobotFileParser",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.can_fetch()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.can_fetch"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.modified()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.modified"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.mtime()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.mtime"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.parse()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.parse"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.read()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.read"
    },
    {
        "name": "urllib.robotparser.RobotFileParser.set_url()",
        "type": "Internet",
        "path": "library/urllib.robotparser#urllib.robotparser.RobotFileParser.set_url"
    },
    {
        "name": "UserWarning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#UserWarning"
    },
    {
        "name": "uu",
        "type": "Internet Data",
        "path": "library/uu"
    },
    {
        "name": "uu.decode()",
        "type": "Internet Data",
        "path": "library/uu#uu.decode"
    },
    {
        "name": "uu.encode()",
        "type": "Internet Data",
        "path": "library/uu#uu.encode"
    },
    {
        "name": "uu.Error",
        "type": "Internet Data",
        "path": "library/uu#uu.Error"
    },
    {
        "name": "uuid",
        "type": "Internet",
        "path": "library/uuid"
    },
    {
        "name": "uuid.getnode()",
        "type": "Internet",
        "path": "library/uuid#uuid.getnode"
    },
    {
        "name": "uuid.UUID",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID"
    },
    {
        "name": "uuid.UUID.bytes",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.bytes"
    },
    {
        "name": "uuid.UUID.bytes_le",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.bytes_le"
    },
    {
        "name": "uuid.UUID.fields",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.fields"
    },
    {
        "name": "uuid.UUID.hex",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.hex"
    },
    {
        "name": "uuid.UUID.int",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.int"
    },
    {
        "name": "uuid.UUID.urn",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.urn"
    },
    {
        "name": "uuid.UUID.variant",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.variant"
    },
    {
        "name": "uuid.UUID.version",
        "type": "Internet",
        "path": "library/uuid#uuid.UUID.version"
    },
    {
        "name": "uuid.uuid1()",
        "type": "Internet",
        "path": "library/uuid#uuid.uuid1"
    },
    {
        "name": "uuid.uuid3()",
        "type": "Internet",
        "path": "library/uuid#uuid.uuid3"
    },
    {
        "name": "uuid.uuid4()",
        "type": "Internet",
        "path": "library/uuid#uuid.uuid4"
    },
    {
        "name": "uuid.uuid5()",
        "type": "Internet",
        "path": "library/uuid#uuid.uuid5"
    },
    {
        "name": "ValueError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ValueError"
    },
    {
        "name": "vars()",
        "type": "Built-in Functions",
        "path": "library/functions#vars"
    },
    {
        "name": "venv",
        "type": "Software Packaging & Distribution",
        "path": "library/venv"
    },
    {
        "name": "venv.create()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.create"
    },
    {
        "name": "venv.EnvBuilder",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder"
    },
    {
        "name": "venv.EnvBuilder.create()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.create"
    },
    {
        "name": "venv.EnvBuilder.create_configuration()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.create_configuration"
    },
    {
        "name": "venv.EnvBuilder.ensure_directories()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.ensure_directories"
    },
    {
        "name": "venv.EnvBuilder.install_scripts()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.install_scripts"
    },
    {
        "name": "venv.EnvBuilder.post_setup()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.post_setup"
    },
    {
        "name": "venv.EnvBuilder.setup_python()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.setup_python"
    },
    {
        "name": "venv.EnvBuilder.setup_scripts()",
        "type": "Software Packaging & Distribution",
        "path": "library/venv#venv.EnvBuilder.setup_scripts"
    },
    {
        "name": "Warning",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#Warning"
    },
    {
        "name": "warnings",
        "type": "Runtime",
        "path": "library/warnings"
    },
    {
        "name": "warnings.catch_warnings",
        "type": "Runtime",
        "path": "library/warnings#warnings.catch_warnings"
    },
    {
        "name": "warnings.filterwarnings()",
        "type": "Runtime",
        "path": "library/warnings#warnings.filterwarnings"
    },
    {
        "name": "warnings.formatwarning()",
        "type": "Runtime",
        "path": "library/warnings#warnings.formatwarning"
    },
    {
        "name": "warnings.resetwarnings()",
        "type": "Runtime",
        "path": "library/warnings#warnings.resetwarnings"
    },
    {
        "name": "warnings.showwarning()",
        "type": "Runtime",
        "path": "library/warnings#warnings.showwarning"
    },
    {
        "name": "warnings.simplefilter()",
        "type": "Runtime",
        "path": "library/warnings#warnings.simplefilter"
    },
    {
        "name": "warnings.warn()",
        "type": "Runtime",
        "path": "library/warnings#warnings.warn"
    },
    {
        "name": "warnings.warn_explicit()",
        "type": "Runtime",
        "path": "library/warnings#warnings.warn_explicit"
    },
    {
        "name": "wave",
        "type": "Multimedia",
        "path": "library/wave"
    },
    {
        "name": "wave.Error",
        "type": "Multimedia",
        "path": "library/wave#wave.Error"
    },
    {
        "name": "wave.open()",
        "type": "Multimedia",
        "path": "library/wave#wave.open"
    },
    {
        "name": "wave.openfp()",
        "type": "Multimedia",
        "path": "library/wave#wave.openfp"
    },
    {
        "name": "wave.Wave_read.close()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.close"
    },
    {
        "name": "wave.Wave_read.getcompname()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getcompname"
    },
    {
        "name": "wave.Wave_read.getcomptype()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getcomptype"
    },
    {
        "name": "wave.Wave_read.getframerate()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getframerate"
    },
    {
        "name": "wave.Wave_read.getmark()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getmark"
    },
    {
        "name": "wave.Wave_read.getmarkers()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getmarkers"
    },
    {
        "name": "wave.Wave_read.getnchannels()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getnchannels"
    },
    {
        "name": "wave.Wave_read.getnframes()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getnframes"
    },
    {
        "name": "wave.Wave_read.getparams()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getparams"
    },
    {
        "name": "wave.Wave_read.getsampwidth()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.getsampwidth"
    },
    {
        "name": "wave.Wave_read.readframes()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.readframes"
    },
    {
        "name": "wave.Wave_read.rewind()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.rewind"
    },
    {
        "name": "wave.Wave_read.setpos()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.setpos"
    },
    {
        "name": "wave.Wave_read.tell()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_read.tell"
    },
    {
        "name": "wave.Wave_write.close()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.close"
    },
    {
        "name": "wave.Wave_write.setcomptype()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setcomptype"
    },
    {
        "name": "wave.Wave_write.setframerate()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setframerate"
    },
    {
        "name": "wave.Wave_write.setnchannels()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setnchannels"
    },
    {
        "name": "wave.Wave_write.setnframes()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setnframes"
    },
    {
        "name": "wave.Wave_write.setparams()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setparams"
    },
    {
        "name": "wave.Wave_write.setsampwidth()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.setsampwidth"
    },
    {
        "name": "wave.Wave_write.tell()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.tell"
    },
    {
        "name": "wave.Wave_write.writeframes()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.writeframes"
    },
    {
        "name": "wave.Wave_write.writeframesraw()",
        "type": "Multimedia",
        "path": "library/wave#wave.Wave_write.writeframesraw"
    },
    {
        "name": "weakref",
        "type": "Data Types",
        "path": "library/weakref"
    },
    {
        "name": "weakref.CallableProxyType",
        "type": "Data Types",
        "path": "library/weakref#weakref.CallableProxyType"
    },
    {
        "name": "weakref.finalize",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize"
    },
    {
        "name": "weakref.finalize.alive",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize.alive"
    },
    {
        "name": "weakref.finalize.atexit",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize.atexit"
    },
    {
        "name": "weakref.finalize.detach()",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize.detach"
    },
    {
        "name": "weakref.finalize.peek()",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize.peek"
    },
    {
        "name": "weakref.finalize.__call__()",
        "type": "Data Types",
        "path": "library/weakref#weakref.finalize.__call__"
    },
    {
        "name": "weakref.getweakrefcount()",
        "type": "Data Types",
        "path": "library/weakref#weakref.getweakrefcount"
    },
    {
        "name": "weakref.getweakrefs()",
        "type": "Data Types",
        "path": "library/weakref#weakref.getweakrefs"
    },
    {
        "name": "weakref.proxy()",
        "type": "Data Types",
        "path": "library/weakref#weakref.proxy"
    },
    {
        "name": "weakref.ProxyType",
        "type": "Data Types",
        "path": "library/weakref#weakref.ProxyType"
    },
    {
        "name": "weakref.ProxyTypes",
        "type": "Data Types",
        "path": "library/weakref#weakref.ProxyTypes"
    },
    {
        "name": "weakref.ref",
        "type": "Data Types",
        "path": "library/weakref#weakref.ref"
    },
    {
        "name": "weakref.ref.__callback__",
        "type": "Data Types",
        "path": "library/weakref#weakref.ref.__callback__"
    },
    {
        "name": "weakref.ReferenceError",
        "type": "Data Types",
        "path": "library/weakref#weakref.ReferenceError"
    },
    {
        "name": "weakref.ReferenceType",
        "type": "Data Types",
        "path": "library/weakref#weakref.ReferenceType"
    },
    {
        "name": "weakref.WeakKeyDictionary",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakKeyDictionary"
    },
    {
        "name": "weakref.WeakKeyDictionary.keyrefs()",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakKeyDictionary.keyrefs"
    },
    {
        "name": "weakref.WeakMethod",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakMethod"
    },
    {
        "name": "weakref.WeakSet",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakSet"
    },
    {
        "name": "weakref.WeakValueDictionary",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakValueDictionary"
    },
    {
        "name": "weakref.WeakValueDictionary.valuerefs()",
        "type": "Data Types",
        "path": "library/weakref#weakref.WeakValueDictionary.valuerefs"
    },
    {
        "name": "webbrowser",
        "type": "Internet",
        "path": "library/webbrowser"
    },
    {
        "name": "webbrowser.controller.open()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.controller.open"
    },
    {
        "name": "webbrowser.controller.open_new()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.controller.open_new"
    },
    {
        "name": "webbrowser.controller.open_new_tab()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.controller.open_new_tab"
    },
    {
        "name": "webbrowser.Error",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.Error"
    },
    {
        "name": "webbrowser.get()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.get"
    },
    {
        "name": "webbrowser.open()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.open"
    },
    {
        "name": "webbrowser.open_new()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.open_new"
    },
    {
        "name": "webbrowser.open_new_tab()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.open_new_tab"
    },
    {
        "name": "webbrowser.register()",
        "type": "Internet",
        "path": "library/webbrowser#webbrowser.register"
    },
    {
        "name": "WindowsError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#WindowsError"
    },
    {
        "name": "winreg",
        "type": "MS Windows",
        "path": "library/winreg"
    },
    {
        "name": "winreg.CloseKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.CloseKey"
    },
    {
        "name": "winreg.ConnectRegistry()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.ConnectRegistry"
    },
    {
        "name": "winreg.CreateKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.CreateKey"
    },
    {
        "name": "winreg.CreateKeyEx()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.CreateKeyEx"
    },
    {
        "name": "winreg.DeleteKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.DeleteKey"
    },
    {
        "name": "winreg.DeleteKeyEx()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.DeleteKeyEx"
    },
    {
        "name": "winreg.DeleteValue()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.DeleteValue"
    },
    {
        "name": "winreg.DisableReflectionKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.DisableReflectionKey"
    },
    {
        "name": "winreg.EnableReflectionKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.EnableReflectionKey"
    },
    {
        "name": "winreg.EnumKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.EnumKey"
    },
    {
        "name": "winreg.EnumValue()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.EnumValue"
    },
    {
        "name": "winreg.ExpandEnvironmentStrings()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.ExpandEnvironmentStrings"
    },
    {
        "name": "winreg.FlushKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.FlushKey"
    },
    {
        "name": "winreg.LoadKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.LoadKey"
    },
    {
        "name": "winreg.OpenKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.OpenKey"
    },
    {
        "name": "winreg.OpenKeyEx()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.OpenKeyEx"
    },
    {
        "name": "winreg.PyHKEY.Close()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.PyHKEY.Close"
    },
    {
        "name": "winreg.PyHKEY.Detach()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.PyHKEY.Detach"
    },
    {
        "name": "winreg.PyHKEY.__enter__()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.PyHKEY.__enter__"
    },
    {
        "name": "winreg.PyHKEY.__exit__()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.PyHKEY.__exit__"
    },
    {
        "name": "winreg.QueryInfoKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.QueryInfoKey"
    },
    {
        "name": "winreg.QueryReflectionKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.QueryReflectionKey"
    },
    {
        "name": "winreg.QueryValue()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.QueryValue"
    },
    {
        "name": "winreg.QueryValueEx()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.QueryValueEx"
    },
    {
        "name": "winreg.SaveKey()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.SaveKey"
    },
    {
        "name": "winreg.SetValue()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.SetValue"
    },
    {
        "name": "winreg.SetValueEx()",
        "type": "MS Windows",
        "path": "library/winreg#winreg.SetValueEx"
    },
    {
        "name": "winsound",
        "type": "MS Windows",
        "path": "library/winsound"
    },
    {
        "name": "winsound.Beep()",
        "type": "MS Windows",
        "path": "library/winsound#winsound.Beep"
    },
    {
        "name": "winsound.MessageBeep()",
        "type": "MS Windows",
        "path": "library/winsound#winsound.MessageBeep"
    },
    {
        "name": "winsound.PlaySound()",
        "type": "MS Windows",
        "path": "library/winsound#winsound.PlaySound"
    },
    {
        "name": "wsgiref",
        "type": "Internet",
        "path": "library/wsgiref"
    },
    {
        "name": "wsgiref.handlers.BaseCGIHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseCGIHandler"
    },
    {
        "name": "wsgiref.handlers.BaseHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.add_cgi_vars()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.add_cgi_vars"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.error_body",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.error_body"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.error_headers",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.error_headers"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.error_output()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.error_output"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.error_status",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.error_status"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.get_scheme()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.get_scheme"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.get_stderr()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.get_stderr"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.get_stdin()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.get_stdin"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.http_version",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.http_version"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.log_exception()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.log_exception"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.origin_server",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.origin_server"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.os_environ",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.os_environ"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.run()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.run"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.sendfile()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.sendfile"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.server_software",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.server_software"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.setup_environ()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.setup_environ"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.traceback_limit",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.traceback_limit"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.wsgi_file_wrapper",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.wsgi_file_wrapper"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.wsgi_multiprocess",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.wsgi_multiprocess"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.wsgi_multithread",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.wsgi_multithread"
    },
    {
        "name": "wsgiref.handlers.BaseHandler.wsgi_run_once",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler.wsgi_run_once"
    },
    {
        "name": "wsgiref.handlers.BaseHandler._flush()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler._flush"
    },
    {
        "name": "wsgiref.handlers.BaseHandler._write()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.BaseHandler._write"
    },
    {
        "name": "wsgiref.handlers.CGIHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.CGIHandler"
    },
    {
        "name": "wsgiref.handlers.IISCGIHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.IISCGIHandler"
    },
    {
        "name": "wsgiref.handlers.read_environ()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.read_environ"
    },
    {
        "name": "wsgiref.handlers.SimpleHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.handlers.SimpleHandler"
    },
    {
        "name": "wsgiref.headers.Headers",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.headers.Headers"
    },
    {
        "name": "wsgiref.headers.Headers.add_header()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.headers.Headers.add_header"
    },
    {
        "name": "wsgiref.headers.Headers.get_all()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.headers.Headers.get_all"
    },
    {
        "name": "wsgiref.simple_server.demo_app()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.demo_app"
    },
    {
        "name": "wsgiref.simple_server.make_server()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.make_server"
    },
    {
        "name": "wsgiref.simple_server.WSGIRequestHandler",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIRequestHandler"
    },
    {
        "name": "wsgiref.simple_server.WSGIRequestHandler.get_environ()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIRequestHandler.get_environ"
    },
    {
        "name": "wsgiref.simple_server.WSGIRequestHandler.get_stderr()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIRequestHandler.get_stderr"
    },
    {
        "name": "wsgiref.simple_server.WSGIRequestHandler.handle()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIRequestHandler.handle"
    },
    {
        "name": "wsgiref.simple_server.WSGIServer",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIServer"
    },
    {
        "name": "wsgiref.simple_server.WSGIServer.get_app()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIServer.get_app"
    },
    {
        "name": "wsgiref.simple_server.WSGIServer.set_app()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.simple_server.WSGIServer.set_app"
    },
    {
        "name": "wsgiref.util.application_uri()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.application_uri"
    },
    {
        "name": "wsgiref.util.FileWrapper",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.FileWrapper"
    },
    {
        "name": "wsgiref.util.guess_scheme()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.guess_scheme"
    },
    {
        "name": "wsgiref.util.is_hop_by_hop()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.is_hop_by_hop"
    },
    {
        "name": "wsgiref.util.request_uri()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.request_uri"
    },
    {
        "name": "wsgiref.util.setup_testing_defaults()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.setup_testing_defaults"
    },
    {
        "name": "wsgiref.util.shift_path_info()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.util.shift_path_info"
    },
    {
        "name": "wsgiref.validate.validator()",
        "type": "Internet",
        "path": "library/wsgiref#wsgiref.validate.validator"
    },
    {
        "name": "xdrlib",
        "type": "File Formats",
        "path": "library/xdrlib"
    },
    {
        "name": "xdrlib.ConversionError",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.ConversionError"
    },
    {
        "name": "xdrlib.Error",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Error"
    },
    {
        "name": "xdrlib.Packer",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer"
    },
    {
        "name": "xdrlib.Packer.get_buffer()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.get_buffer"
    },
    {
        "name": "xdrlib.Packer.pack_array()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_array"
    },
    {
        "name": "xdrlib.Packer.pack_bytes()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_bytes"
    },
    {
        "name": "xdrlib.Packer.pack_double()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_double"
    },
    {
        "name": "xdrlib.Packer.pack_farray()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_farray"
    },
    {
        "name": "xdrlib.Packer.pack_float()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_float"
    },
    {
        "name": "xdrlib.Packer.pack_fopaque()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_fopaque"
    },
    {
        "name": "xdrlib.Packer.pack_fstring()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_fstring"
    },
    {
        "name": "xdrlib.Packer.pack_list()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_list"
    },
    {
        "name": "xdrlib.Packer.pack_opaque()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_opaque"
    },
    {
        "name": "xdrlib.Packer.pack_string()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.pack_string"
    },
    {
        "name": "xdrlib.Packer.reset()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Packer.reset"
    },
    {
        "name": "xdrlib.Unpacker",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker"
    },
    {
        "name": "xdrlib.Unpacker.done()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.done"
    },
    {
        "name": "xdrlib.Unpacker.get_buffer()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.get_buffer"
    },
    {
        "name": "xdrlib.Unpacker.get_position()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.get_position"
    },
    {
        "name": "xdrlib.Unpacker.reset()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.reset"
    },
    {
        "name": "xdrlib.Unpacker.set_position()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.set_position"
    },
    {
        "name": "xdrlib.Unpacker.unpack_array()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_array"
    },
    {
        "name": "xdrlib.Unpacker.unpack_bytes()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_bytes"
    },
    {
        "name": "xdrlib.Unpacker.unpack_double()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_double"
    },
    {
        "name": "xdrlib.Unpacker.unpack_farray()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_farray"
    },
    {
        "name": "xdrlib.Unpacker.unpack_float()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_float"
    },
    {
        "name": "xdrlib.Unpacker.unpack_fopaque()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_fopaque"
    },
    {
        "name": "xdrlib.Unpacker.unpack_fstring()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_fstring"
    },
    {
        "name": "xdrlib.Unpacker.unpack_list()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_list"
    },
    {
        "name": "xdrlib.Unpacker.unpack_opaque()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_opaque"
    },
    {
        "name": "xdrlib.Unpacker.unpack_string()",
        "type": "File Formats",
        "path": "library/xdrlib#xdrlib.Unpacker.unpack_string"
    },
    {
        "name": "XML Processing Modules",
        "type": "Structured Markup",
        "path": "library/xml"
    },
    {
        "name": "xml.dom",
        "type": "Structured Markup",
        "path": "library/xml.dom"
    },
    {
        "name": "xml.dom.Attr.localName",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Attr.localName"
    },
    {
        "name": "xml.dom.Attr.name",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Attr.name"
    },
    {
        "name": "xml.dom.Attr.prefix",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Attr.prefix"
    },
    {
        "name": "xml.dom.Attr.value",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Attr.value"
    },
    {
        "name": "xml.dom.Comment.data",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Comment.data"
    },
    {
        "name": "xml.dom.Document.createAttribute()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createAttribute"
    },
    {
        "name": "xml.dom.Document.createAttributeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createAttributeNS"
    },
    {
        "name": "xml.dom.Document.createComment()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createComment"
    },
    {
        "name": "xml.dom.Document.createElement()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createElement"
    },
    {
        "name": "xml.dom.Document.createElementNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createElementNS"
    },
    {
        "name": "xml.dom.Document.createProcessingInstruction()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createProcessingInstruction"
    },
    {
        "name": "xml.dom.Document.createTextNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.createTextNode"
    },
    {
        "name": "xml.dom.Document.documentElement",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.documentElement"
    },
    {
        "name": "xml.dom.Document.getElementsByTagName()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.getElementsByTagName"
    },
    {
        "name": "xml.dom.Document.getElementsByTagNameNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Document.getElementsByTagNameNS"
    },
    {
        "name": "xml.dom.DocumentType.entities",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.entities"
    },
    {
        "name": "xml.dom.DocumentType.internalSubset",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.internalSubset"
    },
    {
        "name": "xml.dom.DocumentType.name",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.name"
    },
    {
        "name": "xml.dom.DocumentType.notations",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.notations"
    },
    {
        "name": "xml.dom.DocumentType.publicId",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.publicId"
    },
    {
        "name": "xml.dom.DocumentType.systemId",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DocumentType.systemId"
    },
    {
        "name": "xml.dom.DOMException",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DOMException"
    },
    {
        "name": "xml.dom.DOMImplementation.createDocument()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DOMImplementation.createDocument"
    },
    {
        "name": "xml.dom.DOMImplementation.createDocumentType()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DOMImplementation.createDocumentType"
    },
    {
        "name": "xml.dom.DOMImplementation.hasFeature()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DOMImplementation.hasFeature"
    },
    {
        "name": "xml.dom.DomstringSizeErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.DomstringSizeErr"
    },
    {
        "name": "xml.dom.Element.getAttribute()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getAttribute"
    },
    {
        "name": "xml.dom.Element.getAttributeNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getAttributeNode"
    },
    {
        "name": "xml.dom.Element.getAttributeNodeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getAttributeNodeNS"
    },
    {
        "name": "xml.dom.Element.getAttributeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getAttributeNS"
    },
    {
        "name": "xml.dom.Element.getElementsByTagName()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getElementsByTagName"
    },
    {
        "name": "xml.dom.Element.getElementsByTagNameNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.getElementsByTagNameNS"
    },
    {
        "name": "xml.dom.Element.hasAttribute()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.hasAttribute"
    },
    {
        "name": "xml.dom.Element.hasAttributeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.hasAttributeNS"
    },
    {
        "name": "xml.dom.Element.removeAttribute()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.removeAttribute"
    },
    {
        "name": "xml.dom.Element.removeAttributeNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.removeAttributeNode"
    },
    {
        "name": "xml.dom.Element.removeAttributeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.removeAttributeNS"
    },
    {
        "name": "xml.dom.Element.setAttribute()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.setAttribute"
    },
    {
        "name": "xml.dom.Element.setAttributeNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.setAttributeNode"
    },
    {
        "name": "xml.dom.Element.setAttributeNodeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.setAttributeNodeNS"
    },
    {
        "name": "xml.dom.Element.setAttributeNS()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.setAttributeNS"
    },
    {
        "name": "xml.dom.Element.tagName",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Element.tagName"
    },
    {
        "name": "xml.dom.getDOMImplementation()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.getDOMImplementation"
    },
    {
        "name": "xml.dom.HierarchyRequestErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.HierarchyRequestErr"
    },
    {
        "name": "xml.dom.IndexSizeErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.IndexSizeErr"
    },
    {
        "name": "xml.dom.InuseAttributeErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.InuseAttributeErr"
    },
    {
        "name": "xml.dom.InvalidAccessErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.InvalidAccessErr"
    },
    {
        "name": "xml.dom.InvalidCharacterErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.InvalidCharacterErr"
    },
    {
        "name": "xml.dom.InvalidModificationErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.InvalidModificationErr"
    },
    {
        "name": "xml.dom.InvalidStateErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.InvalidStateErr"
    },
    {
        "name": "xml.dom.minidom",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom"
    },
    {
        "name": "xml.dom.minidom.Node.toprettyxml()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.Node.toprettyxml"
    },
    {
        "name": "xml.dom.minidom.Node.toxml()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.Node.toxml"
    },
    {
        "name": "xml.dom.minidom.Node.unlink()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.Node.unlink"
    },
    {
        "name": "xml.dom.minidom.Node.writexml()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.Node.writexml"
    },
    {
        "name": "xml.dom.minidom.parse()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.parse"
    },
    {
        "name": "xml.dom.minidom.parseString()",
        "type": "Structured Markup",
        "path": "library/xml.dom.minidom#xml.dom.minidom.parseString"
    },
    {
        "name": "xml.dom.NamedNodeMap.item()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NamedNodeMap.item"
    },
    {
        "name": "xml.dom.NamedNodeMap.length",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NamedNodeMap.length"
    },
    {
        "name": "xml.dom.NamespaceErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NamespaceErr"
    },
    {
        "name": "xml.dom.NoDataAllowedErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NoDataAllowedErr"
    },
    {
        "name": "xml.dom.Node.appendChild()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.appendChild"
    },
    {
        "name": "xml.dom.Node.attributes",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.attributes"
    },
    {
        "name": "xml.dom.Node.childNodes",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.childNodes"
    },
    {
        "name": "xml.dom.Node.cloneNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.cloneNode"
    },
    {
        "name": "xml.dom.Node.firstChild",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.firstChild"
    },
    {
        "name": "xml.dom.Node.hasAttributes()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.hasAttributes"
    },
    {
        "name": "xml.dom.Node.hasChildNodes()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.hasChildNodes"
    },
    {
        "name": "xml.dom.Node.insertBefore()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.insertBefore"
    },
    {
        "name": "xml.dom.Node.isSameNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.isSameNode"
    },
    {
        "name": "xml.dom.Node.lastChild",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.lastChild"
    },
    {
        "name": "xml.dom.Node.localName",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.localName"
    },
    {
        "name": "xml.dom.Node.namespaceURI",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.namespaceURI"
    },
    {
        "name": "xml.dom.Node.nextSibling",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.nextSibling"
    },
    {
        "name": "xml.dom.Node.nodeName",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.nodeName"
    },
    {
        "name": "xml.dom.Node.nodeType",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.nodeType"
    },
    {
        "name": "xml.dom.Node.nodeValue",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.nodeValue"
    },
    {
        "name": "xml.dom.Node.normalize()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.normalize"
    },
    {
        "name": "xml.dom.Node.parentNode",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.parentNode"
    },
    {
        "name": "xml.dom.Node.prefix",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.prefix"
    },
    {
        "name": "xml.dom.Node.previousSibling",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.previousSibling"
    },
    {
        "name": "xml.dom.Node.removeChild()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.removeChild"
    },
    {
        "name": "xml.dom.Node.replaceChild()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Node.replaceChild"
    },
    {
        "name": "xml.dom.NodeList.item()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NodeList.item"
    },
    {
        "name": "xml.dom.NodeList.length",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NodeList.length"
    },
    {
        "name": "xml.dom.NoModificationAllowedErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NoModificationAllowedErr"
    },
    {
        "name": "xml.dom.NotFoundErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NotFoundErr"
    },
    {
        "name": "xml.dom.NotSupportedErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.NotSupportedErr"
    },
    {
        "name": "xml.dom.ProcessingInstruction.data",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.ProcessingInstruction.data"
    },
    {
        "name": "xml.dom.ProcessingInstruction.target",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.ProcessingInstruction.target"
    },
    {
        "name": "xml.dom.pulldom",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom"
    },
    {
        "name": "xml.dom.pulldom.default_bufsize",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.default_bufsize"
    },
    {
        "name": "xml.dom.pulldom.DOMEventStream",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.DOMEventStream"
    },
    {
        "name": "xml.dom.pulldom.DOMEventStream.expandNode()",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.DOMEventStream.expandNode"
    },
    {
        "name": "xml.dom.pulldom.DOMEventStream.getEvent()",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.DOMEventStream.getEvent"
    },
    {
        "name": "xml.dom.pulldom.DOMEventStream.reset()",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.DOMEventStream.reset"
    },
    {
        "name": "xml.dom.pulldom.parse()",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.parse"
    },
    {
        "name": "xml.dom.pulldom.parseString()",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.parseString"
    },
    {
        "name": "xml.dom.pulldom.PullDom",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.PullDom"
    },
    {
        "name": "xml.dom.pulldom.SAX2DOM",
        "type": "Structured Markup",
        "path": "library/xml.dom.pulldom#xml.dom.pulldom.SAX2DOM"
    },
    {
        "name": "xml.dom.registerDOMImplementation()",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.registerDOMImplementation"
    },
    {
        "name": "xml.dom.SyntaxErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.SyntaxErr"
    },
    {
        "name": "xml.dom.Text.data",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.Text.data"
    },
    {
        "name": "xml.dom.WrongDocumentErr",
        "type": "Structured Markup",
        "path": "library/xml.dom#xml.dom.WrongDocumentErr"
    },
    {
        "name": "xml.etree.ElementTree",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree"
    },
    {
        "name": "xml.etree.ElementTree.Comment()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Comment"
    },
    {
        "name": "xml.etree.ElementTree.dump()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.dump"
    },
    {
        "name": "xml.etree.ElementTree.Element",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element"
    },
    {
        "name": "xml.etree.ElementTree.Element.append()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.append"
    },
    {
        "name": "xml.etree.ElementTree.Element.attrib",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.attrib"
    },
    {
        "name": "xml.etree.ElementTree.Element.clear()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.clear"
    },
    {
        "name": "xml.etree.ElementTree.Element.extend()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.extend"
    },
    {
        "name": "xml.etree.ElementTree.Element.find()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.find"
    },
    {
        "name": "xml.etree.ElementTree.Element.findall()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.findall"
    },
    {
        "name": "xml.etree.ElementTree.Element.findtext()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.findtext"
    },
    {
        "name": "xml.etree.ElementTree.Element.get()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.get"
    },
    {
        "name": "xml.etree.ElementTree.Element.getchildren()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.getchildren"
    },
    {
        "name": "xml.etree.ElementTree.Element.getiterator()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.getiterator"
    },
    {
        "name": "xml.etree.ElementTree.Element.insert()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.insert"
    },
    {
        "name": "xml.etree.ElementTree.Element.items()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.items"
    },
    {
        "name": "xml.etree.ElementTree.Element.iter()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.iter"
    },
    {
        "name": "xml.etree.ElementTree.Element.iterfind()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.iterfind"
    },
    {
        "name": "xml.etree.ElementTree.Element.itertext()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.itertext"
    },
    {
        "name": "xml.etree.ElementTree.Element.keys()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.keys"
    },
    {
        "name": "xml.etree.ElementTree.Element.makeelement()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.makeelement"
    },
    {
        "name": "xml.etree.ElementTree.Element.remove()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.remove"
    },
    {
        "name": "xml.etree.ElementTree.Element.set()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.set"
    },
    {
        "name": "xml.etree.ElementTree.Element.tag",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.tag"
    },
    {
        "name": "xml.etree.ElementTree.Element.tail",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.tail"
    },
    {
        "name": "xml.etree.ElementTree.Element.text",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.Element.text"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.find()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.find"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.findall()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.findall"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.findtext()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.findtext"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.getiterator()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.getiterator"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.getroot()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.getroot"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.iter()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.iter"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.iterfind()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.iterfind"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.parse()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.parse"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree.write()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree.write"
    },
    {
        "name": "xml.etree.ElementTree.ElementTree._setroot()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ElementTree._setroot"
    },
    {
        "name": "xml.etree.ElementTree.fromstring()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.fromstring"
    },
    {
        "name": "xml.etree.ElementTree.fromstringlist()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.fromstringlist"
    },
    {
        "name": "xml.etree.ElementTree.iselement()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.iselement"
    },
    {
        "name": "xml.etree.ElementTree.iterparse()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.iterparse"
    },
    {
        "name": "xml.etree.ElementTree.parse()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.parse"
    },
    {
        "name": "xml.etree.ElementTree.ParseError",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ParseError"
    },
    {
        "name": "xml.etree.ElementTree.ParseError.code",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ParseError.code"
    },
    {
        "name": "xml.etree.ElementTree.ParseError.position",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ParseError.position"
    },
    {
        "name": "xml.etree.ElementTree.ProcessingInstruction()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.ProcessingInstruction"
    },
    {
        "name": "xml.etree.ElementTree.QName",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.QName"
    },
    {
        "name": "xml.etree.ElementTree.register_namespace()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.register_namespace"
    },
    {
        "name": "xml.etree.ElementTree.SubElement()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.SubElement"
    },
    {
        "name": "xml.etree.ElementTree.tostring()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.tostring"
    },
    {
        "name": "xml.etree.ElementTree.tostringlist()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.tostringlist"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder.close()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder.close"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder.data()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder.data"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder.doctype()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder.doctype"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder.end()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder.end"
    },
    {
        "name": "xml.etree.ElementTree.TreeBuilder.start()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.TreeBuilder.start"
    },
    {
        "name": "xml.etree.ElementTree.XML()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XML"
    },
    {
        "name": "xml.etree.ElementTree.XMLID()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLID"
    },
    {
        "name": "xml.etree.ElementTree.XMLParser",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLParser"
    },
    {
        "name": "xml.etree.ElementTree.XMLParser.close()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLParser.close"
    },
    {
        "name": "xml.etree.ElementTree.XMLParser.doctype()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLParser.doctype"
    },
    {
        "name": "xml.etree.ElementTree.XMLParser.feed()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLParser.feed"
    },
    {
        "name": "xml.etree.ElementTree.XMLPullParser",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLPullParser"
    },
    {
        "name": "xml.etree.ElementTree.XMLPullParser.close()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLPullParser.close"
    },
    {
        "name": "xml.etree.ElementTree.XMLPullParser.feed()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLPullParser.feed"
    },
    {
        "name": "xml.etree.ElementTree.XMLPullParser.read_events()",
        "type": "Structured Markup",
        "path": "library/xml.etree.elementtree#xml.etree.ElementTree.XMLPullParser.read_events"
    },
    {
        "name": "xml.parsers.expat",
        "type": "Structured Markup",
        "path": "library/pyexpat"
    },
    {
        "name": "xml.parsers.expat.error",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.error"
    },
    {
        "name": "xml.parsers.expat.errors.codes",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.errors.codes"
    },
    {
        "name": "xml.parsers.expat.errors.messages",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.errors.messages"
    },
    {
        "name": "xml.parsers.expat.ErrorString()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ErrorString"
    },
    {
        "name": "xml.parsers.expat.ExpatError",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ExpatError"
    },
    {
        "name": "xml.parsers.expat.ExpatError.code",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ExpatError.code"
    },
    {
        "name": "xml.parsers.expat.ExpatError.lineno",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ExpatError.lineno"
    },
    {
        "name": "xml.parsers.expat.ExpatError.offset",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ExpatError.offset"
    },
    {
        "name": "xml.parsers.expat.ParserCreate()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.ParserCreate"
    },
    {
        "name": "xml.parsers.expat.xmlparser.AttlistDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.AttlistDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.buffer_size",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.buffer_size"
    },
    {
        "name": "xml.parsers.expat.xmlparser.buffer_text",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.buffer_text"
    },
    {
        "name": "xml.parsers.expat.xmlparser.buffer_used",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.buffer_used"
    },
    {
        "name": "xml.parsers.expat.xmlparser.CharacterDataHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.CharacterDataHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.CommentHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.CommentHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.CurrentByteIndex",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.CurrentByteIndex"
    },
    {
        "name": "xml.parsers.expat.xmlparser.CurrentColumnNumber",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.CurrentColumnNumber"
    },
    {
        "name": "xml.parsers.expat.xmlparser.CurrentLineNumber",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.CurrentLineNumber"
    },
    {
        "name": "xml.parsers.expat.xmlparser.DefaultHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.DefaultHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.DefaultHandlerExpand()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.DefaultHandlerExpand"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ElementDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ElementDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.EndCdataSectionHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.EndCdataSectionHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.EndDoctypeDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.EndElementHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.EndElementHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.EndNamespaceDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.EntityDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.EntityDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ErrorByteIndex",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ErrorByteIndex"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ErrorCode",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ErrorCode"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ErrorColumnNumber",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ErrorColumnNumber"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ErrorLineNumber",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ErrorLineNumber"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ExternalEntityParserCreate()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ExternalEntityParserCreate"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ExternalEntityRefHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ExternalEntityRefHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.GetBase()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.GetBase"
    },
    {
        "name": "xml.parsers.expat.xmlparser.GetInputContext()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.GetInputContext"
    },
    {
        "name": "xml.parsers.expat.xmlparser.NotationDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.NotationDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.NotStandaloneHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.NotStandaloneHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ordered_attributes",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ordered_attributes"
    },
    {
        "name": "xml.parsers.expat.xmlparser.Parse()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.Parse"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ParseFile()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ParseFile"
    },
    {
        "name": "xml.parsers.expat.xmlparser.ProcessingInstructionHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.ProcessingInstructionHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.SetBase()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.SetBase"
    },
    {
        "name": "xml.parsers.expat.xmlparser.SetParamEntityParsing()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.SetParamEntityParsing"
    },
    {
        "name": "xml.parsers.expat.xmlparser.specified_attributes",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.specified_attributes"
    },
    {
        "name": "xml.parsers.expat.xmlparser.StartCdataSectionHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.StartCdataSectionHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.StartDoctypeDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.StartElementHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.StartElementHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler"
    },
    {
        "name": "xml.parsers.expat.xmlparser.UseForeignDTD()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.UseForeignDTD"
    },
    {
        "name": "xml.parsers.expat.xmlparser.XmlDeclHandler()",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.xmlparser.XmlDeclHandler"
    },
    {
        "name": "xml.parsers.expat.XMLParserType",
        "type": "Structured Markup",
        "path": "library/pyexpat#xml.parsers.expat.XMLParserType"
    },
    {
        "name": "xml.sax",
        "type": "Structured Markup",
        "path": "library/xml.sax"
    },
    {
        "name": "xml.sax.handler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler"
    },
    {
        "name": "xml.sax.handler.all_features",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.all_features"
    },
    {
        "name": "xml.sax.handler.all_properties",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.all_properties"
    },
    {
        "name": "xml.sax.handler.ContentHandler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler"
    },
    {
        "name": "xml.sax.handler.ContentHandler.characters()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.characters"
    },
    {
        "name": "xml.sax.handler.ContentHandler.endDocument()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.endDocument"
    },
    {
        "name": "xml.sax.handler.ContentHandler.endElement()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.endElement"
    },
    {
        "name": "xml.sax.handler.ContentHandler.endElementNS()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.endElementNS"
    },
    {
        "name": "xml.sax.handler.ContentHandler.endPrefixMapping()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.endPrefixMapping"
    },
    {
        "name": "xml.sax.handler.ContentHandler.ignorableWhitespace()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.ignorableWhitespace"
    },
    {
        "name": "xml.sax.handler.ContentHandler.processingInstruction()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.processingInstruction"
    },
    {
        "name": "xml.sax.handler.ContentHandler.setDocumentLocator()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.setDocumentLocator"
    },
    {
        "name": "xml.sax.handler.ContentHandler.skippedEntity()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.skippedEntity"
    },
    {
        "name": "xml.sax.handler.ContentHandler.startDocument()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.startDocument"
    },
    {
        "name": "xml.sax.handler.ContentHandler.startElement()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.startElement"
    },
    {
        "name": "xml.sax.handler.ContentHandler.startElementNS()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.startElementNS"
    },
    {
        "name": "xml.sax.handler.ContentHandler.startPrefixMapping()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ContentHandler.startPrefixMapping"
    },
    {
        "name": "xml.sax.handler.DTDHandler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.DTDHandler"
    },
    {
        "name": "xml.sax.handler.DTDHandler.notationDecl()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.DTDHandler.notationDecl"
    },
    {
        "name": "xml.sax.handler.DTDHandler.unparsedEntityDecl()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.DTDHandler.unparsedEntityDecl"
    },
    {
        "name": "xml.sax.handler.EntityResolver",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.EntityResolver"
    },
    {
        "name": "xml.sax.handler.EntityResolver.resolveEntity()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.EntityResolver.resolveEntity"
    },
    {
        "name": "xml.sax.handler.ErrorHandler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ErrorHandler"
    },
    {
        "name": "xml.sax.handler.ErrorHandler.error()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ErrorHandler.error"
    },
    {
        "name": "xml.sax.handler.ErrorHandler.fatalError()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ErrorHandler.fatalError"
    },
    {
        "name": "xml.sax.handler.ErrorHandler.warning()",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.ErrorHandler.warning"
    },
    {
        "name": "xml.sax.handler.feature_external_ges",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_external_ges"
    },
    {
        "name": "xml.sax.handler.feature_external_pes",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_external_pes"
    },
    {
        "name": "xml.sax.handler.feature_namespaces",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_namespaces"
    },
    {
        "name": "xml.sax.handler.feature_namespace_prefixes",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_namespace_prefixes"
    },
    {
        "name": "xml.sax.handler.feature_string_interning",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_string_interning"
    },
    {
        "name": "xml.sax.handler.feature_validation",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.feature_validation"
    },
    {
        "name": "xml.sax.handler.property_declaration_handler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.property_declaration_handler"
    },
    {
        "name": "xml.sax.handler.property_dom_node",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.property_dom_node"
    },
    {
        "name": "xml.sax.handler.property_lexical_handler",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.property_lexical_handler"
    },
    {
        "name": "xml.sax.handler.property_xml_string",
        "type": "Structured Markup",
        "path": "library/xml.sax.handler#xml.sax.handler.property_xml_string"
    },
    {
        "name": "xml.sax.make_parser()",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.make_parser"
    },
    {
        "name": "xml.sax.parse()",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.parse"
    },
    {
        "name": "xml.sax.parseString()",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.parseString"
    },
    {
        "name": "xml.sax.SAXException",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXException"
    },
    {
        "name": "xml.sax.SAXException.getException()",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXException.getException"
    },
    {
        "name": "xml.sax.SAXException.getMessage()",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXException.getMessage"
    },
    {
        "name": "xml.sax.SAXNotRecognizedException",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXNotRecognizedException"
    },
    {
        "name": "xml.sax.SAXNotSupportedException",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXNotSupportedException"
    },
    {
        "name": "xml.sax.SAXParseException",
        "type": "Structured Markup",
        "path": "library/xml.sax#xml.sax.SAXParseException"
    },
    {
        "name": "xml.sax.saxutils",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils"
    },
    {
        "name": "xml.sax.saxutils.escape()",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.escape"
    },
    {
        "name": "xml.sax.saxutils.prepare_input_source()",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.prepare_input_source"
    },
    {
        "name": "xml.sax.saxutils.quoteattr()",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.quoteattr"
    },
    {
        "name": "xml.sax.saxutils.unescape()",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.unescape"
    },
    {
        "name": "xml.sax.saxutils.XMLFilterBase",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.XMLFilterBase"
    },
    {
        "name": "xml.sax.saxutils.XMLGenerator",
        "type": "Structured Markup",
        "path": "library/xml.sax.utils#xml.sax.saxutils.XMLGenerator"
    },
    {
        "name": "xml.sax.xmlreader",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader"
    },
    {
        "name": "xml.sax.xmlreader.Attributes.getLength()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Attributes.getLength"
    },
    {
        "name": "xml.sax.xmlreader.Attributes.getNames()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Attributes.getNames"
    },
    {
        "name": "xml.sax.xmlreader.Attributes.getType()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Attributes.getType"
    },
    {
        "name": "xml.sax.xmlreader.Attributes.getValue()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Attributes.getValue"
    },
    {
        "name": "xml.sax.xmlreader.AttributesImpl",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesImpl"
    },
    {
        "name": "xml.sax.xmlreader.AttributesNS.getNameByQName()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesNS.getNameByQName"
    },
    {
        "name": "xml.sax.xmlreader.AttributesNS.getQNameByName()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesNS.getQNameByName"
    },
    {
        "name": "xml.sax.xmlreader.AttributesNS.getQNames()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesNS.getQNames"
    },
    {
        "name": "xml.sax.xmlreader.AttributesNS.getValueByQName()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesNS.getValueByQName"
    },
    {
        "name": "xml.sax.xmlreader.AttributesNSImpl",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.AttributesNSImpl"
    },
    {
        "name": "xml.sax.xmlreader.IncrementalParser",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.IncrementalParser"
    },
    {
        "name": "xml.sax.xmlreader.IncrementalParser.close()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.IncrementalParser.close"
    },
    {
        "name": "xml.sax.xmlreader.IncrementalParser.feed()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.IncrementalParser.feed"
    },
    {
        "name": "xml.sax.xmlreader.IncrementalParser.reset()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.IncrementalParser.reset"
    },
    {
        "name": "xml.sax.xmlreader.InputSource",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.getByteStream()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.getByteStream"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.getCharacterStream()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.getCharacterStream"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.getEncoding()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.getEncoding"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.getPublicId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.getPublicId"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.getSystemId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.getSystemId"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.setByteStream()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.setByteStream"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.setCharacterStream()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.setCharacterStream"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.setEncoding()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.setEncoding"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.setPublicId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.setPublicId"
    },
    {
        "name": "xml.sax.xmlreader.InputSource.setSystemId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.InputSource.setSystemId"
    },
    {
        "name": "xml.sax.xmlreader.Locator",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Locator"
    },
    {
        "name": "xml.sax.xmlreader.Locator.getColumnNumber()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Locator.getColumnNumber"
    },
    {
        "name": "xml.sax.xmlreader.Locator.getLineNumber()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Locator.getLineNumber"
    },
    {
        "name": "xml.sax.xmlreader.Locator.getPublicId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Locator.getPublicId"
    },
    {
        "name": "xml.sax.xmlreader.Locator.getSystemId()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.Locator.getSystemId"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getContentHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getContentHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getDTDHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getDTDHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getEntityResolver()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getEntityResolver"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getErrorHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getErrorHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getFeature()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getFeature"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.getProperty()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.getProperty"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.parse()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.parse"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setContentHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setContentHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setDTDHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setDTDHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setEntityResolver()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setEntityResolver"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setErrorHandler()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setErrorHandler"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setFeature()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setFeature"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setLocale()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setLocale"
    },
    {
        "name": "xml.sax.xmlreader.XMLReader.setProperty()",
        "type": "Structured Markup",
        "path": "library/xml.sax.reader#xml.sax.xmlreader.XMLReader.setProperty"
    },
    {
        "name": "xmlrpc",
        "type": "Internet",
        "path": "library/xmlrpc"
    },
    {
        "name": "xmlrpc.client",
        "type": "Internet",
        "path": "library/xmlrpc.client"
    },
    {
        "name": "xmlrpc.client.Binary.data",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.Binary.data"
    },
    {
        "name": "xmlrpc.client.Binary.decode()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.Binary.decode"
    },
    {
        "name": "xmlrpc.client.Binary.encode()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.Binary.encode"
    },
    {
        "name": "xmlrpc.client.DateTime.decode()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.DateTime.decode"
    },
    {
        "name": "xmlrpc.client.DateTime.encode()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.DateTime.encode"
    },
    {
        "name": "xmlrpc.client.dumps()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.dumps"
    },
    {
        "name": "xmlrpc.client.Fault.faultCode",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.Fault.faultCode"
    },
    {
        "name": "xmlrpc.client.Fault.faultString",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.Fault.faultString"
    },
    {
        "name": "xmlrpc.client.loads()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.loads"
    },
    {
        "name": "xmlrpc.client.MultiCall",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.MultiCall"
    },
    {
        "name": "xmlrpc.client.ProtocolError.errcode",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ProtocolError.errcode"
    },
    {
        "name": "xmlrpc.client.ProtocolError.errmsg",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ProtocolError.errmsg"
    },
    {
        "name": "xmlrpc.client.ProtocolError.headers",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ProtocolError.headers"
    },
    {
        "name": "xmlrpc.client.ProtocolError.url",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ProtocolError.url"
    },
    {
        "name": "xmlrpc.client.ServerProxy",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ServerProxy"
    },
    {
        "name": "xmlrpc.client.ServerProxy.system.listMethods()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ServerProxy.system.listMethods"
    },
    {
        "name": "xmlrpc.client.ServerProxy.system.methodHelp()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ServerProxy.system.methodHelp"
    },
    {
        "name": "xmlrpc.client.ServerProxy.system.methodSignature()",
        "type": "Internet",
        "path": "library/xmlrpc.client#xmlrpc.client.ServerProxy.system.methodSignature"
    },
    {
        "name": "xmlrpc.server",
        "type": "Internet",
        "path": "library/xmlrpc.server"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler.handle_request"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler.register_function()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler.register_function"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler.register_instance"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions"
    },
    {
        "name": "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions"
    },
    {
        "name": "xmlrpc.server.DocCGIXMLRPCRequestHandler",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocCGIXMLRPCRequestHandler"
    },
    {
        "name": "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation"
    },
    {
        "name": "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name"
    },
    {
        "name": "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title"
    },
    {
        "name": "xmlrpc.server.DocXMLRPCRequestHandler",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocXMLRPCRequestHandler"
    },
    {
        "name": "xmlrpc.server.DocXMLRPCServer",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocXMLRPCServer"
    },
    {
        "name": "xmlrpc.server.DocXMLRPCServer.set_server_documentation()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocXMLRPCServer.set_server_documentation"
    },
    {
        "name": "xmlrpc.server.DocXMLRPCServer.set_server_name()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocXMLRPCServer.set_server_name"
    },
    {
        "name": "xmlrpc.server.DocXMLRPCServer.set_server_title()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.DocXMLRPCServer.set_server_title"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCRequestHandler",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCRequestHandler"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCServer",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCServer"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCServer.register_function()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCServer.register_function"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCServer.register_instance()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCServer.register_instance"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions"
    },
    {
        "name": "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions()",
        "type": "Internet",
        "path": "library/xmlrpc.server#xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions"
    },
    {
        "name": "ZeroDivisionError",
        "type": "Built-in Exceptions",
        "path": "library/exceptions#ZeroDivisionError"
    },
    {
        "name": "zip()",
        "type": "Built-in Functions",
        "path": "library/functions#zip"
    },
    {
        "name": "zipfile",
        "type": "Data Compression",
        "path": "library/zipfile"
    },
    {
        "name": "zipfile.BadZipfile",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.BadZipfile"
    },
    {
        "name": "zipfile.BadZipFile",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.BadZipFile"
    },
    {
        "name": "zipfile.is_zipfile()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.is_zipfile"
    },
    {
        "name": "zipfile.LargeZipFile",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.LargeZipFile"
    },
    {
        "name": "zipfile.PyZipFile",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.PyZipFile"
    },
    {
        "name": "zipfile.PyZipFile.writepy()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.PyZipFile.writepy"
    },
    {
        "name": "zipfile.ZipFile",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile"
    },
    {
        "name": "zipfile.ZipFile.close()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.close"
    },
    {
        "name": "zipfile.ZipFile.comment",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.comment"
    },
    {
        "name": "zipfile.ZipFile.debug",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.debug"
    },
    {
        "name": "zipfile.ZipFile.extract()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.extract"
    },
    {
        "name": "zipfile.ZipFile.extractall()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.extractall"
    },
    {
        "name": "zipfile.ZipFile.getinfo()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.getinfo"
    },
    {
        "name": "zipfile.ZipFile.infolist()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.infolist"
    },
    {
        "name": "zipfile.ZipFile.namelist()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.namelist"
    },
    {
        "name": "zipfile.ZipFile.open()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.open"
    },
    {
        "name": "zipfile.ZipFile.printdir()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.printdir"
    },
    {
        "name": "zipfile.ZipFile.read()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.read"
    },
    {
        "name": "zipfile.ZipFile.setpassword()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.setpassword"
    },
    {
        "name": "zipfile.ZipFile.testzip()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.testzip"
    },
    {
        "name": "zipfile.ZipFile.write()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.write"
    },
    {
        "name": "zipfile.ZipFile.writestr()",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipFile.writestr"
    },
    {
        "name": "zipfile.ZipInfo",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo"
    },
    {
        "name": "zipfile.ZipInfo.comment",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.comment"
    },
    {
        "name": "zipfile.ZipInfo.compress_size",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.compress_size"
    },
    {
        "name": "zipfile.ZipInfo.compress_type",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.compress_type"
    },
    {
        "name": "zipfile.ZipInfo.CRC",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.CRC"
    },
    {
        "name": "zipfile.ZipInfo.create_system",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.create_system"
    },
    {
        "name": "zipfile.ZipInfo.create_version",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.create_version"
    },
    {
        "name": "zipfile.ZipInfo.date_time",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.date_time"
    },
    {
        "name": "zipfile.ZipInfo.external_attr",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.external_attr"
    },
    {
        "name": "zipfile.ZipInfo.extra",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.extra"
    },
    {
        "name": "zipfile.ZipInfo.extract_version",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.extract_version"
    },
    {
        "name": "zipfile.ZipInfo.filename",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.filename"
    },
    {
        "name": "zipfile.ZipInfo.file_size",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.file_size"
    },
    {
        "name": "zipfile.ZipInfo.flag_bits",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.flag_bits"
    },
    {
        "name": "zipfile.ZipInfo.header_offset",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.header_offset"
    },
    {
        "name": "zipfile.ZipInfo.internal_attr",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.internal_attr"
    },
    {
        "name": "zipfile.ZipInfo.reserved",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.reserved"
    },
    {
        "name": "zipfile.ZipInfo.volume",
        "type": "Data Compression",
        "path": "library/zipfile#zipfile.ZipInfo.volume"
    },
    {
        "name": "zipimport",
        "type": "Importing",
        "path": "library/zipimport"
    },
    {
        "name": "zipimport.zipimporter",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter"
    },
    {
        "name": "zipimport.zipimporter.archive",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.archive"
    },
    {
        "name": "zipimport.zipimporter.find_module()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.find_module"
    },
    {
        "name": "zipimport.zipimporter.get_code()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.get_code"
    },
    {
        "name": "zipimport.zipimporter.get_data()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.get_data"
    },
    {
        "name": "zipimport.zipimporter.get_filename()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.get_filename"
    },
    {
        "name": "zipimport.zipimporter.get_source()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.get_source"
    },
    {
        "name": "zipimport.zipimporter.is_package()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.is_package"
    },
    {
        "name": "zipimport.zipimporter.load_module()",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.load_module"
    },
    {
        "name": "zipimport.zipimporter.prefix",
        "type": "Importing",
        "path": "library/zipimport#zipimport.zipimporter.prefix"
    },
    {
        "name": "zipimport.ZipImportError",
        "type": "Importing",
        "path": "library/zipimport#zipimport.ZipImportError"
    },
    {
        "name": "zlib",
        "type": "Data Compression",
        "path": "library/zlib"
    },
    {
        "name": "zlib.adler32()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.adler32"
    },
    {
        "name": "zlib.compress()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.compress"
    },
    {
        "name": "zlib.Compress.compress()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Compress.compress"
    },
    {
        "name": "zlib.Compress.copy()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Compress.copy"
    },
    {
        "name": "zlib.Compress.flush()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Compress.flush"
    },
    {
        "name": "zlib.compressobj()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.compressobj"
    },
    {
        "name": "zlib.crc32()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.crc32"
    },
    {
        "name": "zlib.decompress()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.decompress"
    },
    {
        "name": "zlib.Decompress.copy()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.copy"
    },
    {
        "name": "zlib.Decompress.decompress()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.decompress"
    },
    {
        "name": "zlib.Decompress.eof",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.eof"
    },
    {
        "name": "zlib.Decompress.flush()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.flush"
    },
    {
        "name": "zlib.Decompress.unconsumed_tail",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.unconsumed_tail"
    },
    {
        "name": "zlib.Decompress.unused_data",
        "type": "Data Compression",
        "path": "library/zlib#zlib.Decompress.unused_data"
    },
    {
        "name": "zlib.decompressobj()",
        "type": "Data Compression",
        "path": "library/zlib#zlib.decompressobj"
    },
    {
        "name": "zlib.error",
        "type": "Data Compression",
        "path": "library/zlib#zlib.error"
    },
    {
        "name": "_dummy_thread",
        "type": "Concurrent Execution",
        "path": "library/_dummy_thread"
    },
    {
        "name": "_thread",
        "type": "Concurrent Execution",
        "path": "library/_thread"
    }
]
